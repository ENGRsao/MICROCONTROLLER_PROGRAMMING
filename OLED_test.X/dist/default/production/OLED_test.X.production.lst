

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 24 12:15:22 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58  0000                     
    59                           ; Version 1.45
    60                           ; Generated 16/11/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F25K83 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  000AAA                     __pidataCOMRAM:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _font
    99  000AAA  06                 	db	6
   100  000AAB  08                 	db	8
   101  000AAC  20                 	db	32
   102  000AAD  5F                 	db	95
   103                           
   104                           	psect	idataBIGRAM
   105  00001E                     __pidataBIGRAM:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _characterFont
   109  00001E  00                 	db	0
   110  00001F  00                 	db	0
   111  000020  00                 	db	0
   112  000021  00                 	db	0
   113  000022  00                 	db	0
   114  000023  00                 	db	0
   115  000024  00                 	db	0
   116  000025  00                 	db	0
   117  000026  00                 	db	0
   118  000027  2F                 	db	47
   119  000028  00                 	db	0
   120  000029  00                 	db	0
   121  00002A  00                 	db	0
   122  00002B  00                 	db	0
   123  00002C  07                 	db	7
   124  00002D  00                 	db	0
   125  00002E  07                 	db	7
   126  00002F  00                 	db	0
   127  000030  00                 	db	0
   128  000031  14                 	db	20
   129  000032  7F                 	db	127
   130  000033  14                 	db	20
   131  000034  7F                 	db	127
   132  000035  14                 	db	20
   133  000036  00                 	db	0
   134  000037  24                 	db	36
   135  000038  2A                 	db	42
   136  000039  7F                 	db	127
   137  00003A  2A                 	db	42
   138  00003B  12                 	db	18
   139  00003C  00                 	db	0
   140  00003D  23                 	db	35
   141  00003E  13                 	db	19
   142  00003F  08                 	db	8
   143  000040  64                 	db	100
   144  000041  62                 	db	98
   145  000042  00                 	db	0
   146  000043  36                 	db	54
   147  000044  49                 	db	73
   148  000045  55                 	db	85
   149  000046  22                 	db	34
   150  000047  50                 	db	80
   151  000048  00                 	db	0
   152  000049  00                 	db	0
   153  00004A  05                 	db	5
   154  00004B  03                 	db	3
   155  00004C  00                 	db	0
   156  00004D  00                 	db	0
   157  00004E  00                 	db	0
   158  00004F  00                 	db	0
   159  000050  1C                 	db	28
   160  000051  22                 	db	34
   161  000052  41                 	db	65
   162  000053  00                 	db	0
   163  000054  00                 	db	0
   164  000055  00                 	db	0
   165  000056  41                 	db	65
   166  000057  22                 	db	34
   167  000058  1C                 	db	28
   168  000059  00                 	db	0
   169  00005A  00                 	db	0
   170  00005B  14                 	db	20
   171  00005C  08                 	db	8
   172  00005D  3E                 	db	62
   173  00005E  08                 	db	8
   174  00005F  14                 	db	20
   175  000060  00                 	db	0
   176  000061  08                 	db	8
   177  000062  08                 	db	8
   178  000063  3E                 	db	62
   179  000064  08                 	db	8
   180  000065  08                 	db	8
   181  000066  00                 	db	0
   182  000067  00                 	db	0
   183  000068  00                 	db	0
   184  000069  A0                 	db	160
   185  00006A  60                 	db	96
   186  00006B  00                 	db	0
   187  00006C  00                 	db	0
   188  00006D  08                 	db	8
   189  00006E  08                 	db	8
   190  00006F  08                 	db	8
   191  000070  08                 	db	8
   192  000071  08                 	db	8
   193  000072  00                 	db	0
   194  000073  00                 	db	0
   195  000074  60                 	db	96
   196  000075  60                 	db	96
   197  000076  00                 	db	0
   198  000077  00                 	db	0
   199  000078  00                 	db	0
   200  000079  20                 	db	32
   201  00007A  10                 	db	16
   202  00007B  08                 	db	8
   203  00007C  04                 	db	4
   204  00007D  02                 	db	2
   205  00007E  00                 	db	0
   206  00007F  3E                 	db	62
   207  000080  51                 	db	81
   208  000081  49                 	db	73
   209  000082  45                 	db	69
   210  000083  3E                 	db	62
   211  000084  00                 	db	0
   212  000085  00                 	db	0
   213  000086  42                 	db	66
   214  000087  7F                 	db	127
   215  000088  40                 	db	64
   216  000089  00                 	db	0
   217  00008A  00                 	db	0
   218  00008B  42                 	db	66
   219  00008C  61                 	db	97
   220  00008D  51                 	db	81
   221  00008E  49                 	db	73
   222  00008F  46                 	db	70
   223  000090  00                 	db	0
   224  000091  21                 	db	33
   225  000092  41                 	db	65
   226  000093  45                 	db	69
   227  000094  4B                 	db	75
   228  000095  31                 	db	49
   229  000096  00                 	db	0
   230  000097  18                 	db	24
   231  000098  14                 	db	20
   232  000099  12                 	db	18
   233  00009A  7F                 	db	127
   234  00009B  10                 	db	16
   235  00009C  00                 	db	0
   236  00009D  27                 	db	39
   237  00009E  45                 	db	69
   238  00009F  45                 	db	69
   239  0000A0  45                 	db	69
   240  0000A1  39                 	db	57
   241  0000A2  00                 	db	0
   242  0000A3  3C                 	db	60
   243  0000A4  4A                 	db	74
   244  0000A5  49                 	db	73
   245  0000A6  49                 	db	73
   246  0000A7  30                 	db	48
   247  0000A8  00                 	db	0
   248  0000A9  01                 	db	1
   249  0000AA  71                 	db	113
   250  0000AB  09                 	db	9
   251  0000AC  05                 	db	5
   252  0000AD  03                 	db	3
   253  0000AE  00                 	db	0
   254  0000AF  36                 	db	54
   255  0000B0  49                 	db	73
   256  0000B1  49                 	db	73
   257  0000B2  49                 	db	73
   258  0000B3  36                 	db	54
   259  0000B4  00                 	db	0
   260  0000B5  06                 	db	6
   261  0000B6  49                 	db	73
   262  0000B7  49                 	db	73
   263  0000B8  29                 	db	41
   264  0000B9  1E                 	db	30
   265  0000BA  00                 	db	0
   266  0000BB  00                 	db	0
   267  0000BC  36                 	db	54
   268  0000BD  36                 	db	54
   269  0000BE  00                 	db	0
   270  0000BF  00                 	db	0
   271  0000C0  00                 	db	0
   272  0000C1  00                 	db	0
   273  0000C2  56                 	db	86
   274  0000C3  36                 	db	54
   275  0000C4  00                 	db	0
   276  0000C5  00                 	db	0
   277  0000C6  00                 	db	0
   278  0000C7  08                 	db	8
   279  0000C8  14                 	db	20
   280  0000C9  22                 	db	34
   281  0000CA  41                 	db	65
   282  0000CB  00                 	db	0
   283  0000CC  00                 	db	0
   284  0000CD  14                 	db	20
   285  0000CE  14                 	db	20
   286  0000CF  14                 	db	20
   287  0000D0  14                 	db	20
   288  0000D1  14                 	db	20
   289  0000D2  00                 	db	0
   290  0000D3  00                 	db	0
   291  0000D4  41                 	db	65
   292  0000D5  22                 	db	34
   293  0000D6  14                 	db	20
   294  0000D7  08                 	db	8
   295  0000D8  00                 	db	0
   296  0000D9  02                 	db	2
   297  0000DA  01                 	db	1
   298  0000DB  51                 	db	81
   299  0000DC  09                 	db	9
   300  0000DD  06                 	db	6
   301  0000DE  00                 	db	0
   302  0000DF  32                 	db	50
   303  0000E0  49                 	db	73
   304  0000E1  59                 	db	89
   305  0000E2  51                 	db	81
   306  0000E3  3E                 	db	62
   307  0000E4  00                 	db	0
   308  0000E5  7C                 	db	124
   309  0000E6  12                 	db	18
   310  0000E7  11                 	db	17
   311  0000E8  12                 	db	18
   312  0000E9  7C                 	db	124
   313  0000EA  00                 	db	0
   314  0000EB  7F                 	db	127
   315  0000EC  49                 	db	73
   316  0000ED  49                 	db	73
   317  0000EE  49                 	db	73
   318  0000EF  36                 	db	54
   319  0000F0  00                 	db	0
   320  0000F1  3E                 	db	62
   321  0000F2  41                 	db	65
   322  0000F3  41                 	db	65
   323  0000F4  41                 	db	65
   324  0000F5  22                 	db	34
   325  0000F6  00                 	db	0
   326  0000F7  7F                 	db	127
   327  0000F8  41                 	db	65
   328  0000F9  41                 	db	65
   329  0000FA  22                 	db	34
   330  0000FB  1C                 	db	28
   331  0000FC  00                 	db	0
   332  0000FD  7F                 	db	127
   333  0000FE  49                 	db	73
   334  0000FF  49                 	db	73
   335  000100  49                 	db	73
   336  000101  41                 	db	65
   337  000102  00                 	db	0
   338  000103  7F                 	db	127
   339  000104  09                 	db	9
   340  000105  09                 	db	9
   341  000106  09                 	db	9
   342  000107  01                 	db	1
   343  000108  00                 	db	0
   344  000109  3E                 	db	62
   345  00010A  41                 	db	65
   346  00010B  49                 	db	73
   347  00010C  49                 	db	73
   348  00010D  7A                 	db	122
   349  00010E  00                 	db	0
   350  00010F  7F                 	db	127
   351  000110  08                 	db	8
   352  000111  08                 	db	8
   353  000112  08                 	db	8
   354  000113  7F                 	db	127
   355  000114  00                 	db	0
   356  000115  00                 	db	0
   357  000116  41                 	db	65
   358  000117  7F                 	db	127
   359  000118  41                 	db	65
   360  000119  00                 	db	0
   361  00011A  00                 	db	0
   362  00011B  20                 	db	32
   363  00011C  40                 	db	64
   364  00011D  41                 	db	65
   365  00011E  3F                 	db	63
   366  00011F  01                 	db	1
   367  000120  00                 	db	0
   368  000121  7F                 	db	127
   369  000122  08                 	db	8
   370  000123  14                 	db	20
   371  000124  22                 	db	34
   372  000125  41                 	db	65
   373  000126  00                 	db	0
   374  000127  7F                 	db	127
   375  000128  40                 	db	64
   376  000129  40                 	db	64
   377  00012A  40                 	db	64
   378  00012B  40                 	db	64
   379  00012C  00                 	db	0
   380  00012D  7F                 	db	127
   381  00012E  02                 	db	2
   382  00012F  0C                 	db	12
   383  000130  02                 	db	2
   384  000131  7F                 	db	127
   385  000132  00                 	db	0
   386  000133  7F                 	db	127
   387  000134  04                 	db	4
   388  000135  08                 	db	8
   389  000136  10                 	db	16
   390  000137  7F                 	db	127
   391  000138  00                 	db	0
   392  000139  3E                 	db	62
   393  00013A  41                 	db	65
   394  00013B  41                 	db	65
   395  00013C  41                 	db	65
   396  00013D  3E                 	db	62
   397  00013E  00                 	db	0
   398  00013F  7F                 	db	127
   399  000140  09                 	db	9
   400  000141  09                 	db	9
   401  000142  09                 	db	9
   402  000143  06                 	db	6
   403  000144  00                 	db	0
   404  000145  3E                 	db	62
   405  000146  41                 	db	65
   406  000147  51                 	db	81
   407  000148  21                 	db	33
   408  000149  5E                 	db	94
   409  00014A  00                 	db	0
   410  00014B  7F                 	db	127
   411  00014C  09                 	db	9
   412  00014D  19                 	db	25
   413  00014E  29                 	db	41
   414  00014F  46                 	db	70
   415  000150  00                 	db	0
   416  000151  46                 	db	70
   417  000152  49                 	db	73
   418  000153  49                 	db	73
   419  000154  49                 	db	73
   420  000155  31                 	db	49
   421  000156  00                 	db	0
   422  000157  01                 	db	1
   423  000158  01                 	db	1
   424  000159  7F                 	db	127
   425  00015A  01                 	db	1
   426  00015B  01                 	db	1
   427  00015C  00                 	db	0
   428  00015D  3F                 	db	63
   429  00015E  40                 	db	64
   430  00015F  40                 	db	64
   431  000160  40                 	db	64
   432  000161  3F                 	db	63
   433  000162  00                 	db	0
   434  000163  1F                 	db	31
   435  000164  20                 	db	32
   436  000165  40                 	db	64
   437  000166  20                 	db	32
   438  000167  1F                 	db	31
   439  000168  00                 	db	0
   440  000169  3F                 	db	63
   441  00016A  40                 	db	64
   442  00016B  38                 	db	56
   443  00016C  40                 	db	64
   444  00016D  3F                 	db	63
   445  00016E  00                 	db	0
   446  00016F  63                 	db	99
   447  000170  14                 	db	20
   448  000171  08                 	db	8
   449  000172  14                 	db	20
   450  000173  63                 	db	99
   451  000174  00                 	db	0
   452  000175  07                 	db	7
   453  000176  08                 	db	8
   454  000177  70                 	db	112
   455  000178  08                 	db	8
   456  000179  07                 	db	7
   457  00017A  00                 	db	0
   458  00017B  61                 	db	97
   459  00017C  51                 	db	81
   460  00017D  49                 	db	73
   461  00017E  45                 	db	69
   462  00017F  43                 	db	67
   463  000180  00                 	db	0
   464  000181  00                 	db	0
   465  000182  7F                 	db	127
   466  000183  41                 	db	65
   467  000184  41                 	db	65
   468  000185  00                 	db	0
   469  000186  AA                 	db	170
   470  000187  55                 	db	85
   471  000188  AA                 	db	170
   472  000189  55                 	db	85
   473  00018A  AA                 	db	170
   474  00018B  55                 	db	85
   475  00018C  00                 	db	0
   476  00018D  00                 	db	0
   477  00018E  41                 	db	65
   478  00018F  41                 	db	65
   479  000190  7F                 	db	127
   480  000191  00                 	db	0
   481  000192  00                 	db	0
   482  000193  04                 	db	4
   483  000194  02                 	db	2
   484  000195  01                 	db	1
   485  000196  02                 	db	2
   486  000197  04                 	db	4
   487  000198  00                 	db	0
   488  000199  40                 	db	64
   489  00019A  40                 	db	64
   490  00019B  40                 	db	64
   491  00019C  40                 	db	64
   492  00019D  40                 	db	64
   493  00019E  00                 	db	0
   494  00019F  00                 	db	0
   495  0001A0  03                 	db	3
   496  0001A1  05                 	db	5
   497  0001A2  00                 	db	0
   498  0001A3  00                 	db	0
   499  0001A4  00                 	db	0
   500  0001A5  20                 	db	32
   501  0001A6  54                 	db	84
   502  0001A7  54                 	db	84
   503  0001A8  54                 	db	84
   504  0001A9  78                 	db	120
   505  0001AA  00                 	db	0
   506  0001AB  7F                 	db	127
   507  0001AC  48                 	db	72
   508  0001AD  44                 	db	68
   509  0001AE  44                 	db	68
   510  0001AF  38                 	db	56
   511  0001B0  00                 	db	0
   512  0001B1  38                 	db	56
   513  0001B2  44                 	db	68
   514  0001B3  44                 	db	68
   515  0001B4  44                 	db	68
   516  0001B5  20                 	db	32
   517  0001B6  00                 	db	0
   518  0001B7  38                 	db	56
   519  0001B8  44                 	db	68
   520  0001B9  44                 	db	68
   521  0001BA  48                 	db	72
   522  0001BB  7F                 	db	127
   523  0001BC  00                 	db	0
   524  0001BD  38                 	db	56
   525  0001BE  54                 	db	84
   526  0001BF  54                 	db	84
   527  0001C0  54                 	db	84
   528  0001C1  18                 	db	24
   529  0001C2  00                 	db	0
   530  0001C3  08                 	db	8
   531  0001C4  7E                 	db	126
   532  0001C5  09                 	db	9
   533  0001C6  01                 	db	1
   534  0001C7  02                 	db	2
   535  0001C8  00                 	db	0
   536  0001C9  18                 	db	24
   537  0001CA  A4                 	db	164
   538  0001CB  A4                 	db	164
   539  0001CC  A4                 	db	164
   540  0001CD  7C                 	db	124
   541  0001CE  00                 	db	0
   542  0001CF  7F                 	db	127
   543  0001D0  08                 	db	8
   544  0001D1  04                 	db	4
   545  0001D2  04                 	db	4
   546  0001D3  78                 	db	120
   547  0001D4  00                 	db	0
   548  0001D5  00                 	db	0
   549  0001D6  44                 	db	68
   550  0001D7  7D                 	db	125
   551  0001D8  40                 	db	64
   552  0001D9  00                 	db	0
   553  0001DA  00                 	db	0
   554  0001DB  40                 	db	64
   555  0001DC  80                 	db	128
   556  0001DD  84                 	db	132
   557  0001DE  7D                 	db	125
   558  0001DF  00                 	db	0
   559  0001E0  00                 	db	0
   560  0001E1  7F                 	db	127
   561  0001E2  10                 	db	16
   562  0001E3  28                 	db	40
   563  0001E4  44                 	db	68
   564  0001E5  00                 	db	0
   565  0001E6  00                 	db	0
   566  0001E7  00                 	db	0
   567  0001E8  41                 	db	65
   568  0001E9  7F                 	db	127
   569  0001EA  40                 	db	64
   570  0001EB  00                 	db	0
   571  0001EC  00                 	db	0
   572  0001ED  7C                 	db	124
   573  0001EE  04                 	db	4
   574  0001EF  18                 	db	24
   575  0001F0  04                 	db	4
   576  0001F1  78                 	db	120
   577  0001F2  00                 	db	0
   578  0001F3  7C                 	db	124
   579  0001F4  08                 	db	8
   580  0001F5  04                 	db	4
   581  0001F6  04                 	db	4
   582  0001F7  78                 	db	120
   583  0001F8  00                 	db	0
   584  0001F9  38                 	db	56
   585  0001FA  44                 	db	68
   586  0001FB  44                 	db	68
   587  0001FC  44                 	db	68
   588  0001FD  38                 	db	56
   589  0001FE  00                 	db	0
   590  0001FF  FC                 	db	252
   591  000200  24                 	db	36
   592  000201  24                 	db	36
   593  000202  24                 	db	36
   594  000203  18                 	db	24
   595  000204  00                 	db	0
   596  000205  18                 	db	24
   597  000206  24                 	db	36
   598  000207  24                 	db	36
   599  000208  18                 	db	24
   600  000209  FC                 	db	252
   601  00020A  00                 	db	0
   602  00020B  7C                 	db	124
   603  00020C  08                 	db	8
   604  00020D  04                 	db	4
   605  00020E  04                 	db	4
   606  00020F  08                 	db	8
   607  000210  00                 	db	0
   608  000211  48                 	db	72
   609  000212  54                 	db	84
   610  000213  54                 	db	84
   611  000214  54                 	db	84
   612  000215  20                 	db	32
   613  000216  00                 	db	0
   614  000217  04                 	db	4
   615  000218  3F                 	db	63
   616  000219  44                 	db	68
   617  00021A  40                 	db	64
   618  00021B  20                 	db	32
   619  00021C  00                 	db	0
   620  00021D  3C                 	db	60
   621  00021E  40                 	db	64
   622  00021F  40                 	db	64
   623  000220  20                 	db	32
   624  000221  7C                 	db	124
   625  000222  00                 	db	0
   626  000223  1C                 	db	28
   627  000224  20                 	db	32
   628  000225  40                 	db	64
   629  000226  20                 	db	32
   630  000227  1C                 	db	28
   631  000228  00                 	db	0
   632  000229  3C                 	db	60
   633  00022A  40                 	db	64
   634  00022B  30                 	db	48
   635  00022C  40                 	db	64
   636  00022D  3C                 	db	60
   637  00022E  00                 	db	0
   638  00022F  44                 	db	68
   639  000230  28                 	db	40
   640  000231  10                 	db	16
   641  000232  28                 	db	40
   642  000233  44                 	db	68
   643  000234  00                 	db	0
   644  000235  1C                 	db	28
   645  000236  A0                 	db	160
   646  000237  A0                 	db	160
   647  000238  A0                 	db	160
   648  000239  7C                 	db	124
   649  00023A  00                 	db	0
   650  00023B  44                 	db	68
   651  00023C  64                 	db	100
   652  00023D  54                 	db	84
   653  00023E  4C                 	db	76
   654  00023F  44                 	db	68
   655  000240  00                 	db	0
   656  000241  00                 	db	0
   657  000242  10                 	db	16
   658  000243  7C                 	db	124
   659  000244  82                 	db	130
   660  000245  00                 	db	0
   661  000246  00                 	db	0
   662  000247  00                 	db	0
   663  000248  00                 	db	0
   664  000249  FF                 	db	255
   665  00024A  00                 	db	0
   666  00024B  00                 	db	0
   667  00024C  00                 	db	0
   668  00024D  00                 	db	0
   669  00024E  82                 	db	130
   670  00024F  7C                 	db	124
   671  000250  10                 	db	16
   672  000251  00                 	db	0
   673  000252  00                 	db	0
   674  000253  00                 	db	0
   675  000254  06                 	db	6
   676  000255  09                 	db	9
   677  000256  09                 	db	9
   678  000257  06                 	db	6
   679                           
   680                           	psect	mediumconst
   681  007EB2                     __pmediumconst:
   682                           	opt stack 0
   683  007EB2  00                 	db	0
   684  007EB3                     _capFont:
   685                           	opt stack 0
   686  007EB3  00                 	db	0
   687  007EB4  00                 	db	0
   688  007EB5  00                 	db	0
   689  007EB6  00                 	db	0
   690  007EB7  00                 	db	0
   691  007EB8  00                 	db	0
   692  007EB9  00                 	db	0
   693  007EBA  5F                 	db	95
   694  007EBB  00                 	db	0
   695  007EBC  00                 	db	0
   696  007EBD  00                 	db	0
   697  007EBE  07                 	db	7
   698  007EBF  00                 	db	0
   699  007EC0  07                 	db	7
   700  007EC1  00                 	db	0
   701  007EC2  12                 	db	18
   702  007EC3  3F                 	db	63
   703  007EC4  12                 	db	18
   704  007EC5  3F                 	db	63
   705  007EC6  12                 	db	18
   706  007EC7  04                 	db	4
   707  007EC8  25                 	db	37
   708  007EC9  6B                 	db	107
   709  007ECA  25                 	db	37
   710  007ECB  10                 	db	16
   711  007ECC  46                 	db	70
   712  007ECD  36                 	db	54
   713  007ECE  1C                 	db	28
   714  007ECF  36                 	db	54
   715  007ED0  31                 	db	49
   716  007ED1  36                 	db	54
   717  007ED2  49                 	db	73
   718  007ED3  59                 	db	89
   719  007ED4  26                 	db	38
   720  007ED5  50                 	db	80
   721  007ED6  00                 	db	0
   722  007ED7  00                 	db	0
   723  007ED8  03                 	db	3
   724  007ED9  00                 	db	0
   725  007EDA  00                 	db	0
   726  007EDB  00                 	db	0
   727  007EDC  00                 	db	0
   728  007EDD  3E                 	db	62
   729  007EDE  41                 	db	65
   730  007EDF  41                 	db	65
   731  007EE0  41                 	db	65
   732  007EE1  41                 	db	65
   733  007EE2  3E                 	db	62
   734  007EE3  00                 	db	0
   735  007EE4  00                 	db	0
   736  007EE5  0A                 	db	10
   737  007EE6  04                 	db	4
   738  007EE7  1F                 	db	31
   739  007EE8  04                 	db	4
   740  007EE9  0A                 	db	10
   741  007EEA  08                 	db	8
   742  007EEB  08                 	db	8
   743  007EEC  3E                 	db	62
   744  007EED  08                 	db	8
   745  007EEE  08                 	db	8
   746  007EEF  00                 	db	0
   747  007EF0  40                 	db	64
   748  007EF1  30                 	db	48
   749  007EF2  00                 	db	0
   750  007EF3  00                 	db	0
   751  007EF4  00                 	db	0
   752  007EF5  08                 	db	8
   753  007EF6  08                 	db	8
   754  007EF7  08                 	db	8
   755  007EF8  00                 	db	0
   756  007EF9  00                 	db	0
   757  007EFA  00                 	db	0
   758  007EFB  40                 	db	64
   759  007EFC  00                 	db	0
   760  007EFD  00                 	db	0
   761  007EFE  40                 	db	64
   762  007EFF  30                 	db	48
   763  007F00  1C                 	db	28
   764  007F01  06                 	db	6
   765  007F02  01                 	db	1
   766  007F03  7F                 	db	127
   767  007F04  61                 	db	97
   768  007F05  5D                 	db	93
   769  007F06  43                 	db	67
   770  007F07  7F                 	db	127
   771  007F08  04                 	db	4
   772  007F09  42                 	db	66
   773  007F0A  7F                 	db	127
   774  007F0B  40                 	db	64
   775  007F0C  00                 	db	0
   776  007F0D  62                 	db	98
   777  007F0E  51                 	db	81
   778  007F0F  49                 	db	73
   779  007F10  49                 	db	73
   780  007F11  46                 	db	70
   781  007F12  60                 	db	96
   782  007F13  41                 	db	65
   783  007F14  49                 	db	73
   784  007F15  4D                 	db	77
   785  007F16  3B                 	db	59
   786  007F17  0F                 	db	15
   787  007F18  08                 	db	8
   788  007F19  08                 	db	8
   789  007F1A  7E                 	db	126
   790  007F1B  08                 	db	8
   791  007F1C  20                 	db	32
   792  007F1D  47                 	db	71
   793  007F1E  45                 	db	69
   794  007F1F  25                 	db	37
   795  007F20  19                 	db	25
   796  007F21  3C                 	db	60
   797  007F22  4A                 	db	74
   798  007F23  49                 	db	73
   799  007F24  49                 	db	73
   800  007F25  60                 	db	96
   801  007F26  01                 	db	1
   802  007F27  71                 	db	113
   803  007F28  19                 	db	25
   804  007F29  0D                 	db	13
   805  007F2A  07                 	db	7
   806  007F2B  36                 	db	54
   807  007F2C  49                 	db	73
   808  007F2D  49                 	db	73
   809  007F2E  49                 	db	73
   810  007F2F  36                 	db	54
   811  007F30  06                 	db	6
   812  007F31  49                 	db	73
   813  007F32  49                 	db	73
   814  007F33  49                 	db	73
   815  007F34  3E                 	db	62
   816  007F35  00                 	db	0
   817  007F36  00                 	db	0
   818  007F37  14                 	db	20
   819  007F38  00                 	db	0
   820  007F39  00                 	db	0
   821  007F3A  00                 	db	0
   822  007F3B  40                 	db	64
   823  007F3C  34                 	db	52
   824  007F3D  00                 	db	0
   825  007F3E  00                 	db	0
   826  007F3F  00                 	db	0
   827  007F40  08                 	db	8
   828  007F41  14                 	db	20
   829  007F42  22                 	db	34
   830  007F43  00                 	db	0
   831  007F44  00                 	db	0
   832  007F45  14                 	db	20
   833  007F46  14                 	db	20
   834  007F47  14                 	db	20
   835  007F48  00                 	db	0
   836  007F49  00                 	db	0
   837  007F4A  22                 	db	34
   838  007F4B  14                 	db	20
   839  007F4C  08                 	db	8
   840  007F4D  00                 	db	0
   841  007F4E  02                 	db	2
   842  007F4F  01                 	db	1
   843  007F50  51                 	db	81
   844  007F51  09                 	db	9
   845  007F52  06                 	db	6
   846  007F53  2E                 	db	46
   847  007F54  41                 	db	65
   848  007F55  5D                 	db	93
   849  007F56  55                 	db	85
   850  007F57  1E                 	db	30
   851  007F58  7E                 	db	126
   852  007F59  09                 	db	9
   853  007F5A  09                 	db	9
   854  007F5B  09                 	db	9
   855  007F5C  7E                 	db	126
   856  007F5D  41                 	db	65
   857  007F5E  7F                 	db	127
   858  007F5F  49                 	db	73
   859  007F60  49                 	db	73
   860  007F61  36                 	db	54
   861  007F62  3E                 	db	62
   862  007F63  41                 	db	65
   863  007F64  41                 	db	65
   864  007F65  41                 	db	65
   865  007F66  41                 	db	65
   866  007F67  41                 	db	65
   867  007F68  7F                 	db	127
   868  007F69  41                 	db	65
   869  007F6A  41                 	db	65
   870  007F6B  3E                 	db	62
   871  007F6C  7F                 	db	127
   872  007F6D  49                 	db	73
   873  007F6E  49                 	db	73
   874  007F6F  49                 	db	73
   875  007F70  41                 	db	65
   876  007F71  7F                 	db	127
   877  007F72  09                 	db	9
   878  007F73  09                 	db	9
   879  007F74  09                 	db	9
   880  007F75  01                 	db	1
   881  007F76  3E                 	db	62
   882  007F77  41                 	db	65
   883  007F78  41                 	db	65
   884  007F79  49                 	db	73
   885  007F7A  79                 	db	121
   886  007F7B  7F                 	db	127
   887  007F7C  08                 	db	8
   888  007F7D  08                 	db	8
   889  007F7E  08                 	db	8
   890  007F7F  7F                 	db	127
   891  007F80  00                 	db	0
   892  007F81  00                 	db	0
   893  007F82  7F                 	db	127
   894  007F83  00                 	db	0
   895  007F84  00                 	db	0
   896  007F85  60                 	db	96
   897  007F86  40                 	db	64
   898  007F87  41                 	db	65
   899  007F88  41                 	db	65
   900  007F89  3F                 	db	63
   901  007F8A  7F                 	db	127
   902  007F8B  08                 	db	8
   903  007F8C  1C                 	db	28
   904  007F8D  36                 	db	54
   905  007F8E  63                 	db	99
   906  007F8F  7F                 	db	127
   907  007F90  40                 	db	64
   908  007F91  40                 	db	64
   909  007F92  40                 	db	64
   910  007F93  40                 	db	64
   911  007F94  7F                 	db	127
   912  007F95  06                 	db	6
   913  007F96  0C                 	db	12
   914  007F97  06                 	db	6
   915  007F98  7F                 	db	127
   916  007F99  7F                 	db	127
   917  007F9A  06                 	db	6
   918  007F9B  1C                 	db	28
   919  007F9C  30                 	db	48
   920  007F9D  7F                 	db	127
   921  007F9E  7F                 	db	127
   922  007F9F  41                 	db	65
   923  007FA0  41                 	db	65
   924  007FA1  41                 	db	65
   925  007FA2  7F                 	db	127
   926  007FA3  01                 	db	1
   927  007FA4  7F                 	db	127
   928  007FA5  09                 	db	9
   929  007FA6  09                 	db	9
   930  007FA7  06                 	db	6
   931  007FA8  3E                 	db	62
   932  007FA9  41                 	db	65
   933  007FAA  51                 	db	81
   934  007FAB  21                 	db	33
   935  007FAC  5E                 	db	94
   936  007FAD  7F                 	db	127
   937  007FAE  09                 	db	9
   938  007FAF  19                 	db	25
   939  007FB0  29                 	db	41
   940  007FB1  46                 	db	70
   941  007FB2  46                 	db	70
   942  007FB3  49                 	db	73
   943  007FB4  49                 	db	73
   944  007FB5  49                 	db	73
   945  007FB6  31                 	db	49
   946  007FB7  01                 	db	1
   947  007FB8  01                 	db	1
   948  007FB9  7F                 	db	127
   949  007FBA  01                 	db	1
   950  007FBB  01                 	db	1
   951  007FBC  3F                 	db	63
   952  007FBD  40                 	db	64
   953  007FBE  40                 	db	64
   954  007FBF  40                 	db	64
   955  007FC0  3F                 	db	63
   956  007FC1  7F                 	db	127
   957  007FC2  60                 	db	96
   958  007FC3  38                 	db	56
   959  007FC4  0E                 	db	14
   960  007FC5  03                 	db	3
   961  007FC6  3F                 	db	63
   962  007FC7  40                 	db	64
   963  007FC8  38                 	db	56
   964  007FC9  40                 	db	64
   965  007FCA  3F                 	db	63
   966  007FCB  63                 	db	99
   967  007FCC  36                 	db	54
   968  007FCD  1C                 	db	28
   969  007FCE  36                 	db	54
   970  007FCF  63                 	db	99
   971  007FD0  03                 	db	3
   972  007FD1  0E                 	db	14
   973  007FD2  78                 	db	120
   974  007FD3  0E                 	db	14
   975  007FD4  03                 	db	3
   976  007FD5  41                 	db	65
   977  007FD6  71                 	db	113
   978  007FD7  5D                 	db	93
   979  007FD8  47                 	db	71
   980  007FD9  41                 	db	65
   981  007FDA  00                 	db	0
   982  007FDB  00                 	db	0
   983  007FDC  7F                 	db	127
   984  007FDD  41                 	db	65
   985  007FDE  41                 	db	65
   986  007FDF  01                 	db	1
   987  007FE0  06                 	db	6
   988  007FE1  1C                 	db	28
   989  007FE2  30                 	db	48
   990  007FE3  40                 	db	64
   991  007FE4  04                 	db	4
   992  007FE5  02                 	db	2
   993  007FE6  01                 	db	1
   994  007FE7  02                 	db	2
   995  007FE8  04                 	db	4
   996  007FE9  40                 	db	64
   997  007FEA  40                 	db	64
   998  007FEB  40                 	db	64
   999  007FEC  40                 	db	64
  1000  007FED  40                 	db	64
  1001  007FEE  00                 	db	0
  1002  007FEF  00                 	db	0
  1003  007FF0  01                 	db	1
  1004  007FF1  02                 	db	2
  1005  007FF2  00                 	db	0
  1006  007FF3                     __end_of_capFont:
  1007                           	opt stack 0
  1008  007FF3                     STR_1:
  1009  007FF3  48                 	db	72	;'H'
  1010  007FF4  45                 	db	69	;'E'
  1011  007FF5  4C                 	db	76	;'L'
  1012  007FF6  4C                 	db	76	;'L'
  1013  007FF7  4F                 	db	79	;'O'
  1014  007FF8  20                 	db	32
  1015  007FF9  57                 	db	87	;'W'
  1016  007FFA  4F                 	db	79	;'O'
  1017  007FFB  52                 	db	82	;'R'
  1018  007FFC  4C                 	db	76	;'L'
  1019  007FFD  44                 	db	68	;'D'
  1020  007FFE  00                 	db	0
  1021                           
  1022                           ; #config settings
  1023  007FFF  00                 	db	0	; dummy byte at the end
  1024  0000                     
  1025                           	psect	nvCOMRAM
  1026  00004C                     __pnvCOMRAM:
  1027                           	opt stack 0
  1028  00004C                     _UART1_ErrorHandler:
  1029                           	opt stack 0
  1030  00004C                     	ds	2
  1031  00004E                     _UART1_OverrunErrorHandler:
  1032                           	opt stack 0
  1033  00004E                     	ds	2
  1034  000050                     _UART1_FramingErrorHandler:
  1035                           	opt stack 0
  1036  000050                     	ds	2
  1037  000052                     _UART1_TxInterruptHandler:
  1038                           	opt stack 0
  1039  000052                     	ds	2
  1040  000054                     _UART1_RxInterruptHandler:
  1041                           	opt stack 0
  1042  000054                     	ds	2
  1043  000056                     _timer0ReloadVal16bit:
  1044                           	opt stack 0
  1045  000056                     	ds	2
  1046  000058                     _uart1TxBufferRemaining:
  1047                           	opt stack 0
  1048  000058                     	ds	1
  1049  0000                     _PMD7	set	14791
  1050  0000                     _PMD6	set	14790
  1051  0000                     _PMD5	set	14789
  1052  0000                     _PMD4	set	14788
  1053  0000                     _PMD3	set	14787
  1054  0000                     _PMD2	set	14786
  1055  0000                     _PMD1	set	14785
  1056  0000                     _PMD0	set	14784
  1057  0000                     _OSCTUNE	set	14814
  1058  0000                     _OSCFRQ	set	14815
  1059  0000                     _OSCEN	set	14813
  1060  0000                     _OSCCON3	set	14811
  1061  0000                     _OSCCON1	set	14809
  1062  0000                     _PIE3bits	set	14739
  1063  0000                     _PIR4bits	set	14756
  1064  0000                     _PIR3bits	set	14755
  1065  0000                     _I2C1SCLPPS	set	15075
  1066  0000                     _U1RXPPS	set	15079
  1067  0000                     _RC4PPS	set	14868
  1068  0000                     _RC3PPS	set	14867
  1069  0000                     _I2C1SDAPPS	set	15076
  1070  0000                     _SLRCONC	set	14947
  1071  0000                     _SLRCONB	set	14931
  1072  0000                     _SLRCONA	set	14915
  1073  0000                     _ODCONC	set	14946
  1074  0000                     _ODCONB	set	14930
  1075  0000                     _ODCONA	set	14914
  1076  0000                     _WPUC	set	14945
  1077  0000                     _WPUA	set	14913
  1078  0000                     _WPUB	set	14929
  1079  0000                     _WPUE	set	14977
  1080  0000                     _ANSELA	set	14912
  1081  0000                     _ANSELB	set	14928
  1082  0000                     _ANSELC	set	14944
  1083  0000                     _I2C1ADB1	set	15726
  1084  0000                     _I2C1CNT	set	15724
  1085  0000                     _I2C1PIRbits	set	15737
  1086  0000                     _I2C1RXB	set	15722
  1087  0000                     _I2C1TXB	set	15723
  1088  0000                     _I2C1STAT1bits	set	15736
  1089  0000                     _I2C1STAT0bits	set	15735
  1090  0000                     _I2C1ERR	set	15734
  1091  0000                     _I2C1PIR	set	15737
  1092  0000                     _I2C1CON0	set	15731
  1093  0000                     _I2C1CLK	set	15739
  1094  0000                     _I2C1CON2	set	15733
  1095  0000                     _I2C1CON1	set	15732
  1096  0000                     _I2C1CON0bits	set	15731
  1097  0000                     _U1RXB	set	15848
  1098  0000                     _U1TXB	set	15850
  1099  0000                     _U1ERRIRbits	set	15865
  1100  0000                     _U1ERRIE	set	15866
  1101  0000                     _U1ERRIR	set	15865
  1102  0000                     _U1UIR	set	15864
  1103  0000                     _U1FIFO	set	15863
  1104  0000                     _U1BRGH	set	15862
  1105  0000                     _U1BRGL	set	15861
  1106  0000                     _U1CON2	set	15860
  1107  0000                     _U1CON1	set	15859
  1108  0000                     _U1CON0	set	15858
  1109  0000                     _U1P3H	set	15857
  1110  0000                     _U1P3L	set	15856
  1111  0000                     _U1P2H	set	15855
  1112  0000                     _U1P2L	set	15854
  1113  0000                     _U1P1H	set	15853
  1114  0000                     _U1P1L	set	15852
  1115  0000                     _TRISC	set	16324
  1116  0000                     _TRISB	set	16323
  1117  0000                     _TRISA	set	16322
  1118  0000                     _LATC	set	16316
  1119  0000                     _LATB	set	16315
  1120  0000                     _LATA	set	16314
  1121  0000                     _INTCON0bits	set	16338
  1122  0000                     _PR2	set	16299
  1123  0000                     _TMR2	set	16298
  1124  0000                     _T2CONbits	set	16300
  1125  0000                     _T2RSTbits	set	16303
  1126  0000                     _T2HLTbits	set	16301
  1127  0000                     _T2CON	set	16300
  1128  0000                     _T2TMR	set	16298
  1129  0000                     _T2PR	set	16299
  1130  0000                     _T2RST	set	16303
  1131  0000                     _T2HLT	set	16301
  1132  0000                     _T2CLKCON	set	16302
  1133  0000                     _T0CON0bits	set	16312
  1134  0000                     _T0CON0	set	16312
  1135  0000                     _TMR0L	set	16310
  1136  0000                     _TMR0H	set	16311
  1137  0000                     _T0CON1	set	16313
  1138                           
  1139                           	psect	cinit
  1140  00053E                     __pcinit:
  1141                           	opt stack 0
  1142  00053E                     start_initialization:
  1143                           	opt stack 0
  1144  00053E                     __initialization:
  1145                           	opt stack 0
  1146                           
  1147                           ; Initialize objects allocated to BIGRAM (570 bytes)
  1148                           ; load TBLPTR registers with __pidataBIGRAM
  1149  00053E  0E1E               	movlw	low __pidataBIGRAM
  1150  000540  6EF6               	movwf	16374,c
  1151  000542  0E00               	movlw	high __pidataBIGRAM
  1152  000544  6EF7               	movwf	16375,c
  1153  000546  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  1154  000548  6EF8               	movwf	16376,c
  1155  00054A  EE01  F080         	lfsr	0,__pdataBIGRAM
  1156  00054E  EE10 F23A          	lfsr	1,570
  1157  000552                     copy_data0:
  1158  000552  0009               	tblrd		*+
  1159  000554  006F FFD7 FFEE     	movff	16373,16366
  1160  00055A  50E5               	movf	16357,w,c
  1161  00055C  50E1               	movf	16353,w,c
  1162  00055E  E1F9               	bnz	copy_data0
  1163  000560  50E2               	movf	16354,w,c
  1164  000562  E1F7               	bnz	copy_data0
  1165                           
  1166                           ; Initialize objects allocated to COMRAM (4 bytes)
  1167                           ; load TBLPTR registers with __pidataCOMRAM
  1168  000564  0EAA               	movlw	low __pidataCOMRAM
  1169  000566  6EF6               	movwf	16374,c
  1170  000568  0E0A               	movlw	high __pidataCOMRAM
  1171  00056A  6EF7               	movwf	16375,c
  1172  00056C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1173  00056E  6EF8               	movwf	16376,c
  1174  000570  EE00  F059         	lfsr	0,__pdataCOMRAM
  1175  000574  EE10 F004          	lfsr	1,4
  1176  000578                     copy_data1:
  1177  000578  0009               	tblrd		*+
  1178  00057A  006F FFD7 FFEE     	movff	16373,16366
  1179  000580  50E5               	movf	16357,w,c
  1180  000582  50E1               	movf	16353,w,c
  1181  000584  E1F9               	bnz	copy_data1
  1182                           
  1183                           ; Clear objects allocated to BIGRAM (1024 bytes)
  1184  000586  EE00  F080         	lfsr	0,__pbssBIGRAM
  1185  00058A  EE11 F000          	lfsr	1,1024
  1186  00058E                     clear_0:
  1187  00058E  6AEE               	clrf	16366,c
  1188  000590  50E5               	movf	16357,w,c
  1189  000592  50E1               	movf	16353,w,c
  1190  000594  E1FC               	bnz	clear_0
  1191  000596  50E2               	movf	16354,w,c
  1192  000598  E1FA               	bnz	clear_0
  1193                           
  1194                           ; Clear objects allocated to BANK0 (32 bytes)
  1195  00059A  EE00  F060         	lfsr	0,__pbssBANK0
  1196  00059E  0E20               	movlw	32
  1197  0005A0                     clear_1:
  1198  0005A0  6AEE               	clrf	16366,c
  1199  0005A2  06E8               	decf	16360,f,c
  1200  0005A4  E1FD               	bnz	clear_1
  1201                           
  1202                           ; Clear objects allocated to COMRAM (35 bytes)
  1203  0005A6  EE00  F029         	lfsr	0,__pbssCOMRAM
  1204  0005AA  0E23               	movlw	35
  1205  0005AC                     clear_2:
  1206  0005AC  6AEE               	clrf	16366,c
  1207  0005AE  06E8               	decf	16360,f,c
  1208  0005B0  E1FD               	bnz	clear_2
  1209                           
  1210                           ;
  1211                           ; Setup IVTBASE
  1212                           ;
  1213  0005B2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1214  0005B4  6ED5               	movwf	213,c
  1215  0005B6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1216  0005B8  6ED6               	movwf	214,c
  1217  0005BA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1218  0005BC  6ED7               	movwf	215,c
  1219  0005BE                     end_of_initialization:
  1220                           	opt stack 0
  1221  0005BE                     __end_of__initialization:
  1222                           	opt stack 0
  1223  0005BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1224  0005C0  6EF8               	movwf	16376,c
  1225  0005C2  0100               	movlb	0
  1226  0005C4  EFC6  F004         	goto	_main	;jump to C main() function
  1227                           
  1228                           	psect	bssCOMRAM
  1229  000029                     __pbssCOMRAM:
  1230                           	opt stack 0
  1231  000029                     _uart1RxStatusBuffer:
  1232                           	opt stack 0
  1233  000029                     	ds	8
  1234  000031                     _uart1RxBuffer:
  1235                           	opt stack 0
  1236  000031                     	ds	8
  1237  000039                     _uart1TxBuffer:
  1238                           	opt stack 0
  1239  000039                     	ds	8
  1240  000041                     _lastError:
  1241                           	opt stack 0
  1242  000041                     	ds	1
  1243  000042                     _uart1RxLastError:
  1244                           	opt stack 0
  1245  000042                     	ds	1
  1246  000043                     _uart1RxCount:
  1247                           	opt stack 0
  1248  000043                     	ds	1
  1249  000044                     _uart1RxTail:
  1250                           	opt stack 0
  1251  000044                     	ds	1
  1252  000045                     _uart1RxHead:
  1253                           	opt stack 0
  1254  000045                     	ds	1
  1255  000046                     _uart1TxTail:
  1256                           	opt stack 0
  1257  000046                     	ds	1
  1258  000047                     _uart1TxHead:
  1259                           	opt stack 0
  1260  000047                     	ds	1
  1261  000048                     _leftOver:
  1262                           	opt stack 0
  1263  000048                     	ds	4
  1264                           
  1265                           	psect	dataCOMRAM
  1266  000059                     __pdataCOMRAM:
  1267                           	opt stack 0
  1268  000059                     _font:
  1269                           	opt stack 0
  1270  000059                     	ds	4
  1271                           
  1272                           	psect	bssBANK0
  1273  000060                     __pbssBANK0:
  1274                           	opt stack 0
  1275  000060                     _clearPixel:
  1276                           	opt stack 0
  1277  000060                     	ds	32
  1278                           
  1279                           	psect	bssBIGRAM
  1280  000080                     __pbssBIGRAM:
  1281                           	opt stack 0
  1282  000080                     _scrbuf:
  1283                           	opt stack 0
  1284  000080                     	ds	1024
  1285                           
  1286                           	psect	dataBIGRAM
  1287  000480                     __pdataBIGRAM:
  1288                           	opt stack 0
  1289  000480                     _characterFont:
  1290                           	opt stack 0
  1291  000480                     	ds	570
  1292                           
  1293                           	psect	cstackCOMRAM
  1294  000001                     __pcstackCOMRAM:
  1295                           	opt stack 0
  1296  000001                     ??_TMR0_Initialize:
  1297  000001                     ?_strlen:
  1298                           	opt stack 0
  1299  000001                     ?___wmul:
  1300                           	opt stack 0
  1301  000001                     wait4Start@waitCount:
  1302                           	opt stack 0
  1303  000001                     wait4BusFree@waitCount:
  1304                           	opt stack 0
  1305  000001                     sendByte@data:
  1306                           	opt stack 0
  1307  000001                     wait4Stop@waitCount:
  1308                           	opt stack 0
  1309  000001                     UART1_SetFramingErrorHandler@interruptHandler:
  1310                           	opt stack 0
  1311  000001                     UART1_SetOverrunErrorHandler@interruptHandler:
  1312                           	opt stack 0
  1313  000001                     UART1_SetErrorHandler@interruptHandler:
  1314                           	opt stack 0
  1315  000001                     UART1_SetRxInterruptHandler@InterruptHandler:
  1316                           	opt stack 0
  1317  000001                     UART1_SetTxInterruptHandler@InterruptHandler:
  1318                           	opt stack 0
  1319  000001                     ___wmul@multiplier:
  1320                           	opt stack 0
  1321  000001                     strlen@s:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x0
  1325  000001                     	ds	1
  1326  000002                     sendByte@delayCounter:
  1327                           	opt stack 0
  1328                           
  1329                           ; 1 bytes @ 0x1
  1330  000002                     	ds	1
  1331  000003                     ??_strlen:
  1332  000003                     i2c1_write1ByteRegister@reg:
  1333                           	opt stack 0
  1334  000003                     i2c1_writeNBytes@reg:
  1335                           	opt stack 0
  1336  000003                     ___wmul@multiplicand:
  1337                           	opt stack 0
  1338                           
  1339                           ; 2 bytes @ 0x2
  1340  000003                     	ds	1
  1341  000004                     i2c1_write1ByteRegister@data:
  1342                           	opt stack 0
  1343  000004                     i2c1_writeNBytes@data:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0x3
  1347  000004                     	ds	1
  1348  000005                     i2c1_write1ByteRegister@address:
  1349                           	opt stack 0
  1350  000005                     ___wmul@product:
  1351                           	opt stack 0
  1352  000005                     strlen@cp:
  1353                           	opt stack 0
  1354                           
  1355                           ; 2 bytes @ 0x4
  1356  000005                     	ds	1
  1357  000006                     i2c1_writeNBytes@len:
  1358                           	opt stack 0
  1359  000006                     transmitCommand@command:
  1360                           	opt stack 0
  1361  000006                     transmitByte@data:
  1362                           	opt stack 0
  1363                           
  1364                           ; 1 bytes @ 0x5
  1365  000006                     	ds	1
  1366  000007                     i2c1_writeNBytes@address:
  1367                           	opt stack 0
  1368  000007                     setCursorPosition@row:
  1369                           	opt stack 0
  1370                           
  1371                           ; 2 bytes @ 0x6
  1372  000007                     	ds	1
  1373  000008                     i2c1_writeNBytes@dataPointer:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x7
  1377  000008                     	ds	1
  1378  000009                     setCursorPosition@column:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x8
  1382  000009                     	ds	1
  1383  00000A                     transmitDATA@data:
  1384                           	opt stack 0
  1385                           
  1386                           ; 2 bytes @ 0x9
  1387  00000A                     	ds	1
  1388  00000B                     ??_setCursorPosition:
  1389                           
  1390                           ; 1 bytes @ 0xA
  1391  00000B                     	ds	1
  1392  00000C                     transmitDATA@datalen:
  1393                           	opt stack 0
  1394                           
  1395                           ; 1 bytes @ 0xB
  1396  00000C                     	ds	1
  1397  00000D                     clearRow@page:
  1398                           	opt stack 0
  1399                           
  1400                           ; 2 bytes @ 0xC
  1401  00000D                     	ds	1
  1402  00000E                     setCursorPosition@page:
  1403                           	opt stack 0
  1404                           
  1405                           ; 2 bytes @ 0xD
  1406  00000E                     	ds	1
  1407  00000F                     clearRow@row:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0xE
  1411  00000F                     	ds	1
  1412  000010                     clearRow@i:
  1413                           	opt stack 0
  1414  000010                     setCursorPosition@lowerAddressByte:
  1415                           	opt stack 0
  1416                           
  1417                           ; 2 bytes @ 0xF
  1418  000010                     	ds	2
  1419  000012                     clearScreen@i:
  1420                           	opt stack 0
  1421  000012                     setCursorPosition@upperAddressByte:
  1422                           	opt stack 0
  1423                           
  1424                           ; 2 bytes @ 0x11
  1425  000012                     	ds	2
  1426  000014                     print2Screen@column:
  1427                           	opt stack 0
  1428                           
  1429                           ; 1 bytes @ 0x13
  1430  000014                     	ds	1
  1431  000015                     print2Screen@data:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x14
  1435  000015                     	ds	2
  1436  000017                     ??_print2Screen:
  1437                           
  1438                           ; 1 bytes @ 0x16
  1439  000017                     	ds	3
  1440  00001A                     print2Screen@current_row:
  1441                           	opt stack 0
  1442                           
  1443                           ; 2 bytes @ 0x19
  1444  00001A                     	ds	2
  1445  00001C                     print2Screen@current_column:
  1446                           	opt stack 0
  1447                           
  1448                           ; 2 bytes @ 0x1B
  1449  00001C                     	ds	2
  1450  00001E                     print2Screen@pixelVal:
  1451                           	opt stack 0
  1452                           
  1453                           ; 5 bytes @ 0x1D
  1454  00001E                     	ds	5
  1455  000023                     print2Screen@character:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x22
  1459  000023                     	ds	2
  1460  000025                     print2Screen@row:
  1461                           	opt stack 0
  1462                           
  1463                           ; 1 bytes @ 0x24
  1464  000025                     	ds	1
  1465  000026                     print2Screen@i:
  1466                           	opt stack 0
  1467                           
  1468                           ; 2 bytes @ 0x25
  1469  000026                     	ds	2
  1470  000028                     print2Screen@k:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0x27
  1474  000028                     	ds	1
  1475  000029                     
  1476                           ; 1 bytes @ 0x28
  1477 ;;
  1478 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1479 ;;
  1480 ;; *************** function _main *****************
  1481 ;; Defined at:
  1482 ;;		line 52 in file "main.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels required when called:    9
  1502 ;; This function calls:
  1503 ;;		_SYSTEM_Initialize
  1504 ;;		_clearScreen
  1505 ;;		_init_OLED
  1506 ;;		_print2Screen
  1507 ;; This function is called by:
  1508 ;;		Startup code after reset
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text0
  1513  00098C                     __ptext0:
  1514                           	opt stack 0
  1515  00098C                     _main:
  1516                           	opt stack 22
  1517                           
  1518                           ;main.c: 55: SYSTEM_Initialize();
  1519                           
  1520                           ;incstack = 0
  1521  00098C  ECA4  F004         	call	_SYSTEM_Initialize	;wreg free
  1522                           
  1523                           ;main.c: 60: init_OLED();
  1524  000990  ECA4  F001         	call	_init_OLED	;wreg free
  1525                           
  1526                           ;main.c: 63: clearScreen();
  1527  000994  ECD9  F003         	call	_clearScreen	;wreg free
  1528                           
  1529                           ;main.c: 66: print2Screen(2,10,"HELLO WORLD");
  1530  000998  0E0A               	movlw	10
  1531  00099A  6E14               	movwf	print2Screen@column,c
  1532  00099C  0EF3               	movlw	low STR_1
  1533  00099E  6E15               	movwf	print2Screen@data,c
  1534  0009A0  0E7F               	movlw	high STR_1
  1535  0009A2  6E16               	movwf	print2Screen@data+1,c
  1536  0009A4  0E02               	movlw	2
  1537  0009A6  EC2C  F001         	call	_print2Screen
  1538  0009AA                     l549:
  1539                           
  1540                           ;main.c: 69: {
  1541  0009AA  D7FF               	goto	l549
  1542  0009AC                     __end_of_main:
  1543                           	opt stack 0
  1544                           
  1545 ;; *************** function _print2Screen *****************
  1546 ;; Defined at:
  1547 ;;		line 118 in file "OLED.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  row             1    wreg     unsigned char 
  1550 ;;  column          1   19[COMRAM] unsigned char 
  1551 ;;  data            2   20[COMRAM] PTR unsigned char 
  1552 ;;		 -> STR_1(12), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  row             1   36[COMRAM] unsigned char 
  1555 ;;  character       2   34[COMRAM] int 
  1556 ;;  k               1   39[COMRAM] unsigned char 
  1557 ;;  pixelVal        5   29[COMRAM] unsigned char [5]
  1558 ;;  i               2   37[COMRAM] int 
  1559 ;;  current_colu    2   27[COMRAM] int 
  1560 ;;  current_row     2   25[COMRAM] int 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1570 ;;      Params:         3       0       0       0       0       0       0       0       0
  1571 ;;      Locals:        15       0       0       0       0       0       0       0       0
  1572 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1573 ;;      Totals:        21       0       0       0       0       0       0       0       0
  1574 ;;Total ram usage:       21 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    8
  1577 ;; This function calls:
  1578 ;;		___wmul
  1579 ;;		_setCursorPosition
  1580 ;;		_strlen
  1581 ;;		_transmitByte
  1582 ;;		_transmitDATA
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text1
  1589  000258                     __ptext1:
  1590                           	opt stack 0
  1591  000258                     _print2Screen:
  1592                           	opt stack 22
  1593                           
  1594                           ;incstack = 0
  1595                           ;print2Screen@row stored from wreg
  1596  000258  6E25               	movwf	print2Screen@row,c
  1597                           
  1598                           ;OLED.c: 120: int current_row, current_column;
  1599                           ;OLED.c: 121: uint8_t pixelVal[5];
  1600                           ;OLED.c: 122: setCursorPosition(row,column);
  1601  00025A  0060  F094  F007   	movff	print2Screen@row,setCursorPosition@row
  1602  000260  6A08               	clrf	setCursorPosition@row+1,c
  1603  000262  0060  F050  F009   	movff	print2Screen@column,setCursorPosition@column
  1604  000268  6A0A               	clrf	setCursorPosition@column+1,c
  1605  00026A  EC3E  F003         	call	_setCursorPosition	;wreg free
  1606                           
  1607                           ;OLED.c: 123: current_row = row;
  1608  00026E  0060  F094  F01A   	movff	print2Screen@row,print2Screen@current_row
  1609  000274  6A1B               	clrf	print2Screen@current_row+1,c
  1610                           
  1611                           ;OLED.c: 124: current_column = column;
  1612  000276  0060  F050  F01C   	movff	print2Screen@column,print2Screen@current_column
  1613  00027C  6A1D               	clrf	print2Screen@current_column+1,c
  1614                           
  1615                           ;OLED.c: 125: int i = 0;
  1616  00027E  0E00               	movlw	0
  1617  000280  6E27               	movwf	print2Screen@i+1,c
  1618  000282  0E00               	movlw	0
  1619  000284  6E26               	movwf	print2Screen@i,c
  1620                           
  1621                           ;OLED.c: 126: for (i = 0; i < strlen(data) ; i++)
  1622  000286  0E00               	movlw	0
  1623  000288  6E27               	movwf	print2Screen@i+1,c
  1624  00028A  0E00               	movlw	0
  1625  00028C  6E26               	movwf	print2Screen@i,c
  1626  00028E  D04D               	goto	l606
  1627  000290                     
  1628                           ;OLED.c: 127: {
  1629                           ;OLED.c: 128: int character = ((char)(data[i]) - ' ') * 5;
  1630  000290  5026               	movf	print2Screen@i,w,c
  1631  000292  2415               	addwf	print2Screen@data,w,c
  1632  000294  6E17               	movwf	??_print2Screen& (0+255),c
  1633  000296  5027               	movf	print2Screen@i+1,w,c
  1634  000298  2016               	addwfc	print2Screen@data+1,w,c
  1635  00029A  6E18               	movwf	(??_print2Screen+1)& (0+255),c
  1636  00029C  0060  F05F  FFF6   	movff	??_print2Screen,16374
  1637  0002A2  0060  F063  FFF7   	movff	??_print2Screen+1,16375
  1638  0002A8                     	if	0	;tblptru may be non-zero
  1639  0002A8                     	endif
  1640  0002A8                     	if	0	;tblptru may be non-zero
  1641  0002A8                     	endif
  1642  0002A8  0008               	tblrd		*
  1643  0002AA  006F FFD4  F019    	movff	16373,??_print2Screen+2
  1644  0002B0  0EE0               	movlw	224
  1645  0002B2  2419               	addwf	??_print2Screen+2,w,c
  1646  0002B4  6E01               	movwf	___wmul@multiplier,c
  1647  0002B6  6A02               	clrf	___wmul@multiplier+1,c
  1648  0002B8  0EFF               	movlw	255
  1649  0002BA  2202               	addwfc	___wmul@multiplier+1,f,c
  1650  0002BC  0E00               	movlw	0
  1651  0002BE  6E04               	movwf	___wmul@multiplicand+1,c
  1652  0002C0  0E05               	movlw	5
  1653  0002C2  6E03               	movwf	___wmul@multiplicand,c
  1654  0002C4  EC41  F004         	call	___wmul	;wreg free
  1655  0002C8  0060  F004  F023   	movff	?___wmul,print2Screen@character
  1656  0002CE  0060  F008  F024   	movff	?___wmul+1,print2Screen@character+1
  1657                           
  1658                           ;OLED.c: 129: uint8_t k = 0;
  1659  0002D4  0E00               	movlw	0
  1660  0002D6  6E28               	movwf	print2Screen@k,c
  1661                           
  1662                           ;OLED.c: 130: for (k = 0; k < 5; k++)
  1663  0002D8  0E00               	movlw	0
  1664  0002DA  6E28               	movwf	print2Screen@k,c
  1665  0002DC                     l2141:
  1666  0002DC  0E04               	movlw	4
  1667  0002DE  6428               	cpfsgt	print2Screen@k,c
  1668  0002E0  D001               	goto	l608
  1669  0002E2  D016               	goto	u660
  1670  0002E4                     l608:
  1671                           
  1672                           ;OLED.c: 131: {
  1673                           ;OLED.c: 132: pixelVal[k] = capFont[character++];
  1674  0002E4  0EB3               	movlw	low _capFont
  1675  0002E6  2423               	addwf	print2Screen@character,w,c
  1676  0002E8  6EF6               	movwf	16374,c
  1677  0002EA  0E7E               	movlw	high _capFont
  1678  0002EC  2024               	addwfc	print2Screen@character+1,w,c
  1679  0002EE  6EF7               	movwf	16375,c
  1680  0002F0                     	if	0	;There are less than 3 active tblptr bytes
  1681  0002F0                     	endif
  1682  0002F0  5028               	movf	print2Screen@k,w,c
  1683  0002F2  0D01               	mullw	1
  1684  0002F4  0E1E               	movlw	low print2Screen@pixelVal
  1685  0002F6  24F3               	addwf	16371,w,c
  1686  0002F8  6ED9               	movwf	16345,c
  1687  0002FA  0E00               	movlw	high print2Screen@pixelVal
  1688  0002FC  20F4               	addwfc	16372,w,c
  1689  0002FE  6EDA               	movwf	16346,c
  1690  000300  0008               	tblrd		*
  1691  000302  006F FFD7 FFDF     	movff	16373,16351
  1692  000308  4A23               	infsnz	print2Screen@character,f,c
  1693  00030A  2A24               	incf	print2Screen@character+1,f,c
  1694  00030C  2A28               	incf	print2Screen@k,f,c
  1695  00030E  D7E6               	goto	l2141
  1696  000310                     u660:
  1697                           
  1698                           ;OLED.c: 133: }
  1699                           ;OLED.c: 134: transmitDATA(pixelVal,5);
  1700  000310  0E1E               	movlw	low print2Screen@pixelVal
  1701  000312  6E0A               	movwf	transmitDATA@data,c
  1702  000314  0E00               	movlw	high print2Screen@pixelVal
  1703  000316  6E0B               	movwf	transmitDATA@data+1,c
  1704  000318  0E05               	movlw	5
  1705  00031A  6E0C               	movwf	transmitDATA@datalen,c
  1706  00031C  ECD6  F004         	call	_transmitDATA	;wreg free
  1707                           
  1708                           ;OLED.c: 135: transmitByte(0x00);
  1709  000320  0E00               	movlw	0
  1710  000322  EC18  F005         	call	_transmitByte
  1711  000326  4A26               	infsnz	print2Screen@i,f,c
  1712  000328  2A27               	incf	print2Screen@i+1,f,c
  1713  00032A                     l606:
  1714  00032A  0060  F054  F001   	movff	print2Screen@data,strlen@s
  1715  000330  0060  F058  F002   	movff	print2Screen@data+1,strlen@s+1
  1716  000336  EC94  F003         	call	_strlen	;wreg free
  1717  00033A  5001               	movf	?_strlen,w,c
  1718  00033C  5C26               	subwf	print2Screen@i,w,c
  1719  00033E  5002               	movf	?_strlen+1,w,c
  1720  000340  5827               	subwfb	print2Screen@i+1,w,c
  1721  000342  B0D8               	btfsc	16344,0,c
  1722  000344  0012               	return	
  1723  000346  D7A4               	goto	l607
  1724  000348                     __end_of_print2Screen:
  1725                           	opt stack 0
  1726                           
  1727 ;; *************** function _transmitByte *****************
  1728 ;; Defined at:
  1729 ;;		line 108 in file "OLED.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  data            1    wreg     unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  data            1    5[COMRAM] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1743 ;;      Params:         0       0       0       0       0       0       0       0       0
  1744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1746 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1747 ;;Total ram usage:        1 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    6
  1750 ;; This function calls:
  1751 ;;		_i2c1_write1ByteRegister
  1752 ;; This function is called by:
  1753 ;;		_print2Screen
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text2
  1758  000A30                     __ptext2:
  1759                           	opt stack 0
  1760  000A30                     _transmitByte:
  1761                           	opt stack 23
  1762                           
  1763                           ;incstack = 0
  1764                           ;transmitByte@data stored from wreg
  1765  000A30  6E06               	movwf	transmitByte@data,c
  1766                           
  1767                           ;OLED.c: 110: i2c1_write1ByteRegister(0x3C,0x40,data);
  1768  000A32  0E40               	movlw	64
  1769  000A34  6E03               	movwf	i2c1_write1ByteRegister@reg,c
  1770  000A36  0060  F018  F004   	movff	transmitByte@data,i2c1_write1ByteRegister@data
  1771  000A3C  0E3C               	movlw	60
  1772  000A3E  EC29  F004         	call	_i2c1_write1ByteRegister
  1773  000A42  0012               	return		;funcret
  1774  000A44                     __end_of_transmitByte:
  1775                           	opt stack 0
  1776                           
  1777 ;; *************** function _strlen *****************
  1778 ;; Defined at:
  1779 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1782 ;;		 -> STR_1(12), 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  cp              2    4[COMRAM] PTR const unsigned char 
  1785 ;;		 -> STR_1(12), 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2    0[COMRAM] unsigned int 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1795 ;;      Params:         2       0       0       0       0       0       0       0       0
  1796 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1797 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1798 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1799 ;;Total ram usage:        6 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    4
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_print2Screen
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text3
  1810  000728                     __ptext3:
  1811                           	opt stack 0
  1812  000728                     _strlen:
  1813                           	opt stack 25
  1814                           
  1815                           ;incstack = 0
  1816  000728  0060  F004  F005   	movff	strlen@s,strlen@cp
  1817  00072E  0060  F008  F006   	movff	strlen@s+1,strlen@cp+1
  1818  000734  D002               	goto	l1159
  1819  000736  4A05               	infsnz	strlen@cp,f,c
  1820  000738  2A06               	incf	strlen@cp+1,f,c
  1821  00073A                     l1159:
  1822  00073A  0060  F017  FFF6   	movff	strlen@cp,16374
  1823  000740  0060  F01B  FFF7   	movff	strlen@cp+1,16375
  1824  000746                     	if	0	;tblptru may be non-zero
  1825  000746                     	endif
  1826  000746                     	if	0	;tblptru may be non-zero
  1827  000746                     	endif
  1828  000746  0008               	tblrd		*
  1829  000748  50F5               	movf	16373,w,c
  1830  00074A  0900               	iorlw	0
  1831  00074C  A4D8               	btfss	16344,2,c
  1832  00074E  D7F3               	goto	l1160
  1833  000750  0060  F004  F003   	movff	strlen@s,??_strlen
  1834  000756  0060  F008  F004   	movff	strlen@s+1,??_strlen+1
  1835  00075C  1E03               	comf	??_strlen,f,c
  1836  00075E  1E04               	comf	??_strlen+1,f,c
  1837  000760  4A03               	infsnz	??_strlen,f,c
  1838  000762  2A04               	incf	??_strlen+1,f,c
  1839  000764  5005               	movf	strlen@cp,w,c
  1840  000766  2403               	addwf	??_strlen,w,c
  1841  000768  6E01               	movwf	?_strlen,c
  1842  00076A  5006               	movf	strlen@cp+1,w,c
  1843  00076C  2004               	addwfc	??_strlen+1,w,c
  1844  00076E  6E02               	movwf	?_strlen+1,c
  1845  000770  0012               	return	
  1846  000772                     __end_of_strlen:
  1847                           	opt stack 0
  1848                           
  1849 ;; *************** function _setCursorPosition *****************
  1850 ;; Defined at:
  1851 ;;		line 88 in file "OLED.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  row             2    6[COMRAM] int 
  1854 ;;  column          2    8[COMRAM] int 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  upperAddress    2   17[COMRAM] int 
  1857 ;;  lowerAddress    2   15[COMRAM] int 
  1858 ;;  page            2   13[COMRAM] int 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1868 ;;      Params:         4       0       0       0       0       0       0       0       0
  1869 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1870 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1871 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1872 ;;Total ram usage:       13 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    7
  1875 ;; This function calls:
  1876 ;;		_transmitCommand
  1877 ;; This function is called by:
  1878 ;;		_print2Screen
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text4
  1883  00067C                     __ptext4:
  1884                           	opt stack 0
  1885  00067C                     _setCursorPosition:
  1886                           	opt stack 22
  1887                           
  1888                           ;OLED.c: 91: int page = 0xB0 + row;
  1889                           
  1890                           ;incstack = 0
  1891  00067C  0EB0               	movlw	176
  1892  00067E  2407               	addwf	setCursorPosition@row,w,c
  1893  000680  6E0E               	movwf	setCursorPosition@page,c
  1894  000682  0E00               	movlw	0
  1895  000684  2008               	addwfc	setCursorPosition@row+1,w,c
  1896  000686  6E0F               	movwf	setCursorPosition@page+1,c
  1897                           
  1898                           ;OLED.c: 92: transmitCommand(page);
  1899  000688  500E               	movf	setCursorPosition@page,w,c
  1900  00068A  EC22  F005         	call	_transmitCommand
  1901                           
  1902                           ;OLED.c: 95: column += 2;
  1903  00068E  0E02               	movlw	2
  1904  000690  2609               	addwf	setCursorPosition@column,f,c
  1905  000692  0E00               	movlw	0
  1906  000694  220A               	addwfc	setCursorPosition@column+1,f,c
  1907                           
  1908                           ;OLED.c: 96: int lowerAddressByte = (column & 0x0F);
  1909  000696  0E0F               	movlw	15
  1910  000698  1409               	andwf	setCursorPosition@column,w,c
  1911  00069A  6E10               	movwf	setCursorPosition@lowerAddressByte,c
  1912  00069C  6A11               	clrf	setCursorPosition@lowerAddressByte+1,c
  1913                           
  1914                           ;OLED.c: 97: int upperAddressByte = (column >> 4) + 0x10;
  1915  00069E  0060  F024  F00B   	movff	setCursorPosition@column,??_setCursorPosition
  1916  0006A4  0060  F028  F00C   	movff	setCursorPosition@column+1,??_setCursorPosition+1
  1917  0006AA  0E04               	movlw	4
  1918  0006AC  6E0D               	movwf	(??_setCursorPosition+2)& (0+255),c
  1919  0006AE                     u615:
  1920  0006AE  340C               	rlcf	??_setCursorPosition+1,w,c
  1921  0006B0  320C               	rrcf	??_setCursorPosition+1,f,c
  1922  0006B2  320B               	rrcf	??_setCursorPosition,f,c
  1923  0006B4  2E0D               	decfsz	(??_setCursorPosition+2)& (0+255),f,c
  1924  0006B6  D7FB               	goto	u615
  1925  0006B8  0E10               	movlw	16
  1926  0006BA  240B               	addwf	??_setCursorPosition,w,c
  1927  0006BC  6E12               	movwf	setCursorPosition@upperAddressByte,c
  1928  0006BE  0E00               	movlw	0
  1929  0006C0  200C               	addwfc	??_setCursorPosition+1,w,c
  1930  0006C2  6E13               	movwf	setCursorPosition@upperAddressByte+1,c
  1931                           
  1932                           ;OLED.c: 98: transmitCommand(upperAddressByte);
  1933  0006C4  5012               	movf	setCursorPosition@upperAddressByte,w,c
  1934  0006C6  EC22  F005         	call	_transmitCommand
  1935                           
  1936                           ;OLED.c: 99: transmitCommand(lowerAddressByte);
  1937  0006CA  5010               	movf	setCursorPosition@lowerAddressByte,w,c
  1938  0006CC  EC22  F005         	call	_transmitCommand
  1939  0006D0  0012               	return		;funcret
  1940  0006D2                     __end_of_setCursorPosition:
  1941                           	opt stack 0
  1942                           
  1943 ;; *************** function ___wmul *****************
  1944 ;; Defined at:
  1945 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  multiplier      2    0[COMRAM] unsigned int 
  1948 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  product         2    4[COMRAM] unsigned int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2    0[COMRAM] unsigned int 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0, prodl, prodh
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1960 ;;      Params:         4       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1964 ;;Total ram usage:        6 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    4
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_print2Screen
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text5
  1975  000882                     __ptext5:
  1976                           	opt stack 0
  1977  000882                     ___wmul:
  1978                           	opt stack 25
  1979                           
  1980                           ;incstack = 0
  1981  000882  5001               	movf	___wmul@multiplier,w,c
  1982  000884  0203               	mulwf	___wmul@multiplicand,c
  1983  000886  006F FFCC  F005    	movff	16371,___wmul@product
  1984  00088C  006F FFD0  F006    	movff	16372,___wmul@product+1
  1985  000892  5001               	movf	___wmul@multiplier,w,c
  1986  000894  0204               	mulwf	___wmul@multiplicand+1,c
  1987  000896  50F3               	movf	16371,w,c
  1988  000898  2606               	addwf	___wmul@product+1,f,c
  1989  00089A  5002               	movf	___wmul@multiplier+1,w,c
  1990  00089C  0203               	mulwf	___wmul@multiplicand,c
  1991  00089E  50F3               	movf	16371,w,c
  1992  0008A0  2606               	addwf	___wmul@product+1,f,c
  1993  0008A2  0060  F014  F001   	movff	___wmul@product,?___wmul
  1994  0008A8  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
  1995  0008AE  0012               	return	
  1996  0008B0                     __end_of___wmul:
  1997                           	opt stack 0
  1998                           
  1999 ;; *************** function _init_OLED *****************
  2000 ;; Defined at:
  2001 ;;		line 13 in file "OLED.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    7
  2022 ;; This function calls:
  2023 ;;		_transmitCommand
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text6
  2030  000348                     __ptext6:
  2031                           	opt stack 0
  2032  000348                     _init_OLED:
  2033                           	opt stack 23
  2034                           
  2035                           ;OLED.c: 15: transmitCommand(0xAE);
  2036                           
  2037                           ;incstack = 0
  2038  000348  0EAE               	movlw	174
  2039  00034A  EC22  F005         	call	_transmitCommand
  2040                           
  2041                           ;OLED.c: 16: transmitCommand(0x20);
  2042  00034E  0E20               	movlw	32
  2043  000350  EC22  F005         	call	_transmitCommand
  2044                           
  2045                           ;OLED.c: 17: transmitCommand(0x10);
  2046  000354  0E10               	movlw	16
  2047  000356  EC22  F005         	call	_transmitCommand
  2048                           
  2049                           ;OLED.c: 18: transmitCommand(0xB0);
  2050  00035A  0EB0               	movlw	176
  2051  00035C  EC22  F005         	call	_transmitCommand
  2052                           
  2053                           ;OLED.c: 19: transmitCommand(0xC8);
  2054  000360  0EC8               	movlw	200
  2055  000362  EC22  F005         	call	_transmitCommand
  2056                           
  2057                           ;OLED.c: 20: transmitCommand(0x00);
  2058  000366  0E00               	movlw	0
  2059  000368  EC22  F005         	call	_transmitCommand
  2060                           
  2061                           ;OLED.c: 21: transmitCommand(0x10);
  2062  00036C  0E10               	movlw	16
  2063  00036E  EC22  F005         	call	_transmitCommand
  2064                           
  2065                           ;OLED.c: 22: transmitCommand(0x40);
  2066  000372  0E40               	movlw	64
  2067  000374  EC22  F005         	call	_transmitCommand
  2068                           
  2069                           ;OLED.c: 23: transmitCommand(0x81);
  2070  000378  0E81               	movlw	129
  2071  00037A  EC22  F005         	call	_transmitCommand
  2072                           
  2073                           ;OLED.c: 24: transmitCommand(0x7F);
  2074  00037E  0E7F               	movlw	127
  2075  000380  EC22  F005         	call	_transmitCommand
  2076                           
  2077                           ;OLED.c: 26: transmitCommand(0xA1);
  2078  000384  0EA1               	movlw	161
  2079  000386  EC22  F005         	call	_transmitCommand
  2080                           
  2081                           ;OLED.c: 27: transmitCommand(0xA6);
  2082  00038A  0EA6               	movlw	166
  2083  00038C  EC22  F005         	call	_transmitCommand
  2084                           
  2085                           ;OLED.c: 28: transmitCommand(0xA8);
  2086  000390  0EA8               	movlw	168
  2087  000392  EC22  F005         	call	_transmitCommand
  2088                           
  2089                           ;OLED.c: 29: transmitCommand(0x3F);
  2090  000396  0E3F               	movlw	63
  2091  000398  EC22  F005         	call	_transmitCommand
  2092                           
  2093                           ;OLED.c: 30: transmitCommand(0xA4);
  2094  00039C  0EA4               	movlw	164
  2095  00039E  EC22  F005         	call	_transmitCommand
  2096                           
  2097                           ;OLED.c: 31: transmitCommand(0xD3 );
  2098  0003A2  0ED3               	movlw	211
  2099  0003A4  EC22  F005         	call	_transmitCommand
  2100                           
  2101                           ;OLED.c: 32: transmitCommand(0x00);
  2102  0003A8  0E00               	movlw	0
  2103  0003AA  EC22  F005         	call	_transmitCommand
  2104                           
  2105                           ;OLED.c: 33: transmitCommand(0xD5);
  2106  0003AE  0ED5               	movlw	213
  2107  0003B0  EC22  F005         	call	_transmitCommand
  2108                           
  2109                           ;OLED.c: 34: transmitCommand(0xF0);
  2110  0003B4  0EF0               	movlw	240
  2111  0003B6  EC22  F005         	call	_transmitCommand
  2112                           
  2113                           ;OLED.c: 35: transmitCommand(0xD9);
  2114  0003BA  0ED9               	movlw	217
  2115  0003BC  EC22  F005         	call	_transmitCommand
  2116                           
  2117                           ;OLED.c: 36: transmitCommand(0x22);
  2118  0003C0  0E22               	movlw	34
  2119  0003C2  EC22  F005         	call	_transmitCommand
  2120                           
  2121                           ;OLED.c: 37: transmitCommand(0xDA);
  2122  0003C6  0EDA               	movlw	218
  2123  0003C8  EC22  F005         	call	_transmitCommand
  2124                           
  2125                           ;OLED.c: 38: transmitCommand(0x12);
  2126  0003CC  0E12               	movlw	18
  2127  0003CE  EC22  F005         	call	_transmitCommand
  2128                           
  2129                           ;OLED.c: 39: transmitCommand(0xDB);
  2130  0003D2  0EDB               	movlw	219
  2131  0003D4  EC22  F005         	call	_transmitCommand
  2132                           
  2133                           ;OLED.c: 40: transmitCommand(0x20);
  2134  0003D8  0E20               	movlw	32
  2135  0003DA  EC22  F005         	call	_transmitCommand
  2136                           
  2137                           ;OLED.c: 41: transmitCommand(0x8D);
  2138  0003DE  0E8D               	movlw	141
  2139  0003E0  EC22  F005         	call	_transmitCommand
  2140                           
  2141                           ;OLED.c: 42: transmitCommand(0x14);
  2142  0003E4  0E14               	movlw	20
  2143  0003E6  EC22  F005         	call	_transmitCommand
  2144                           
  2145                           ;OLED.c: 44: transmitCommand(0xAF);
  2146  0003EA  0EAF               	movlw	175
  2147  0003EC  EC22  F005         	call	_transmitCommand
  2148  0003F0  0012               	return		;funcret
  2149  0003F2                     __end_of_init_OLED:
  2150                           	opt stack 0
  2151                           
  2152 ;; *************** function _clearScreen *****************
  2153 ;; Defined at:
  2154 ;;		line 75 in file "OLED.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  i               2   17[COMRAM] int 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0
  2169 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2171 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    8
  2175 ;; This function calls:
  2176 ;;		_clearRow
  2177 ;;		_transmitCommand
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text7
  2184  0007B2                     __ptext7:
  2185                           	opt stack 0
  2186  0007B2                     _clearScreen:
  2187                           	opt stack 22
  2188                           
  2189                           ;OLED.c: 77: int i = 0;
  2190                           
  2191                           ;incstack = 0
  2192  0007B2  0E00               	movlw	0
  2193  0007B4  6E13               	movwf	clearScreen@i+1,c
  2194  0007B6  0E00               	movlw	0
  2195  0007B8  6E12               	movwf	clearScreen@i,c
  2196                           
  2197                           ;OLED.c: 78: for (i = 0;i < 8; i++)
  2198  0007BA  0E00               	movlw	0
  2199  0007BC  6E13               	movwf	clearScreen@i+1,c
  2200  0007BE  0E00               	movlw	0
  2201  0007C0  6E12               	movwf	clearScreen@i,c
  2202  0007C2                     l2111:
  2203  0007C2  BE13               	btfsc	clearScreen@i+1,7,c
  2204  0007C4  D006               	goto	l589
  2205  0007C6  5013               	movf	clearScreen@i+1,w,c
  2206  0007C8  E110               	bnz	l591
  2207  0007CA  0E08               	movlw	8
  2208  0007CC  5C12               	subwf	clearScreen@i,w,c
  2209  0007CE  B0D8               	btfsc	16344,0,c
  2210  0007D0  0012               	return	
  2211  0007D2                     l589:
  2212                           
  2213                           ;OLED.c: 79: {
  2214                           ;OLED.c: 80: clearRow(i);
  2215  0007D2  5012               	movf	clearScreen@i,w,c
  2216  0007D4  ECE4  F002         	call	_clearRow
  2217                           
  2218                           ;OLED.c: 81: transmitCommand(0x00);
  2219  0007D8  0E00               	movlw	0
  2220  0007DA  EC22  F005         	call	_transmitCommand
  2221                           
  2222                           ;OLED.c: 82: transmitCommand(0x10);
  2223  0007DE  0E10               	movlw	16
  2224  0007E0  EC22  F005         	call	_transmitCommand
  2225  0007E4  4A12               	infsnz	clearScreen@i,f,c
  2226  0007E6  2A13               	incf	clearScreen@i+1,f,c
  2227  0007E8  D7EC               	goto	l2111
  2228  0007EA                     l591:
  2229  0007EA  0012               	return		;funcret
  2230  0007EC                     __end_of_clearScreen:
  2231                           	opt stack 0
  2232                           
  2233 ;; *************** function _clearRow *****************
  2234 ;; Defined at:
  2235 ;;		line 63 in file "OLED.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  row             1    wreg     unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  row             1   14[COMRAM] unsigned char 
  2240 ;;  i               2   15[COMRAM] int 
  2241 ;;  page            2   12[COMRAM] int 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0
  2252 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2254 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2255 ;;Total ram usage:        5 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    7
  2258 ;; This function calls:
  2259 ;;		_transmitCommand
  2260 ;;		_transmitDATA
  2261 ;; This function is called by:
  2262 ;;		_clearScreen
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text8
  2267  0005C8                     __ptext8:
  2268                           	opt stack 0
  2269  0005C8                     _clearRow:
  2270                           	opt stack 22
  2271                           
  2272                           ;incstack = 0
  2273                           ;clearRow@row stored from wreg
  2274  0005C8  6E0F               	movwf	clearRow@row,c
  2275                           
  2276                           ;OLED.c: 65: int page = 0xB0 + row;
  2277  0005CA  0EB0               	movlw	176
  2278  0005CC  240F               	addwf	clearRow@row,w,c
  2279  0005CE  6E0D               	movwf	clearRow@page,c
  2280  0005D0  6A0E               	clrf	clearRow@page+1,c
  2281  0005D2  0E00               	movlw	0
  2282  0005D4  220E               	addwfc	clearRow@page+1,f,c
  2283                           
  2284                           ;OLED.c: 66: transmitCommand(page);
  2285  0005D6  500D               	movf	clearRow@page,w,c
  2286  0005D8  EC22  F005         	call	_transmitCommand
  2287                           
  2288                           ;OLED.c: 67: int i = 0;
  2289  0005DC  0E00               	movlw	0
  2290  0005DE  6E11               	movwf	clearRow@i+1,c
  2291  0005E0  0E00               	movlw	0
  2292  0005E2  6E10               	movwf	clearRow@i,c
  2293                           
  2294                           ;OLED.c: 68: for (i = 0; i < 4;i++)
  2295  0005E4  0E00               	movlw	0
  2296  0005E6  6E11               	movwf	clearRow@i+1,c
  2297  0005E8  0E00               	movlw	0
  2298  0005EA  6E10               	movwf	clearRow@i,c
  2299  0005EC                     l2051:
  2300  0005EC  BE11               	btfsc	clearRow@i+1,7,c
  2301  0005EE  D006               	goto	l584
  2302  0005F0  5011               	movf	clearRow@i+1,w,c
  2303  0005F2  E10F               	bnz	l2061
  2304  0005F4  0E04               	movlw	4
  2305  0005F6  5C10               	subwf	clearRow@i,w,c
  2306  0005F8  B0D8               	btfsc	16344,0,c
  2307  0005FA  D00B               	goto	u600
  2308  0005FC                     l584:
  2309                           
  2310                           ;OLED.c: 69: {
  2311                           ;OLED.c: 70: transmitDATA(clearPixel,32);
  2312  0005FC  0E60               	movlw	low _clearPixel
  2313  0005FE  6E0A               	movwf	transmitDATA@data,c
  2314  000600  0E00               	movlw	high _clearPixel
  2315  000602  6E0B               	movwf	transmitDATA@data+1,c
  2316  000604  0E20               	movlw	32
  2317  000606  6E0C               	movwf	transmitDATA@datalen,c
  2318  000608  ECD6  F004         	call	_transmitDATA	;wreg free
  2319  00060C  4A10               	infsnz	clearRow@i,f,c
  2320  00060E  2A11               	incf	clearRow@i+1,f,c
  2321  000610  D7ED               	goto	l2051
  2322  000612                     u600:
  2323  000612                     l2061:
  2324                           
  2325                           ;OLED.c: 71: }
  2326                           ;OLED.c: 72: transmitDATA(leftOver,4);
  2327  000612  0E48               	movlw	low _leftOver
  2328  000614  6E0A               	movwf	transmitDATA@data,c
  2329  000616  0E00               	movlw	high _leftOver
  2330  000618  6E0B               	movwf	transmitDATA@data+1,c
  2331  00061A  0E04               	movlw	4
  2332  00061C  6E0C               	movwf	transmitDATA@datalen,c
  2333  00061E  ECD6  F004         	call	_transmitDATA	;wreg free
  2334  000622  0012               	return		;funcret
  2335  000624                     __end_of_clearRow:
  2336                           	opt stack 0
  2337                           
  2338 ;; *************** function _transmitDATA *****************
  2339 ;; Defined at:
  2340 ;;		line 113 in file "OLED.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  data            2    9[COMRAM] PTR unsigned char 
  2343 ;;		 -> print2Screen@pixelVal(5), leftOver(4), clearPixel(32), 
  2344 ;;  datalen         1   11[COMRAM] unsigned char 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2356 ;;      Params:         3       0       0       0       0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2359 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2360 ;;Total ram usage:        3 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    6
  2363 ;; This function calls:
  2364 ;;		_i2c1_writeNBytes
  2365 ;; This function is called by:
  2366 ;;		_clearRow
  2367 ;;		_print2Screen
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text9
  2372  0009AC                     __ptext9:
  2373                           	opt stack 0
  2374  0009AC                     _transmitDATA:
  2375                           	opt stack 23
  2376                           
  2377                           ;OLED.c: 115: i2c1_writeNBytes(0x3C,0x40,data,datalen);
  2378                           
  2379                           ;incstack = 0
  2380  0009AC  0E40               	movlw	64
  2381  0009AE  6E03               	movwf	i2c1_writeNBytes@reg,c
  2382  0009B0  0060  F028  F004   	movff	transmitDATA@data,i2c1_writeNBytes@data
  2383  0009B6  0060  F02C  F005   	movff	transmitDATA@data+1,i2c1_writeNBytes@data+1
  2384  0009BC  0060  F030  F006   	movff	transmitDATA@datalen,i2c1_writeNBytes@len
  2385  0009C2  0E3C               	movlw	60
  2386  0009C4  EC69  F003         	call	_i2c1_writeNBytes
  2387  0009C8  0012               	return		;funcret
  2388  0009CA                     __end_of_transmitDATA:
  2389                           	opt stack 0
  2390                           
  2391 ;; *************** function _i2c1_writeNBytes *****************
  2392 ;; Defined at:
  2393 ;;		line 230 in file "mcc_generated_files/i2c1.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  address         1    wreg     unsigned char 
  2396 ;;  reg             1    2[COMRAM] unsigned char 
  2397 ;;  data            2    3[COMRAM] PTR void 
  2398 ;;		 -> print2Screen@pixelVal(5), leftOver(4), clearPixel(32), 
  2399 ;;  len             1    5[COMRAM] unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  address         1    6[COMRAM] unsigned char 
  2402 ;;  dataPointer     2    7[COMRAM] PTR unsigned char 
  2403 ;;		 -> print2Screen@pixelVal(5), leftOver(4), clearPixel(32), 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         4       0       0       0       0       0       0       0       0
  2414 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2416 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2417 ;;Total ram usage:        7 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    5
  2420 ;; This function calls:
  2421 ;;		_I2C1_Initialize
  2422 ;;		_sendByte
  2423 ;;		_wait4BusFree
  2424 ;;		_wait4Start
  2425 ;;		_wait4Stop
  2426 ;; This function is called by:
  2427 ;;		_transmitDATA
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text10
  2432  0006D2                     __ptext10:
  2433                           	opt stack 0
  2434  0006D2                     _i2c1_writeNBytes:
  2435                           	opt stack 23
  2436                           
  2437                           ;incstack = 0
  2438                           ;i2c1_writeNBytes@address stored from wreg
  2439  0006D2  6E07               	movwf	i2c1_writeNBytes@address,c
  2440                           
  2441                           ;i2c1.c: 232: uint8_t *dataPointer = data;
  2442  0006D4  0060  F010  F008   	movff	i2c1_writeNBytes@data,i2c1_writeNBytes@dataPointer
  2443  0006DA  0060  F014  F009   	movff	i2c1_writeNBytes@data+1,i2c1_writeNBytes@dataPointer+1
  2444                           
  2445                           ;i2c1.c: 234: I2C1_Initialize();
  2446  0006E0  EC58  F004         	call	_I2C1_Initialize	;wreg free
  2447                           
  2448                           ;i2c1.c: 235: I2C1ADB1 = (uint8_t)(address<<1);
  2449  0006E4  5007               	movf	i2c1_writeNBytes@address,w,c
  2450  0006E6  2407               	addwf	i2c1_writeNBytes@address,w,c
  2451  0006E8  013D               	movlb	61	; () banked
  2452  0006EA  6F6E               	movwf	110,b	;volatile
  2453                           
  2454                           ; BSR set to: 61
  2455                           ;i2c1.c: 236: wait4BusFree();
  2456  0006EC  ECFF  F004         	call	_wait4BusFree	;wreg free
  2457                           
  2458                           ;i2c1.c: 237: I2C1CNT = len+1;
  2459  0006F0  2806               	incf	i2c1_writeNBytes@len,w,c
  2460  0006F2  013D               	movlb	61	; () banked
  2461  0006F4  6F6C               	movwf	108,b	;volatile
  2462                           
  2463                           ; BSR set to: 61
  2464                           ;i2c1.c: 238: I2C1CON0bits.S = 1;
  2465  0006F6  8B73               	bsf	115,5,b	;volatile
  2466                           
  2467                           ; BSR set to: 61
  2468                           ;i2c1.c: 239: wait4Start();
  2469  0006F8  ECF2  F004         	call	_wait4Start	;wreg free
  2470                           
  2471                           ;i2c1.c: 240: sendByte(reg);
  2472  0006FC  5003               	movf	i2c1_writeNBytes@reg,w,c
  2473  0006FE  EC80  F004         	call	_sendByte
  2474                           
  2475                           ;i2c1.c: 241: while(len--)
  2476  000702  D00B               	goto	l505
  2477  000704                     
  2478                           ;i2c1.c: 242: {
  2479                           ;i2c1.c: 243: sendByte(*dataPointer++);
  2480  000704  0060  F023  FFD9   	movff	i2c1_writeNBytes@dataPointer,16345
  2481  00070A  0060  F027  FFDA   	movff	i2c1_writeNBytes@dataPointer+1,16346
  2482  000710  50DF               	movf	16351,w,c
  2483  000712  EC80  F004         	call	_sendByte
  2484  000716  4A08               	infsnz	i2c1_writeNBytes@dataPointer,f,c
  2485  000718  2A09               	incf	i2c1_writeNBytes@dataPointer+1,f,c
  2486  00071A                     l505:
  2487  00071A  0606               	decf	i2c1_writeNBytes@len,f,c
  2488  00071C  2806               	incf	i2c1_writeNBytes@len,w,c
  2489  00071E  A4D8               	btfss	16344,2,c
  2490  000720  D7F1               	goto	l506
  2491                           
  2492                           ;i2c1.c: 244: }
  2493                           ;i2c1.c: 245: wait4Stop();
  2494  000722  ECE5  F004         	call	_wait4Stop	;wreg free
  2495  000726  0012               	return		;funcret
  2496  000728                     __end_of_i2c1_writeNBytes:
  2497                           	opt stack 0
  2498                           
  2499 ;; *************** function _transmitCommand *****************
  2500 ;; Defined at:
  2501 ;;		line 103 in file "OLED.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  command         1    wreg     unsigned char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  command         1    5[COMRAM] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0
  2516 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2518 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2519 ;;Total ram usage:        1 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    6
  2522 ;; This function calls:
  2523 ;;		_i2c1_write1ByteRegister
  2524 ;; This function is called by:
  2525 ;;		_init_OLED
  2526 ;;		_clearRow
  2527 ;;		_clearScreen
  2528 ;;		_setCursorPosition
  2529 ;;		_powerUP
  2530 ;;		_powerDown
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text11
  2535  000A44                     __ptext11:
  2536                           	opt stack 0
  2537  000A44                     _transmitCommand:
  2538                           	opt stack 22
  2539                           
  2540                           ;incstack = 0
  2541                           ;transmitCommand@command stored from wreg
  2542  000A44  6E06               	movwf	transmitCommand@command,c
  2543                           
  2544                           ;OLED.c: 105: i2c1_write1ByteRegister(0x3C,0x80,command);
  2545  000A46  0E80               	movlw	128
  2546  000A48  6E03               	movwf	i2c1_write1ByteRegister@reg,c
  2547  000A4A  0060  F018  F004   	movff	transmitCommand@command,i2c1_write1ByteRegister@data
  2548  000A50  0E3C               	movlw	60
  2549  000A52  EC29  F004         	call	_i2c1_write1ByteRegister
  2550  000A56  0012               	return		;funcret
  2551  000A58                     __end_of_transmitCommand:
  2552                           	opt stack 0
  2553                           
  2554 ;; *************** function _i2c1_write1ByteRegister *****************
  2555 ;; Defined at:
  2556 ;;		line 203 in file "mcc_generated_files/i2c1.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  address         1    wreg     unsigned char 
  2559 ;;  reg             1    2[COMRAM] unsigned char 
  2560 ;;  data            1    3[COMRAM] unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  address         1    4[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2572 ;;      Params:         2       0       0       0       0       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2575 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2576 ;;Total ram usage:        3 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    5
  2579 ;; This function calls:
  2580 ;;		_I2C1_Initialize
  2581 ;;		_sendByte
  2582 ;;		_wait4BusFree
  2583 ;;		_wait4Start
  2584 ;;		_wait4Stop
  2585 ;; This function is called by:
  2586 ;;		_transmitCommand
  2587 ;;		_transmitByte
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text12
  2592  000852                     __ptext12:
  2593                           	opt stack 0
  2594  000852                     _i2c1_write1ByteRegister:
  2595                           	opt stack 23
  2596                           
  2597                           ;incstack = 0
  2598                           ;i2c1_write1ByteRegister@address stored from wreg
  2599  000852  6E05               	movwf	i2c1_write1ByteRegister@address,c
  2600                           
  2601                           ;i2c1.c: 205: I2C1_Initialize();
  2602  000854  EC58  F004         	call	_I2C1_Initialize	;wreg free
  2603                           
  2604                           ;i2c1.c: 206: I2C1ADB1 = (uint8_t)(address<<1);
  2605  000858  5005               	movf	i2c1_write1ByteRegister@address,w,c
  2606  00085A  2405               	addwf	i2c1_write1ByteRegister@address,w,c
  2607  00085C  013D               	movlb	61	; () banked
  2608  00085E  6F6E               	movwf	110,b	;volatile
  2609                           
  2610                           ; BSR set to: 61
  2611                           ;i2c1.c: 207: wait4BusFree();
  2612  000860  ECFF  F004         	call	_wait4BusFree	;wreg free
  2613                           
  2614                           ;i2c1.c: 208: I2C1CNT = 2;
  2615  000864  0E02               	movlw	2
  2616  000866  013D               	movlb	61	; () banked
  2617  000868  6F6C               	movwf	108,b	;volatile
  2618                           
  2619                           ; BSR set to: 61
  2620                           ;i2c1.c: 209: I2C1CON0bits.S = 1;
  2621  00086A  8B73               	bsf	115,5,b	;volatile
  2622                           
  2623                           ; BSR set to: 61
  2624                           ;i2c1.c: 210: wait4Start();
  2625  00086C  ECF2  F004         	call	_wait4Start	;wreg free
  2626                           
  2627                           ;i2c1.c: 211: sendByte(reg);
  2628  000870  5003               	movf	i2c1_write1ByteRegister@reg,w,c
  2629  000872  EC80  F004         	call	_sendByte
  2630                           
  2631                           ;i2c1.c: 212: sendByte(data);
  2632  000876  5004               	movf	i2c1_write1ByteRegister@data,w,c
  2633  000878  EC80  F004         	call	_sendByte
  2634                           
  2635                           ;i2c1.c: 213: wait4Stop();
  2636  00087C  ECE5  F004         	call	_wait4Stop	;wreg free
  2637  000880  0012               	return		;funcret
  2638  000882                     __end_of_i2c1_write1ByteRegister:
  2639                           	opt stack 0
  2640                           
  2641 ;; *************** function _wait4Stop *****************
  2642 ;; Defined at:
  2643 ;;		line 162 in file "mcc_generated_files/i2c1.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  waitCount       1    0[COMRAM] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0
  2658 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2660 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2661 ;;Total ram usage:        1 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    4
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_i2c1_write1ByteRegister
  2668 ;;		_i2c1_writeNBytes
  2669 ;;		_i2c1_write2ByteRegister
  2670 ;;		_i2c1_read1ByteRegister
  2671 ;;		_i2c1_read2ByteRegister
  2672 ;;		_i2c1_readDataBlock
  2673 ;;		_i2c1_readNBytes
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text13
  2678  0009CA                     __ptext13:
  2679                           	opt stack 0
  2680  0009CA                     _wait4Stop:
  2681                           	opt stack 23
  2682                           
  2683                           ;i2c1.c: 164: uint8_t waitCount = 255;
  2684                           
  2685                           ;incstack = 0
  2686  0009CA  6801               	setf	wait4Stop@waitCount,c
  2687                           
  2688                           ;i2c1.c: 165: if(lastError == I2C1_GOOD)
  2689  0009CC  5041               	movf	_lastError,w,c
  2690  0009CE  A4D8               	btfss	16344,2,c
  2691  0009D0  0012               	return	
  2692  0009D2  D003               	goto	l1941
  2693  0009D4                     l483:
  2694                           
  2695                           ;i2c1.c: 168: {
  2696                           ;i2c1.c: 169: if(I2C1PIRbits.PCIF)
  2697  0009D4  013D               	movlb	61	; () banked
  2698  0009D6  B579               	btfsc	121,2,b	;volatile
  2699  0009D8  0012               	return	
  2700  0009DA                     l1941:
  2701                           
  2702                           ; BSR set to: 61
  2703                           ;i2c1.c: 173: else
  2704                           ;i2c1.c: 174: {
  2705                           ;i2c1.c: 175: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2706                           
  2707                           ; BSR set to: 61
  2708                           ;i2c1.c: 172: }
  2709  0009DA  2E01               	decfsz	wait4Stop@waitCount,f,c
  2710  0009DC  D7FB               	goto	l483
  2711                           
  2712                           ;i2c1.c: 176: }
  2713                           ;i2c1.c: 177: }
  2714                           ;i2c1.c: 178: lastError = I2C1_FAIL_TIMEOUT;
  2715  0009DE  0E01               	movlw	1
  2716  0009E0  6E41               	movwf	_lastError,c
  2717  0009E2  0012               	return	
  2718  0009E4                     __end_of_wait4Stop:
  2719                           	opt stack 0
  2720                           
  2721 ;; *************** function _wait4Start *****************
  2722 ;; Defined at:
  2723 ;;		line 80 in file "mcc_generated_files/i2c1.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  waitCount       1    0[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0
  2738 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2740 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2741 ;;Total ram usage:        1 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    4
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_i2c1_write1ByteRegister
  2748 ;;		_i2c1_writeNBytes
  2749 ;;		_i2c1_write2ByteRegister
  2750 ;;		_i2c1_read1ByteRegister
  2751 ;;		_i2c1_read2ByteRegister
  2752 ;;		_i2c1_readDataBlock
  2753 ;;		_i2c1_readNBytes
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text14
  2758  0009E4                     __ptext14:
  2759                           	opt stack 0
  2760  0009E4                     _wait4Start:
  2761                           	opt stack 23
  2762                           
  2763                           ;i2c1.c: 82: uint8_t waitCount = 255;
  2764                           
  2765                           ;incstack = 0
  2766  0009E4  6801               	setf	wait4Start@waitCount,c
  2767                           
  2768                           ;i2c1.c: 83: if(lastError == I2C1_GOOD)
  2769  0009E6  5041               	movf	_lastError,w,c
  2770  0009E8  A4D8               	btfss	16344,2,c
  2771  0009EA  0012               	return	
  2772  0009EC  D003               	goto	l1905
  2773  0009EE                     l447:
  2774                           
  2775                           ;i2c1.c: 86: {
  2776                           ;i2c1.c: 87: if(!I2C1CON0bits.S)
  2777  0009EE  013D               	movlb	61	; () banked
  2778  0009F0  AB73               	btfss	115,5,b	;volatile
  2779  0009F2  0012               	return	
  2780  0009F4                     l1905:
  2781                           
  2782                           ; BSR set to: 61
  2783                           ;i2c1.c: 91: else
  2784                           ;i2c1.c: 92: {
  2785                           ;i2c1.c: 93: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2786                           
  2787                           ; BSR set to: 61
  2788                           ;i2c1.c: 90: }
  2789  0009F4  2E01               	decfsz	wait4Start@waitCount,f,c
  2790  0009F6  D7FB               	goto	l447
  2791                           
  2792                           ;i2c1.c: 94: }
  2793                           ;i2c1.c: 95: }
  2794                           ;i2c1.c: 96: lastError = I2C1_FAIL_TIMEOUT;
  2795  0009F8  0E01               	movlw	1
  2796  0009FA  6E41               	movwf	_lastError,c
  2797  0009FC  0012               	return	
  2798  0009FE                     __end_of_wait4Start:
  2799                           	opt stack 0
  2800                           
  2801 ;; *************** function _wait4BusFree *****************
  2802 ;; Defined at:
  2803 ;;		line 100 in file "mcc_generated_files/i2c1.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  waitCount       1    0[COMRAM] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0
  2818 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2820 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2821 ;;Total ram usage:        1 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    4
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_i2c1_write1ByteRegister
  2828 ;;		_i2c1_writeNBytes
  2829 ;;		_i2c1_write2ByteRegister
  2830 ;;		_i2c1_read1ByteRegister
  2831 ;;		_i2c1_read2ByteRegister
  2832 ;;		_i2c1_readDataBlock
  2833 ;;		_i2c1_readNBytes
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text15
  2838  0009FE                     __ptext15:
  2839                           	opt stack 0
  2840  0009FE                     _wait4BusFree:
  2841                           	opt stack 23
  2842                           
  2843                           ;i2c1.c: 102: uint8_t waitCount = 255;
  2844                           
  2845                           ;incstack = 0
  2846  0009FE  6801               	setf	wait4BusFree@waitCount,c
  2847                           
  2848                           ;i2c1.c: 103: if(lastError == I2C1_GOOD)
  2849  000A00  5041               	movf	_lastError,w,c
  2850  000A02  A4D8               	btfss	16344,2,c
  2851  000A04  0012               	return	
  2852  000A06  D003               	goto	l1917
  2853  000A08                     l456:
  2854                           
  2855                           ;i2c1.c: 106: {
  2856                           ;i2c1.c: 107: if(I2C1STAT0bits.BFRE)
  2857  000A08  013D               	movlb	61	; () banked
  2858  000A0A  BF77               	btfsc	119,7,b	;volatile
  2859  000A0C  0012               	return	
  2860  000A0E                     l1917:
  2861                           
  2862                           ; BSR set to: 61
  2863                           ;i2c1.c: 111: else
  2864                           ;i2c1.c: 112: {
  2865                           ;i2c1.c: 113: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2866                           
  2867                           ; BSR set to: 61
  2868                           ;i2c1.c: 110: }
  2869  000A0E  2E01               	decfsz	wait4BusFree@waitCount,f,c
  2870  000A10  D7FB               	goto	l456
  2871                           
  2872                           ;i2c1.c: 114: }
  2873                           ;i2c1.c: 115: }
  2874                           ;i2c1.c: 116: lastError = I2C1_FAIL_TIMEOUT;
  2875  000A12  0E01               	movlw	1
  2876  000A14  6E41               	movwf	_lastError,c
  2877  000A16  0012               	return	
  2878  000A18                     __end_of_wait4BusFree:
  2879                           	opt stack 0
  2880                           
  2881 ;; *************** function _sendByte *****************
  2882 ;; Defined at:
  2883 ;;		line 120 in file "mcc_generated_files/i2c1.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  data            1    wreg     unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  data            1    0[COMRAM] unsigned char 
  2888 ;;  delayCounter    1    1[COMRAM] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0
  2899 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2901 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2902 ;;Total ram usage:        2 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    4
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_i2c1_write1ByteRegister
  2909 ;;		_i2c1_writeNBytes
  2910 ;;		_i2c1_write2ByteRegister
  2911 ;;		_i2c1_read1ByteRegister
  2912 ;;		_i2c1_read2ByteRegister
  2913 ;;		_i2c1_readDataBlock
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text16
  2918  000900                     __ptext16:
  2919                           	opt stack 0
  2920  000900                     _sendByte:
  2921                           	opt stack 23
  2922                           
  2923                           ;incstack = 0
  2924                           ;sendByte@data stored from wreg
  2925  000900  6E01               	movwf	sendByte@data,c
  2926                           
  2927                           ;i2c1.c: 122: uint8_t delayCounter = 255;
  2928  000902  6802               	setf	sendByte@delayCounter,c
  2929                           
  2930                           ;i2c1.c: 123: if(lastError == I2C1_GOOD)
  2931  000904  5041               	movf	_lastError,w,c
  2932  000906  A4D8               	btfss	16344,2,c
  2933  000908  0012               	return	
  2934  00090A  D007               	goto	l1929
  2935  00090C                     l465:
  2936                           
  2937                           ;i2c1.c: 126: {
  2938                           ;i2c1.c: 127: if(I2C1STAT1bits.TXBE)
  2939  00090C  013D               	movlb	61	; () banked
  2940  00090E  AB78               	btfss	120,5,b	;volatile
  2941  000910  D004               	goto	l1929
  2942                           
  2943                           ; BSR set to: 61
  2944                           ;i2c1.c: 128: {
  2945                           ;i2c1.c: 129: I2C1TXB = data;
  2946  000912  0060  F007  FD6B   	movff	sendByte@data,15723	;volatile
  2947                           
  2948                           ;i2c1.c: 130: return;
  2949  000918  0012               	return	
  2950  00091A                     l1929:
  2951                           
  2952                           ; BSR set to: 61
  2953                           ;i2c1.c: 132: else
  2954                           ;i2c1.c: 133: {
  2955                           ;i2c1.c: 134: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2956                           
  2957                           ; BSR set to: 61
  2958                           ;i2c1.c: 131: }
  2959  00091A  2E02               	decfsz	sendByte@delayCounter,f,c
  2960  00091C  D7F7               	goto	l465
  2961                           
  2962                           ;i2c1.c: 135: }
  2963                           ;i2c1.c: 136: }
  2964                           ;i2c1.c: 137: lastError = I2C1_FAIL_TIMEOUT;
  2965  00091E  0E01               	movlw	1
  2966  000920  6E41               	movwf	_lastError,c
  2967  000922  0012               	return	
  2968  000924                     __end_of_sendByte:
  2969                           	opt stack 0
  2970                           
  2971 ;; *************** function _SYSTEM_Initialize *****************
  2972 ;; Defined at:
  2973 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2990 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    6
  2994 ;; This function calls:
  2995 ;;		_I2C1_Initialize
  2996 ;;		_INTERRUPT_Initialize
  2997 ;;		_OSCILLATOR_Initialize
  2998 ;;		_PIN_MANAGER_Initialize
  2999 ;;		_PMD_Initialize
  3000 ;;		_TMR0_Initialize
  3001 ;;		_TMR2_Initialize
  3002 ;;		_UART1_Initialize
  3003 ;; This function is called by:
  3004 ;;		_main
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text17
  3009  000948                     __ptext17:
  3010                           	opt stack 0
  3011  000948                     _SYSTEM_Initialize:
  3012                           	opt stack 24
  3013                           
  3014                           ;mcc.c: 52: INTERRUPT_Initialize();
  3015                           
  3016                           ;incstack = 0
  3017  000948  EC4F  F005         	call	_INTERRUPT_Initialize	;wreg free
  3018                           
  3019                           ;mcc.c: 53: PMD_Initialize();
  3020  00094C  EC92  F004         	call	_PMD_Initialize	;wreg free
  3021                           
  3022                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  3023  000950  EC12  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  3024                           
  3025                           ;mcc.c: 55: OSCILLATOR_Initialize();
  3026  000954  EC0C  F005         	call	_OSCILLATOR_Initialize	;wreg free
  3027                           
  3028                           ;mcc.c: 56: TMR2_Initialize();
  3029  000958  ECB5  F004         	call	_TMR2_Initialize	;wreg free
  3030                           
  3031                           ;mcc.c: 57: TMR0_Initialize();
  3032  00095C  ECF6  F003         	call	_TMR0_Initialize	;wreg free
  3033                           
  3034                           ;mcc.c: 58: UART1_Initialize();
  3035  000960  EC4D  F002         	call	_UART1_Initialize	;wreg free
  3036                           
  3037                           ;mcc.c: 59: I2C1_Initialize();
  3038  000964  EC58  F004         	call	_I2C1_Initialize	;wreg free
  3039  000968  0012               	return		;funcret
  3040  00096A                     __end_of_SYSTEM_Initialize:
  3041                           	opt stack 0
  3042                           
  3043 ;; *************** function _UART1_Initialize *****************
  3044 ;; Defined at:
  3045 ;;		line 86 in file "mcc_generated_files/uart1.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2, status,0, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    5
  3066 ;; This function calls:
  3067 ;;		_UART1_SetErrorHandler
  3068 ;;		_UART1_SetFramingErrorHandler
  3069 ;;		_UART1_SetOverrunErrorHandler
  3070 ;;		_UART1_SetRxInterruptHandler
  3071 ;;		_UART1_SetTxInterruptHandler
  3072 ;; This function is called by:
  3073 ;;		_SYSTEM_Initialize
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text18
  3078  00049A                     __ptext18:
  3079                           	opt stack 0
  3080  00049A                     _UART1_Initialize:
  3081                           	opt stack 24
  3082                           
  3083                           ;uart1.c: 89: PIE3bits.U1RXIE = 0;
  3084                           
  3085                           ;incstack = 0
  3086  00049A  0139               	movlb	57	; () banked
  3087  00049C  9793               	bcf	147,3,b	;volatile
  3088                           
  3089                           ; BSR set to: 57
  3090                           ;uart1.c: 90: UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  3091  00049E  0EF2               	movlw	low _UART1_Receive_ISR
  3092  0004A0  6E01               	movwf	UART1_SetRxInterruptHandler@InterruptHandler,c
  3093  0004A2  0E03               	movlw	high _UART1_Receive_ISR
  3094  0004A4  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler+1,c
  3095  0004A6  EC33  F005         	call	_UART1_SetRxInterruptHandler	;wreg free
  3096                           
  3097                           ;uart1.c: 91: PIE3bits.U1TXIE = 0;
  3098  0004AA  0139               	movlb	57	; () banked
  3099  0004AC  9993               	bcf	147,4,b	;volatile
  3100                           
  3101                           ;uart1.c: 92: UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  3102  0004AE  0E20               	movlw	low _UART1_Transmit_ISR
  3103  0004B0  6E01               	movwf	UART1_SetTxInterruptHandler@InterruptHandler,c
  3104  0004B2  0E08               	movlw	high _UART1_Transmit_ISR
  3105  0004B4  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler+1,c
  3106  0004B6  EC2C  F005         	call	_UART1_SetTxInterruptHandler	;wreg free
  3107                           
  3108                           ;uart1.c: 97: U1P1L = 0x00;
  3109  0004BA  0E00               	movlw	0
  3110  0004BC  013D               	movlb	61	; () banked
  3111  0004BE  6FEC               	movwf	236,b	;volatile
  3112                           
  3113                           ; BSR set to: 61
  3114                           ;uart1.c: 100: U1P1H = 0x00;
  3115  0004C0  0E00               	movlw	0
  3116  0004C2  6FED               	movwf	237,b	;volatile
  3117                           
  3118                           ; BSR set to: 61
  3119                           ;uart1.c: 103: U1P2L = 0x00;
  3120  0004C4  0E00               	movlw	0
  3121  0004C6  6FEE               	movwf	238,b	;volatile
  3122                           
  3123                           ; BSR set to: 61
  3124                           ;uart1.c: 106: U1P2H = 0x00;
  3125  0004C8  0E00               	movlw	0
  3126  0004CA  6FEF               	movwf	239,b	;volatile
  3127                           
  3128                           ; BSR set to: 61
  3129                           ;uart1.c: 109: U1P3L = 0x00;
  3130  0004CC  0E00               	movlw	0
  3131  0004CE  6FF0               	movwf	240,b	;volatile
  3132                           
  3133                           ; BSR set to: 61
  3134                           ;uart1.c: 112: U1P3H = 0x00;
  3135  0004D0  0E00               	movlw	0
  3136  0004D2  6FF1               	movwf	241,b	;volatile
  3137                           
  3138                           ; BSR set to: 61
  3139                           ;uart1.c: 115: U1CON0 = 0xB0;
  3140  0004D4  0EB0               	movlw	176
  3141  0004D6  6FF2               	movwf	242,b	;volatile
  3142                           
  3143                           ; BSR set to: 61
  3144                           ;uart1.c: 118: U1CON1 = 0x80;
  3145  0004D8  0E80               	movlw	128
  3146  0004DA  6FF3               	movwf	243,b	;volatile
  3147                           
  3148                           ; BSR set to: 61
  3149                           ;uart1.c: 121: U1CON2 = 0x00;
  3150  0004DC  0E00               	movlw	0
  3151  0004DE  6FF4               	movwf	244,b	;volatile
  3152                           
  3153                           ; BSR set to: 61
  3154                           ;uart1.c: 124: U1BRGL = 0x19;
  3155  0004E0  0E19               	movlw	25
  3156  0004E2  6FF5               	movwf	245,b	;volatile
  3157                           
  3158                           ; BSR set to: 61
  3159                           ;uart1.c: 127: U1BRGH = 0x00;
  3160  0004E4  0E00               	movlw	0
  3161  0004E6  6FF6               	movwf	246,b	;volatile
  3162                           
  3163                           ; BSR set to: 61
  3164                           ;uart1.c: 130: U1FIFO = 0x00;
  3165  0004E8  0E00               	movlw	0
  3166  0004EA  6FF7               	movwf	247,b	;volatile
  3167                           
  3168                           ; BSR set to: 61
  3169                           ;uart1.c: 133: U1UIR = 0x00;
  3170  0004EC  0E00               	movlw	0
  3171  0004EE  6FF8               	movwf	248,b	;volatile
  3172                           
  3173                           ; BSR set to: 61
  3174                           ;uart1.c: 136: U1ERRIR = 0x00;
  3175  0004F0  0E00               	movlw	0
  3176  0004F2  6FF9               	movwf	249,b	;volatile
  3177                           
  3178                           ; BSR set to: 61
  3179                           ;uart1.c: 139: U1ERRIE = 0x00;
  3180  0004F4  0E00               	movlw	0
  3181  0004F6  6FFA               	movwf	250,b	;volatile
  3182                           
  3183                           ; BSR set to: 61
  3184                           ;uart1.c: 142: UART1_SetFramingErrorHandler(UART1_DefaultFramingErrorHandler);
  3185  0004F8  0EB0               	movlw	low _UART1_DefaultFramingErrorHandler
  3186  0004FA  6E01               	movwf	UART1_SetFramingErrorHandler@interruptHandler,c
  3187  0004FC  0E0A               	movlw	high _UART1_DefaultFramingErrorHandler
  3188  0004FE  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler+1,c
  3189  000500  EC41  F005         	call	_UART1_SetFramingErrorHandler	;wreg free
  3190                           
  3191                           ;uart1.c: 143: UART1_SetOverrunErrorHandler(UART1_DefaultOverrunErrorHandler);
  3192  000504  0EAE               	movlw	low _UART1_DefaultOverrunErrorHandler
  3193  000506  6E01               	movwf	UART1_SetOverrunErrorHandler@interruptHandler,c
  3194  000508  0E0A               	movlw	high _UART1_DefaultOverrunErrorHandler
  3195  00050A  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler+1,c
  3196  00050C  EC3A  F005         	call	_UART1_SetOverrunErrorHandler	;wreg free
  3197                           
  3198                           ;uart1.c: 144: UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  3199  000510  0EA4               	movlw	low _UART1_DefaultErrorHandler
  3200  000512  6E01               	movwf	UART1_SetErrorHandler@interruptHandler,c
  3201  000514  0E0A               	movlw	high _UART1_DefaultErrorHandler
  3202  000516  6E02               	movwf	UART1_SetErrorHandler@interruptHandler+1,c
  3203  000518  EC48  F005         	call	_UART1_SetErrorHandler	;wreg free
  3204                           
  3205                           ;uart1.c: 146: uart1RxLastError.status = 0;
  3206  00051C  0E00               	movlw	0
  3207  00051E  6E42               	movwf	_uart1RxLastError,c	;volatile
  3208                           
  3209                           ;uart1.c: 149: uart1TxHead = 0;
  3210  000520  0E00               	movlw	0
  3211  000522  6E47               	movwf	_uart1TxHead,c	;volatile
  3212                           
  3213                           ;uart1.c: 150: uart1TxTail = 0;
  3214  000524  0E00               	movlw	0
  3215  000526  6E46               	movwf	_uart1TxTail,c	;volatile
  3216                           
  3217                           ;uart1.c: 151: uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  3218  000528  0E08               	movlw	8
  3219  00052A  6E58               	movwf	_uart1TxBufferRemaining,c	;volatile
  3220                           
  3221                           ;uart1.c: 152: uart1RxHead = 0;
  3222  00052C  0E00               	movlw	0
  3223  00052E  6E45               	movwf	_uart1RxHead,c	;volatile
  3224                           
  3225                           ;uart1.c: 153: uart1RxTail = 0;
  3226  000530  0E00               	movlw	0
  3227  000532  6E44               	movwf	_uart1RxTail,c	;volatile
  3228                           
  3229                           ;uart1.c: 154: uart1RxCount = 0;
  3230  000534  0E00               	movlw	0
  3231  000536  6E43               	movwf	_uart1RxCount,c	;volatile
  3232                           
  3233                           ;uart1.c: 157: PIE3bits.U1RXIE = 1;
  3234  000538  0139               	movlb	57	; () banked
  3235  00053A  8793               	bsf	147,3,b	;volatile
  3236                           
  3237                           ; BSR set to: 57
  3238  00053C  0012               	return		;funcret
  3239  00053E                     __end_of_UART1_Initialize:
  3240                           	opt stack 0
  3241                           
  3242 ;; *************** function _UART1_SetTxInterruptHandler *****************
  3243 ;; Defined at:
  3244 ;;		line 318 in file "mcc_generated_files/uart1.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  3247 ;;		 -> UART1_Transmit_ISR(1), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3259 ;;      Params:         2       0       0       0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3262 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3263 ;;Total ram usage:        2 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    4
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_UART1_Initialize
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text19
  3274  000A58                     __ptext19:
  3275                           	opt stack 0
  3276  000A58                     _UART1_SetTxInterruptHandler:
  3277                           	opt stack 24
  3278                           
  3279                           ;uart1.c: 319: UART1_TxInterruptHandler = InterruptHandler;
  3280                           
  3281                           ; BSR set to: 57
  3282                           ;incstack = 0
  3283  000A58  0060  F004  F052   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  3284  000A5E  0060  F008  F053   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  3285  000A64  0012               	return		;funcret
  3286  000A66                     __end_of_UART1_SetTxInterruptHandler:
  3287                           	opt stack 0
  3288                           
  3289 ;; *************** function _UART1_SetRxInterruptHandler *****************
  3290 ;; Defined at:
  3291 ;;		line 314 in file "mcc_generated_files/uart1.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  3294 ;;		 -> UART1_Receive_ISR(1), 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3306 ;;      Params:         2       0       0       0       0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3309 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3310 ;;Total ram usage:        2 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    4
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_UART1_Initialize
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text20
  3321  000A66                     __ptext20:
  3322                           	opt stack 0
  3323  000A66                     _UART1_SetRxInterruptHandler:
  3324                           	opt stack 24
  3325                           
  3326                           ;uart1.c: 315: UART1_RxInterruptHandler = InterruptHandler;
  3327                           
  3328                           ;incstack = 0
  3329  000A66  0060  F004  F054   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  3330  000A6C  0060  F008  F055   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  3331  000A72  0012               	return		;funcret
  3332  000A74                     __end_of_UART1_SetRxInterruptHandler:
  3333                           	opt stack 0
  3334                           
  3335 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  3336 ;; Defined at:
  3337 ;;		line 304 in file "mcc_generated_files/uart1.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  3340 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3352 ;;      Params:         2       0       0       0       0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3355 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3356 ;;Total ram usage:        2 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    4
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_UART1_Initialize
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text21
  3367  000A74                     __ptext21:
  3368                           	opt stack 0
  3369  000A74                     _UART1_SetOverrunErrorHandler:
  3370                           	opt stack 24
  3371                           
  3372                           ;uart1.c: 305: UART1_OverrunErrorHandler = interruptHandler;
  3373                           
  3374                           ;incstack = 0
  3375  000A74  0060  F004  F04E   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  3376  000A7A  0060  F008  F04F   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  3377  000A80  0012               	return		;funcret
  3378  000A82                     __end_of_UART1_SetOverrunErrorHandler:
  3379                           	opt stack 0
  3380                           
  3381 ;; *************** function _UART1_SetFramingErrorHandler *****************
  3382 ;; Defined at:
  3383 ;;		line 300 in file "mcc_generated_files/uart1.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  3386 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3398 ;;      Params:         2       0       0       0       0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3401 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3402 ;;Total ram usage:        2 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    4
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_UART1_Initialize
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text22
  3413  000A82                     __ptext22:
  3414                           	opt stack 0
  3415  000A82                     _UART1_SetFramingErrorHandler:
  3416                           	opt stack 24
  3417                           
  3418                           ;uart1.c: 301: UART1_FramingErrorHandler = interruptHandler;
  3419                           
  3420                           ;incstack = 0
  3421  000A82  0060  F004  F050   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3422  000A88  0060  F008  F051   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3423  000A8E  0012               	return		;funcret
  3424  000A90                     __end_of_UART1_SetFramingErrorHandler:
  3425                           	opt stack 0
  3426                           
  3427 ;; *************** function _UART1_SetErrorHandler *****************
  3428 ;; Defined at:
  3429 ;;		line 308 in file "mcc_generated_files/uart1.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  3432 ;;		 -> UART1_DefaultErrorHandler(1), 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:         2       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3447 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        2 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    4
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_UART1_Initialize
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text23
  3459  000A90                     __ptext23:
  3460                           	opt stack 0
  3461  000A90                     _UART1_SetErrorHandler:
  3462                           	opt stack 24
  3463                           
  3464                           ;uart1.c: 309: UART1_ErrorHandler = interruptHandler;
  3465                           
  3466                           ;incstack = 0
  3467  000A90  0060  F004  F04C   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  3468  000A96  0060  F008  F04D   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  3469  000A9C  0012               	return		;funcret
  3470  000A9E                     __end_of_UART1_SetErrorHandler:
  3471                           	opt stack 0
  3472                           
  3473 ;; *************** function _TMR2_Initialize *****************
  3474 ;; Defined at:
  3475 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3493 ;;Total ram usage:        0 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    4
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_SYSTEM_Initialize
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text24
  3504  00096A                     __ptext24:
  3505                           	opt stack 0
  3506  00096A                     _TMR2_Initialize:
  3507                           	opt stack 25
  3508                           
  3509                           ;tmr2.c: 67: T2CLKCON = 0x03;
  3510                           
  3511                           ;incstack = 0
  3512  00096A  0E03               	movlw	3
  3513  00096C  013F               	movlb	63	; () banked
  3514  00096E  6FAE               	movwf	174,b	;volatile
  3515                           
  3516                           ;tmr2.c: 70: T2HLT = 0x00;
  3517  000970  0E00               	movlw	0
  3518  000972  6FAD               	movwf	173,b	;volatile
  3519                           
  3520                           ;tmr2.c: 73: T2RST = 0x00;
  3521  000974  0E00               	movlw	0
  3522  000976  6FAF               	movwf	175,b	;volatile
  3523                           
  3524                           ;tmr2.c: 76: T2PR = 0x09;
  3525  000978  0E09               	movlw	9
  3526  00097A  6FAB               	movwf	171,b	;volatile
  3527                           
  3528                           ;tmr2.c: 79: T2TMR = 0x00;
  3529  00097C  0E00               	movlw	0
  3530  00097E  6FAA               	movwf	170,b	;volatile
  3531                           
  3532                           ; BSR set to: 63
  3533                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
  3534  000980  0139               	movlb	57	; () banked
  3535  000982  95A4               	bcf	164,2,b	;volatile
  3536                           
  3537                           ;tmr2.c: 85: T2CON = 0x80;
  3538  000984  0E80               	movlw	128
  3539  000986  013F               	movlb	63	; () banked
  3540  000988  6FAC               	movwf	172,b	;volatile
  3541                           
  3542                           ; BSR set to: 63
  3543  00098A  0012               	return		;funcret
  3544  00098C                     __end_of_TMR2_Initialize:
  3545                           	opt stack 0
  3546                           
  3547 ;; *************** function _TMR0_Initialize *****************
  3548 ;; Defined at:
  3549 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3565 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3566 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3567 ;;Total ram usage:        2 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    4
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_SYSTEM_Initialize
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text25
  3578  0007EC                     __ptext25:
  3579                           	opt stack 0
  3580  0007EC                     _TMR0_Initialize:
  3581                           	opt stack 25
  3582                           
  3583                           ;tmr0.c: 70: T0CON1 = 0x60;
  3584                           
  3585                           ; BSR set to: 63
  3586                           ;incstack = 0
  3587  0007EC  0E60               	movlw	96
  3588  0007EE  013F               	movlb	63	; () banked
  3589  0007F0  6FB9               	movwf	185,b	;volatile
  3590                           
  3591                           ;tmr0.c: 73: TMR0H = 0xD8;
  3592  0007F2  0ED8               	movlw	216
  3593  0007F4  6FB7               	movwf	183,b	;volatile
  3594                           
  3595                           ;tmr0.c: 76: TMR0L = 0xF0;
  3596  0007F6  0EF0               	movlw	240
  3597  0007F8  6FB6               	movwf	182,b	;volatile
  3598                           
  3599                           ; BSR set to: 63
  3600                           ;tmr0.c: 79: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  3601  0007FA  51B6               	movf	182,w,b	;volatile
  3602  0007FC  006F FEDC  F001    	movff	16311,??_TMR0_Initialize	;volatile
  3603  000802  6A02               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  3604  000804  0060  F004  F002   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3605  00080A  6A01               	clrf	??_TMR0_Initialize,c
  3606  00080C  1001               	iorwf	??_TMR0_Initialize,w,c
  3607  00080E  6E56               	movwf	_timer0ReloadVal16bit,c	;volatile
  3608  000810  5002               	movf	??_TMR0_Initialize+1,w,c
  3609  000812  6E57               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  3610                           
  3611                           ; BSR set to: 63
  3612                           ;tmr0.c: 82: PIR3bits.TMR0IF = 0;
  3613  000814  0139               	movlb	57	; () banked
  3614  000816  9FA3               	bcf	163,7,b	;volatile
  3615                           
  3616                           ; BSR set to: 57
  3617                           ;tmr0.c: 85: T0CON0 = 0x90;
  3618  000818  0E90               	movlw	144
  3619  00081A  013F               	movlb	63	; () banked
  3620  00081C  6FB8               	movwf	184,b	;volatile
  3621                           
  3622                           ; BSR set to: 63
  3623  00081E  0012               	return		;funcret
  3624  000820                     __end_of_TMR0_Initialize:
  3625                           	opt stack 0
  3626                           
  3627 ;; *************** function _PMD_Initialize *****************
  3628 ;; Defined at:
  3629 ;;		line 76 in file "mcc_generated_files/mcc.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3646 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    4
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_SYSTEM_Initialize
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text26
  3658  000924                     __ptext26:
  3659                           	opt stack 0
  3660  000924                     _PMD_Initialize:
  3661                           	opt stack 25
  3662                           
  3663                           ;mcc.c: 79: PMD0 = 0x00;
  3664                           
  3665                           ; BSR set to: 63
  3666                           ;incstack = 0
  3667  000924  0E00               	movlw	0
  3668  000926  0139               	movlb	57	; () banked
  3669  000928  6FC0               	movwf	192,b	;volatile
  3670                           
  3671                           ;mcc.c: 81: PMD1 = 0x00;
  3672  00092A  0E00               	movlw	0
  3673  00092C  6FC1               	movwf	193,b	;volatile
  3674                           
  3675                           ;mcc.c: 83: PMD2 = 0x00;
  3676  00092E  0E00               	movlw	0
  3677  000930  6FC2               	movwf	194,b	;volatile
  3678                           
  3679                           ;mcc.c: 85: PMD3 = 0x00;
  3680  000932  0E00               	movlw	0
  3681  000934  6FC3               	movwf	195,b	;volatile
  3682                           
  3683                           ;mcc.c: 87: PMD4 = 0x00;
  3684  000936  0E00               	movlw	0
  3685  000938  6FC4               	movwf	196,b	;volatile
  3686                           
  3687                           ;mcc.c: 89: PMD5 = 0x00;
  3688  00093A  0E00               	movlw	0
  3689  00093C  6FC5               	movwf	197,b	;volatile
  3690                           
  3691                           ;mcc.c: 91: PMD6 = 0x00;
  3692  00093E  0E00               	movlw	0
  3693  000940  6FC6               	movwf	198,b	;volatile
  3694                           
  3695                           ;mcc.c: 93: PMD7 = 0x00;
  3696  000942  0E00               	movlw	0
  3697  000944  6FC7               	movwf	199,b	;volatile
  3698                           
  3699                           ; BSR set to: 57
  3700  000946  0012               	return		;funcret
  3701  000948                     __end_of_PMD_Initialize:
  3702                           	opt stack 0
  3703                           
  3704 ;; *************** function _PIN_MANAGER_Initialize *****************
  3705 ;; Defined at:
  3706 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3723 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3724 ;;Total ram usage:        0 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    4
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_SYSTEM_Initialize
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text27
  3735  000624                     __ptext27:
  3736                           	opt stack 0
  3737  000624                     _PIN_MANAGER_Initialize:
  3738                           	opt stack 25
  3739                           
  3740                           ;pin_manager.c: 60: LATA = 0x00;
  3741                           
  3742                           ; BSR set to: 57
  3743                           ;incstack = 0
  3744  000624  0E00               	movlw	0
  3745  000626  013F               	movlb	63	; () banked
  3746  000628  6FBA               	movwf	186,b	;volatile
  3747                           
  3748                           ;pin_manager.c: 61: LATB = 0x00;
  3749  00062A  0E00               	movlw	0
  3750  00062C  6FBB               	movwf	187,b	;volatile
  3751                           
  3752                           ;pin_manager.c: 62: LATC = 0x00;
  3753  00062E  0E00               	movlw	0
  3754  000630  6FBC               	movwf	188,b	;volatile
  3755                           
  3756                           ; BSR set to: 63
  3757                           ;pin_manager.c: 67: TRISA = 0xFF;
  3758  000632  69C2               	setf	194,b	;volatile
  3759                           
  3760                           ; BSR set to: 63
  3761                           ;pin_manager.c: 68: TRISB = 0xFF;
  3762  000634  69C3               	setf	195,b	;volatile
  3763                           
  3764                           ;pin_manager.c: 69: TRISC = 0xE7;
  3765  000636  0EE7               	movlw	231
  3766  000638  6FC4               	movwf	196,b	;volatile
  3767                           
  3768                           ;pin_manager.c: 74: ANSELC = 0x67;
  3769  00063A  0E67               	movlw	103
  3770  00063C  013A               	movlb	58	; () banked
  3771  00063E  6F60               	movwf	96,b	;volatile
  3772                           
  3773                           ; BSR set to: 58
  3774                           ;pin_manager.c: 75: ANSELB = 0xFF;
  3775  000640  6950               	setf	80,b	;volatile
  3776                           
  3777                           ; BSR set to: 58
  3778                           ;pin_manager.c: 76: ANSELA = 0xFF;
  3779  000642  6940               	setf	64,b	;volatile
  3780                           
  3781                           ;pin_manager.c: 81: WPUE = 0x00;
  3782  000644  0E00               	movlw	0
  3783  000646  6F81               	movwf	129,b	;volatile
  3784                           
  3785                           ;pin_manager.c: 82: WPUB = 0x00;
  3786  000648  0E00               	movlw	0
  3787  00064A  6F51               	movwf	81,b	;volatile
  3788                           
  3789                           ;pin_manager.c: 83: WPUA = 0x00;
  3790  00064C  0E00               	movlw	0
  3791  00064E  6F41               	movwf	65,b	;volatile
  3792                           
  3793                           ;pin_manager.c: 84: WPUC = 0x00;
  3794  000650  0E00               	movlw	0
  3795  000652  6F61               	movwf	97,b	;volatile
  3796                           
  3797                           ;pin_manager.c: 89: ODCONA = 0x00;
  3798  000654  0E00               	movlw	0
  3799  000656  6F42               	movwf	66,b	;volatile
  3800                           
  3801                           ;pin_manager.c: 90: ODCONB = 0x00;
  3802  000658  0E00               	movlw	0
  3803  00065A  6F52               	movwf	82,b	;volatile
  3804                           
  3805                           ;pin_manager.c: 91: ODCONC = 0x18;
  3806  00065C  0E18               	movlw	24
  3807  00065E  6F62               	movwf	98,b	;volatile
  3808                           
  3809                           ; BSR set to: 58
  3810                           ;pin_manager.c: 96: SLRCONA = 0xFF;
  3811  000660  6943               	setf	67,b	;volatile
  3812                           
  3813                           ; BSR set to: 58
  3814                           ;pin_manager.c: 97: SLRCONB = 0xFF;
  3815  000662  6953               	setf	83,b	;volatile
  3816                           
  3817                           ; BSR set to: 58
  3818                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  3819  000664  6963               	setf	99,b	;volatile
  3820                           
  3821                           ;pin_manager.c: 107: I2C1SDAPPS = 0x14;
  3822  000666  0E14               	movlw	20
  3823  000668  6FE4               	movwf	228,b	;volatile
  3824                           
  3825                           ;pin_manager.c: 108: RC3PPS = 0x21;
  3826  00066A  0E21               	movlw	33
  3827  00066C  6F13               	movwf	19,b	;volatile
  3828                           
  3829                           ;pin_manager.c: 109: RC4PPS = 0x22;
  3830  00066E  0E22               	movlw	34
  3831  000670  6F14               	movwf	20,b	;volatile
  3832                           
  3833                           ;pin_manager.c: 110: U1RXPPS = 0x17;
  3834  000672  0E17               	movlw	23
  3835  000674  6FE7               	movwf	231,b	;volatile
  3836                           
  3837                           ;pin_manager.c: 111: I2C1SCLPPS = 0x13;
  3838  000676  0E13               	movlw	19
  3839  000678  6FE3               	movwf	227,b	;volatile
  3840                           
  3841                           ; BSR set to: 58
  3842  00067A  0012               	return		;funcret
  3843  00067C                     __end_of_PIN_MANAGER_Initialize:
  3844                           	opt stack 0
  3845                           
  3846 ;; *************** function _OSCILLATOR_Initialize *****************
  3847 ;; Defined at:
  3848 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    4
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_SYSTEM_Initialize
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text28
  3877  000A18                     __ptext28:
  3878                           	opt stack 0
  3879  000A18                     _OSCILLATOR_Initialize:
  3880                           	opt stack 25
  3881                           
  3882                           ;mcc.c: 65: OSCCON1 = 0x70;
  3883                           
  3884                           ; BSR set to: 58
  3885                           ;incstack = 0
  3886  000A18  0E70               	movlw	112
  3887  000A1A  0139               	movlb	57	; () banked
  3888  000A1C  6FD9               	movwf	217,b	;volatile
  3889                           
  3890                           ;mcc.c: 67: OSCCON3 = 0x00;
  3891  000A1E  0E00               	movlw	0
  3892  000A20  6FDB               	movwf	219,b	;volatile
  3893                           
  3894                           ;mcc.c: 69: OSCEN = 0x00;
  3895  000A22  0E00               	movlw	0
  3896  000A24  6FDD               	movwf	221,b	;volatile
  3897                           
  3898                           ;mcc.c: 71: OSCFRQ = 0x02;
  3899  000A26  0E02               	movlw	2
  3900  000A28  6FDF               	movwf	223,b	;volatile
  3901                           
  3902                           ;mcc.c: 73: OSCTUNE = 0x00;
  3903  000A2A  0E00               	movlw	0
  3904  000A2C  6FDE               	movwf	222,b	;volatile
  3905                           
  3906                           ; BSR set to: 57
  3907  000A2E  0012               	return		;funcret
  3908  000A30                     __end_of_OSCILLATOR_Initialize:
  3909                           	opt stack 0
  3910                           
  3911 ;; *************** function _INTERRUPT_Initialize *****************
  3912 ;; Defined at:
  3913 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		None
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3930 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    4
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_SYSTEM_Initialize
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text29
  3942  000A9E                     __ptext29:
  3943                           	opt stack 0
  3944  000A9E                     _INTERRUPT_Initialize:
  3945                           	opt stack 25
  3946                           
  3947                           ;interrupt_manager.c: 55: INTCON0bits.IPEN = 0;
  3948                           
  3949                           ; BSR set to: 57
  3950                           ;incstack = 0
  3951  000A9E  013F               	movlb	63	; () banked
  3952  000AA0  9BD2               	bcf	210,5,b	;volatile
  3953                           
  3954                           ; BSR set to: 63
  3955  000AA2  0012               	return		;funcret
  3956  000AA4                     __end_of_INTERRUPT_Initialize:
  3957                           	opt stack 0
  3958                           
  3959 ;; *************** function _I2C1_Initialize *****************
  3960 ;; Defined at:
  3961 ;;		line 57 in file "mcc_generated_files/i2c1.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    4
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_SYSTEM_Initialize
  3986 ;;		_i2c1_write1ByteRegister
  3987 ;;		_i2c1_writeNBytes
  3988 ;;		_i2c1_write2ByteRegister
  3989 ;;		_i2c1_read1ByteRegister
  3990 ;;		_i2c1_read2ByteRegister
  3991 ;;		_i2c1_readDataBlock
  3992 ;;		_i2c1_readNBytes
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text30
  3997  0008B0                     __ptext30:
  3998                           	opt stack 0
  3999  0008B0                     _I2C1_Initialize:
  4000                           	opt stack 23
  4001                           
  4002                           ;i2c1.c: 59: if(!I2C1CON0bits.EN || lastError != I2C1_GOOD)
  4003                           
  4004                           ; BSR set to: 63
  4005                           ;incstack = 0
  4006  0008B0  013D               	movlb	61	; () banked
  4007  0008B2  AF73               	btfss	115,7,b	;volatile
  4008  0008B4  D003               	goto	u490
  4009                           
  4010                           ; BSR set to: 61
  4011  0008B6  5041               	movf	_lastError,w,c
  4012  0008B8  B4D8               	btfsc	16344,2,c
  4013  0008BA  0012               	return	
  4014  0008BC                     u490:
  4015                           
  4016                           ; BSR set to: 61
  4017                           ;i2c1.c: 60: {
  4018                           ;i2c1.c: 61: lastError = I2C1_GOOD;
  4019                           
  4020                           ; BSR set to: 61
  4021  0008BC  0E00               	movlw	0
  4022  0008BE  6E41               	movwf	_lastError,c
  4023                           
  4024                           ;i2c1.c: 63: I2C1CON1 = 0x80;
  4025  0008C0  0E80               	movlw	128
  4026  0008C2  6F74               	movwf	116,b	;volatile
  4027                           
  4028                           ;i2c1.c: 65: I2C1CON2 = 0x20;
  4029  0008C4  0E20               	movlw	32
  4030  0008C6  6F75               	movwf	117,b	;volatile
  4031                           
  4032                           ;i2c1.c: 67: I2C1CLK = 0x06;
  4033  0008C8  0E06               	movlw	6
  4034  0008CA  6F7B               	movwf	123,b	;volatile
  4035                           
  4036                           ;i2c1.c: 69: I2C1CON0 = 0x84;
  4037  0008CC  0E84               	movlw	132
  4038  0008CE  6F73               	movwf	115,b	;volatile
  4039                           
  4040                           ;i2c1.c: 70: I2C1PIR = 0;
  4041  0008D0  0E00               	movlw	0
  4042  0008D2  6F79               	movwf	121,b	;volatile
  4043                           
  4044                           ;i2c1.c: 71: I2C1ERR = 0;
  4045  0008D4  0E00               	movlw	0
  4046  0008D6  6F76               	movwf	118,b	;volatile
  4047  0008D8  0012               	return	
  4048  0008DA                     __end_of_I2C1_Initialize:
  4049                           	opt stack 0
  4050                           
  4051 ;; *************** function _INTERRUPT_InterruptManager *****************
  4052 ;; Defined at:
  4053 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    3
  4074 ;; This function calls:
  4075 ;;		Absolute function
  4076 ;;		_UART1_Receive_ISR
  4077 ;;		_UART1_Transmit_ISR
  4078 ;; This function is called by:
  4079 ;;		Interrupt level 2
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text31
  4084  000772                     __ptext31:
  4085                           	opt stack 0
  4086  000772                     _INTERRUPT_InterruptManager:
  4087                           	opt stack 22
  4088                           
  4089                           ;interrupt_manager.c: 61: if(PIE3bits.U1TXIE == 1 && PIR3bits.U1TXIF == 1)
  4090                           
  4091                           ; BSR set to: 61
  4092                           ;incstack = 0
  4093  000772  0139               	movlb	57	; () banked
  4094  000774  B993               	btfsc	147,4,b	;volatile
  4095                           
  4096                           ; BSR set to: 57
  4097  000776  A9A3               	btfss	163,4,b	;volatile
  4098  000778  D00C               	goto	i2l120
  4099                           
  4100                           ; BSR set to: 57
  4101                           ;interrupt_manager.c: 62: {
  4102                           ;interrupt_manager.c: 63: UART1_TxInterruptHandler();
  4103  00077A  D801               	call	i2u42_48
  4104  00077C  0011               	retfie		f
  4105  00077E                     i2u42_48:
  4106  00077E  0005               	push	
  4107  000780  6EFA               	movwf	16378,c
  4108  000782  5052               	movf	_UART1_TxInterruptHandler,w,c
  4109  000784  6EFD               	movwf	16381,c
  4110  000786  5053               	movf	_UART1_TxInterruptHandler+1,w,c
  4111  000788  6EFE               	movwf	16382,c
  4112  00078A  50F8               	movf	16376,w,c
  4113  00078C  6EFF               	movwf	16383,c
  4114  00078E  50FA               	movf	16378,w,c
  4115  000790  0012               	return		;indir
  4116  000792                     i2l120:
  4117                           
  4118                           ; BSR set to: 57
  4119                           ;interrupt_manager.c: 65: else if(PIE3bits.U1RXIE == 1 && PIR3bits.U1RXIF == 1)
  4120  000792  A793               	btfss	147,3,b	;volatile
  4121  000794  0011               	retfie		f
  4122                           
  4123                           ; BSR set to: 57
  4124  000796  A7A3               	btfss	163,3,b	;volatile
  4125  000798  0011               	retfie		f
  4126                           
  4127                           ; BSR set to: 57
  4128                           ;interrupt_manager.c: 66: {
  4129                           ;interrupt_manager.c: 67: UART1_RxInterruptHandler();
  4130  00079A  D801               	call	i2u45_48
  4131  00079C  0011               	retfie		f
  4132  00079E                     i2u45_48:
  4133  00079E  0005               	push	
  4134  0007A0  6EFA               	movwf	16378,c
  4135  0007A2  5054               	movf	_UART1_RxInterruptHandler,w,c
  4136  0007A4  6EFD               	movwf	16381,c
  4137  0007A6  5055               	movf	_UART1_RxInterruptHandler+1,w,c
  4138  0007A8  6EFE               	movwf	16382,c
  4139  0007AA  50F8               	movf	16376,w,c
  4140  0007AC  6EFF               	movwf	16383,c
  4141  0007AE  50FA               	movf	16378,w,c
  4142  0007B0  0012               	return		;indir
  4143  0007B2                     __end_of_INTERRUPT_InterruptManager:
  4144                           	opt stack 0
  4145                           
  4146 ;; *************** function _UART1_Transmit_ISR *****************
  4147 ;; Defined at:
  4148 ;;		line 238 in file "mcc_generated_files/uart1.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4165 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4166 ;;Total ram usage:        0 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_UART1_Initialize
  4172 ;;		_INTERRUPT_InterruptManager
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text32
  4177  000820                     __ptext32:
  4178                           	opt stack 0
  4179  000820                     _UART1_Transmit_ISR:
  4180                           	opt stack 24
  4181                           
  4182                           ;uart1.c: 241: if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining)
  4183                           
  4184                           ;incstack = 0
  4185  000820  0E08               	movlw	8
  4186  000822  6058               	cpfslt	_uart1TxBufferRemaining,c	;volatile
  4187  000824  D013               	goto	i2l254
  4188                           
  4189                           ;uart1.c: 242: {
  4190                           ;uart1.c: 243: U1TXB = uart1TxBuffer[uart1TxTail++];
  4191  000826  5046               	movf	_uart1TxTail,w,c	;volatile
  4192  000828  0D01               	mullw	1
  4193  00082A  0E39               	movlw	low _uart1TxBuffer
  4194  00082C  24F3               	addwf	16371,w,c
  4195  00082E  6ED9               	movwf	16345,c
  4196  000830  0E00               	movlw	high _uart1TxBuffer
  4197  000832  20F4               	addwfc	16372,w,c
  4198  000834  6EDA               	movwf	16346,c
  4199  000836  50DF               	movf	16351,w,c
  4200  000838  013D               	movlb	61	; () banked
  4201  00083A  6FEA               	movwf	234,b	;volatile
  4202                           
  4203                           ; BSR set to: 61
  4204  00083C  2A46               	incf	_uart1TxTail,f,c	;volatile
  4205                           
  4206                           ; BSR set to: 61
  4207                           ;uart1.c: 244: if(sizeof(uart1TxBuffer) <= uart1TxTail)
  4208  00083E  0E07               	movlw	7
  4209  000840  6446               	cpfsgt	_uart1TxTail,c	;volatile
  4210  000842  D002               	goto	i2l255
  4211                           
  4212                           ; BSR set to: 61
  4213                           ;uart1.c: 245: {
  4214                           ;uart1.c: 246: uart1TxTail = 0;
  4215  000844  0E00               	movlw	0
  4216  000846  6E46               	movwf	_uart1TxTail,c	;volatile
  4217  000848                     i2l255:
  4218                           
  4219                           ; BSR set to: 61
  4220                           ;uart1.c: 247: }
  4221                           ;uart1.c: 248: uart1TxBufferRemaining++;
  4222                           
  4223                           ; BSR set to: 61
  4224  000848  2A58               	incf	_uart1TxBufferRemaining,f,c	;volatile
  4225                           
  4226                           ;uart1.c: 249: }
  4227  00084A  0012               	return	
  4228  00084C                     i2l254:
  4229                           
  4230                           ;uart1.c: 250: else
  4231                           ;uart1.c: 251: {
  4232                           ;uart1.c: 252: PIE3bits.U1TXIE = 0;
  4233  00084C  0139               	movlb	57	; () banked
  4234  00084E  9993               	bcf	147,4,b	;volatile
  4235  000850  0012               	return	
  4236  000852                     __end_of_UART1_Transmit_ISR:
  4237                           	opt stack 0
  4238                           
  4239 ;; *************** function _UART1_Receive_ISR *****************
  4240 ;; Defined at:
  4241 ;;		line 258 in file "mcc_generated_files/uart1.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4258 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4259 ;;Total ram usage:        0 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    2
  4262 ;; This function calls:
  4263 ;;		Absolute function
  4264 ;;		_UART1_DefaultErrorHandler
  4265 ;;		_UART1_DefaultFramingErrorHandler
  4266 ;;		_UART1_DefaultOverrunErrorHandler
  4267 ;;		_UART1_RxDataHandler
  4268 ;; This function is called by:
  4269 ;;		_UART1_Initialize
  4270 ;;		_INTERRUPT_InterruptManager
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text33
  4275  0003F2                     __ptext33:
  4276                           	opt stack 0
  4277  0003F2                     _UART1_Receive_ISR:
  4278                           	opt stack 22
  4279                           
  4280                           ;uart1.c: 261: uart1RxStatusBuffer[uart1RxHead].status = 0;
  4281                           
  4282                           ;incstack = 0
  4283  0003F2  5045               	movf	_uart1RxHead,w,c	;volatile
  4284  0003F4  0D01               	mullw	1
  4285  0003F6  0E29               	movlw	low _uart1RxStatusBuffer
  4286  0003F8  24F3               	addwf	16371,w,c
  4287  0003FA  6ED9               	movwf	16345,c
  4288  0003FC  0E00               	movlw	high _uart1RxStatusBuffer
  4289  0003FE  20F4               	addwfc	16372,w,c
  4290  000400  6EDA               	movwf	16346,c
  4291  000402  0E00               	movlw	0
  4292  000404  6EDF               	movwf	16351,c
  4293                           
  4294                           ;uart1.c: 263: if(U1ERRIRbits.FERIF){
  4295  000406  013D               	movlb	61	; () banked
  4296  000408  A7F9               	btfss	249,3,b	;volatile
  4297  00040A  D015               	goto	i2u25_49
  4298                           
  4299                           ; BSR set to: 61
  4300                           ;uart1.c: 264: uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  4301  00040C  5045               	movf	_uart1RxHead,w,c	;volatile
  4302  00040E  0D01               	mullw	1
  4303  000410  0E29               	movlw	low _uart1RxStatusBuffer
  4304  000412  24F3               	addwf	16371,w,c
  4305  000414  6ED9               	movwf	16345,c
  4306  000416  0E00               	movlw	high _uart1RxStatusBuffer
  4307  000418  20F4               	addwfc	16372,w,c
  4308  00041A  6EDA               	movwf	16346,c
  4309  00041C  82DF               	bsf	16351,1,c
  4310                           
  4311                           ; BSR set to: 61
  4312                           ;uart1.c: 265: UART1_FramingErrorHandler();
  4313  00041E  D801               	call	i2u25_48
  4314  000420  D00A               	goto	i2u25_49
  4315  000422                     i2u25_48:
  4316  000422  0005               	push	
  4317  000424  6EFA               	movwf	16378,c
  4318  000426  5050               	movf	_UART1_FramingErrorHandler,w,c
  4319  000428  6EFD               	movwf	16381,c
  4320  00042A  5051               	movf	_UART1_FramingErrorHandler+1,w,c
  4321  00042C  6EFE               	movwf	16382,c
  4322  00042E  50F8               	movf	16376,w,c
  4323  000430  6EFF               	movwf	16383,c
  4324  000432  50FA               	movf	16378,w,c
  4325  000434  0012               	return		;indir
  4326  000436                     i2u25_49:
  4327                           
  4328                           ;uart1.c: 266: }
  4329                           ;uart1.c: 268: if(U1ERRIRbits.RXFOIF){
  4330  000436  013D               	movlb	61	; () banked
  4331  000438  A3F9               	btfss	249,1,b	;volatile
  4332  00043A  D015               	goto	i2u27_49
  4333                           
  4334                           ; BSR set to: 61
  4335                           ;uart1.c: 269: uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  4336  00043C  5045               	movf	_uart1RxHead,w,c	;volatile
  4337  00043E  0D01               	mullw	1
  4338  000440  0E29               	movlw	low _uart1RxStatusBuffer
  4339  000442  24F3               	addwf	16371,w,c
  4340  000444  6ED9               	movwf	16345,c
  4341  000446  0E00               	movlw	high _uart1RxStatusBuffer
  4342  000448  20F4               	addwfc	16372,w,c
  4343  00044A  6EDA               	movwf	16346,c
  4344  00044C  84DF               	bsf	16351,2,c
  4345                           
  4346                           ; BSR set to: 61
  4347                           ;uart1.c: 270: UART1_OverrunErrorHandler();
  4348  00044E  D801               	call	i2u27_48
  4349  000450  D00A               	goto	i2u27_49
  4350  000452                     i2u27_48:
  4351  000452  0005               	push	
  4352  000454  6EFA               	movwf	16378,c
  4353  000456  504E               	movf	_UART1_OverrunErrorHandler,w,c
  4354  000458  6EFD               	movwf	16381,c
  4355  00045A  504F               	movf	_UART1_OverrunErrorHandler+1,w,c
  4356  00045C  6EFE               	movwf	16382,c
  4357  00045E  50F8               	movf	16376,w,c
  4358  000460  6EFF               	movwf	16383,c
  4359  000462  50FA               	movf	16378,w,c
  4360  000464  0012               	return		;indir
  4361  000466                     i2u27_49:
  4362                           
  4363                           ;uart1.c: 271: }
  4364                           ;uart1.c: 273: if(uart1RxStatusBuffer[uart1RxHead].status){
  4365  000466  5045               	movf	_uart1RxHead,w,c	;volatile
  4366  000468  0D01               	mullw	1
  4367  00046A  0E29               	movlw	low _uart1RxStatusBuffer
  4368  00046C  24F3               	addwf	16371,w,c
  4369  00046E  6ED9               	movwf	16345,c
  4370  000470  0E00               	movlw	high _uart1RxStatusBuffer
  4371  000472  20F4               	addwfc	16372,w,c
  4372  000474  6EDA               	movwf	16346,c
  4373  000476  50DF               	movf	16351,w,c
  4374  000478  B4D8               	btfsc	16344,2,c
  4375  00047A  D00C               	goto	i2l262
  4376                           
  4377                           ;uart1.c: 274: UART1_ErrorHandler();
  4378  00047C  D801               	call	i2u29_48
  4379  00047E  0012               	return	
  4380  000480                     i2u29_48:
  4381  000480  0005               	push	
  4382  000482  6EFA               	movwf	16378,c
  4383  000484  504C               	movf	_UART1_ErrorHandler,w,c
  4384  000486  6EFD               	movwf	16381,c
  4385  000488  504D               	movf	_UART1_ErrorHandler+1,w,c
  4386  00048A  6EFE               	movwf	16382,c
  4387  00048C  50F8               	movf	16376,w,c
  4388  00048E  6EFF               	movwf	16383,c
  4389  000490  50FA               	movf	16378,w,c
  4390  000492  0012               	return		;indir
  4391  000494                     i2l262:
  4392                           
  4393                           ;uart1.c: 276: UART1_RxDataHandler();
  4394  000494  EC6D  F004         	call	_UART1_RxDataHandler	;wreg free
  4395  000498  0012               	return	
  4396  00049A                     __end_of_UART1_Receive_ISR:
  4397                           	opt stack 0
  4398                           
  4399 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  4400 ;; Defined at:
  4401 ;;		line 294 in file "mcc_generated_files/uart1.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		None
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0
  4416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4419 ;;Total ram usage:        0 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_UART1_Initialize
  4425 ;;		_UART1_Receive_ISR
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text34
  4430  000AAE                     __ptext34:
  4431                           	opt stack 0
  4432  000AAE                     _UART1_DefaultOverrunErrorHandler:
  4433                           	opt stack 23
  4434                           
  4435                           ;incstack = 0
  4436  000AAE  0012               	return		;funcret
  4437  000AB0                     __end_of_UART1_DefaultOverrunErrorHandler:
  4438                           	opt stack 0
  4439                           
  4440 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  4441 ;; Defined at:
  4442 ;;		line 292 in file "mcc_generated_files/uart1.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		None
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4459 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4460 ;;Total ram usage:        0 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_UART1_Initialize
  4466 ;;		_UART1_Receive_ISR
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text35
  4471  000AB0                     __ptext35:
  4472                           	opt stack 0
  4473  000AB0                     _UART1_DefaultFramingErrorHandler:
  4474                           	opt stack 23
  4475                           
  4476                           ;incstack = 0
  4477  000AB0  0012               	return		;funcret
  4478  000AB2                     __end_of_UART1_DefaultFramingErrorHandler:
  4479                           	opt stack 0
  4480                           
  4481 ;; *************** function _UART1_DefaultErrorHandler *****************
  4482 ;; Defined at:
  4483 ;;		line 296 in file "mcc_generated_files/uart1.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4497 ;;      Params:         0       0       0       0       0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4500 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4501 ;;Total ram usage:        0 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    1
  4504 ;; This function calls:
  4505 ;;		_UART1_RxDataHandler
  4506 ;; This function is called by:
  4507 ;;		_UART1_Initialize
  4508 ;;		_UART1_Receive_ISR
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text36
  4513  000AA4                     __ptext36:
  4514                           	opt stack 0
  4515  000AA4                     _UART1_DefaultErrorHandler:
  4516                           	opt stack 22
  4517                           
  4518                           ;uart1.c: 297: UART1_RxDataHandler();
  4519                           
  4520                           ;incstack = 0
  4521  000AA4  EC6D  F004         	call	_UART1_RxDataHandler	;wreg free
  4522  000AA8  0012               	return		;funcret
  4523  000AAA                     __end_of_UART1_DefaultErrorHandler:
  4524                           	opt stack 0
  4525                           
  4526 ;; *************** function _UART1_RxDataHandler *****************
  4527 ;; Defined at:
  4528 ;;		line 282 in file "mcc_generated_files/uart1.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_UART1_Receive_ISR
  4552 ;;		_UART1_DefaultErrorHandler
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text37
  4557  0008DA                     __ptext37:
  4558                           	opt stack 0
  4559  0008DA                     _UART1_RxDataHandler:
  4560                           	opt stack 23
  4561                           
  4562                           ;uart1.c: 284: uart1RxBuffer[uart1RxHead++] = U1RXB;
  4563                           
  4564                           ;incstack = 0
  4565  0008DA  5045               	movf	_uart1RxHead,w,c	;volatile
  4566  0008DC  0D01               	mullw	1
  4567  0008DE  0E31               	movlw	low _uart1RxBuffer
  4568  0008E0  24F3               	addwf	16371,w,c
  4569  0008E2  6ED9               	movwf	16345,c
  4570  0008E4  0E00               	movlw	high _uart1RxBuffer
  4571  0008E6  20F4               	addwfc	16372,w,c
  4572  0008E8  6EDA               	movwf	16346,c
  4573  0008EA  006F F7A3 FFDF     	movff	15848,16351	;volatile
  4574  0008F0  2A45               	incf	_uart1RxHead,f,c	;volatile
  4575                           
  4576                           ;uart1.c: 285: if(sizeof(uart1RxBuffer) <= uart1RxHead)
  4577  0008F2  0E07               	movlw	7
  4578  0008F4  6445               	cpfsgt	_uart1RxHead,c	;volatile
  4579  0008F6  D002               	goto	i2l267
  4580                           
  4581                           ;uart1.c: 286: {
  4582                           ;uart1.c: 287: uart1RxHead = 0;
  4583  0008F8  0E00               	movlw	0
  4584  0008FA  6E45               	movwf	_uart1RxHead,c	;volatile
  4585  0008FC                     i2l267:
  4586                           
  4587                           ;uart1.c: 288: }
  4588                           ;uart1.c: 289: uart1RxCount++;
  4589  0008FC  2A43               	incf	_uart1RxCount,f,c	;volatile
  4590  0008FE  0012               	return		;funcret
  4591  000900                     __end_of_UART1_RxDataHandler:
  4592                           	opt stack 0
  4593                           
  4594                           ;
  4595                           ; Interrupt Vector Table @ 0x8
  4596                           ;
  4597                           
  4598                           	psect	ivt0x8
  4599  000008                     __pivt0x8:
  4600                           	opt stack 0
  4601  000008                     ivt0x8_base:
  4602                           	opt stack 0
  4603                           
  4604                           ; high-priority vector
  4605  000008  EFB9  F003         	goto	_INTERRUPT_InterruptManager
  4606  000018                     	org	16
  4607                           
  4608                           ; low-priority vector
  4609  000018  00C0               	trap
  4610                           
  4611                           	psect	text38
  4612  000000                     __ptext38:
  4613                           	opt stack 0
  4614                           
  4615                           	psect	rparam


Data Sizes:
    Strings     12
    Constant    320
    Data        574
    BSS         1091
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      92
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    print2Screen@data	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    transmitDATA@data	PTR unsigned char  size(2) Largest target is 32
		 -> print2Screen@pixelVal(COMRAM[5]), leftOver(COMRAM[4]), clearPixel(BANK0[32]), 

    i2c1_writeNBytes@data	PTR void  size(2) Largest target is 32
		 -> print2Screen@pixelVal(COMRAM[5]), leftOver(COMRAM[4]), clearPixel(BANK0[32]), 

    i2c1_writeNBytes@dataPointer	PTR unsigned char  size(2) Largest target is 32
		 -> print2Screen@pixelVal(COMRAM[5]), leftOver(COMRAM[4]), clearPixel(BANK0[32]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_print2Screen
    _print2Screen->_setCursorPosition
    _transmitByte->_i2c1_write1ByteRegister
    _setCursorPosition->_transmitCommand
    _init_OLED->_transmitCommand
    _clearScreen->_clearRow
    _clearRow->_transmitDATA
    _transmitDATA->_i2c1_writeNBytes
    _i2c1_writeNBytes->_sendByte
    _transmitCommand->_i2c1_write1ByteRegister
    _i2c1_write1ByteRegister->_sendByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6371
                  _SYSTEM_Initialize
                        _clearScreen
                          _init_OLED
                       _print2Screen
 ---------------------------------------------------------------------------------
 (1) _print2Screen                                        21    18      3    3226
                                             19 COMRAM    21    18      3
                             ___wmul
                  _setCursorPosition
                             _strlen
                       _transmitByte
                       _transmitDATA
 ---------------------------------------------------------------------------------
 (2) _transmitByte                                         1     1      0     506
                                              5 COMRAM     1     1      0
            _i2c1_write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _setCursorPosition                                   13     9      4     794
                                              6 COMRAM    13     9      4
                    _transmitCommand
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_OLED                                            0     0      0     506
                    _transmitCommand
 ---------------------------------------------------------------------------------
 (1) _clearScreen                                          2     2      0    2149
                                             17 COMRAM     2     2      0
                           _clearRow
                    _transmitCommand
 ---------------------------------------------------------------------------------
 (2) _clearRow                                             5     5      0    1574
                                             12 COMRAM     5     5      0
                    _transmitCommand
                       _transmitDATA
 ---------------------------------------------------------------------------------
 (2) _transmitDATA                                         3     0      3     976
                                              9 COMRAM     3     0      3
                   _i2c1_writeNBytes
 ---------------------------------------------------------------------------------
 (3) _i2c1_writeNBytes                                     7     3      4     476
                                              2 COMRAM     7     3      4
                    _I2C1_Initialize
                           _sendByte
                       _wait4BusFree
                         _wait4Start
                          _wait4Stop
 ---------------------------------------------------------------------------------
 (3) _transmitCommand                                      1     1      0     506
                                              5 COMRAM     1     1      0
            _i2c1_write1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _i2c1_write1ByteRegister                              3     1      2     484
                                              2 COMRAM     3     1      2
                    _I2C1_Initialize
                           _sendByte
                       _wait4BusFree
                         _wait4Start
                          _wait4Stop
 ---------------------------------------------------------------------------------
 (4) _wait4Stop                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _wait4Start                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _wait4BusFree                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _sendByte                                             2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _clearScreen
     _clearRow
       _transmitCommand
         _i2c1_write1ByteRegister
           _I2C1_Initialize
           _sendByte
           _wait4BusFree
           _wait4Start
           _wait4Stop
       _transmitDATA
         _i2c1_writeNBytes
           _I2C1_Initialize
           _sendByte
           _wait4BusFree
           _wait4Start
           _wait4Stop
     _transmitCommand
       _i2c1_write1ByteRegister
         _I2C1_Initialize
         _sendByte
         _wait4BusFree
         _wait4Start
         _wait4Stop
   _init_OLED
     _transmitCommand
       _i2c1_write1ByteRegister
         _I2C1_Initialize
         _sendByte
         _wait4BusFree
         _wait4Start
         _wait4Stop
   _print2Screen
     ___wmul
     _setCursorPosition
       _transmitCommand
         _i2c1_write1ByteRegister
           _I2C1_Initialize
           _sendByte
           _wait4BusFree
           _wait4Start
           _wait4Stop
     _strlen
     _transmitByte
       _i2c1_write1ByteRegister
         _I2C1_Initialize
         _sendByte
         _wait4BusFree
         _wait4Start
         _wait4Stop
     _transmitDATA
       _i2c1_writeNBytes
         _I2C1_Initialize
         _sendByte
         _wait4BusFree
         _wait4Start
         _wait4Stop

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     63A      20       77.9%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      5C       1       96.8%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7C       3        0.0%
DATA                 0      0     6B6      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 24 12:15:22 2019

                                 __CFG_CP$OFF 000000                           ___wmul@multiplicand 0003  
                                 __CFG_LVP$ON 000000                                           l505 071A  
                                         l506 0704                                           l606 032A  
                                         l447 09EE                                           l607 0290  
                                         l456 0A08                                           l608 02E4  
                                         l465 090C                                           l483 09D4  
                                         l549 09AA                                           l591 07EA  
                                         l584 05FC                                           l589 07D2  
                                         _PR2 003FAB                                           u600 0612  
                                         u615 06AE                                           u490 08BC  
                                         u660 0310                       __size_of_PMD_Initialize 0024  
                             _TMR2_Initialize 096A                                           prod 003FF3  
                                         tosl 003FFD                                           wreg 003FE8  
                          _UART1_Transmit_ISR 0820                                 __CFG_BBEN$OFF 000000  
                       wait4BusFree@waitCount 0001                                  _transmitDATA 09AC  
                                __CFG_ZCD$OFF 000000                                          l2111 07C2  
                                        l1160 0736                                          l2051 05EC  
                                        l2061 0612                                          l2141 02DC  
                                        l1159 073A                                          l1905 09F4  
                                        l1917 0A0E                                          l1941 09DA  
                                        l1929 091A                                          STR_1 7FF3  
                                _transmitByte 0A30                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _T2PR 003FAB                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          _TMR2 003FAA  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUE 003A81  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
                                        _main 098C                                          _font 0059  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        fsr2l 003FD9                                          prodh 003FF4  
                                        prodl 003FF3                                          start 001A  
               ??_UART1_SetTxInterruptHandler 0003                                 __CFG_CSWEN$ON 000000  
                                ___param_bank 000000               __end_of_i2c1_write1ByteRegister 0882  
                     __end_of_TMR0_Initialize 0820                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0001                 __end_of_OSCILLATOR_Initialize 0A30  
                 i2c1_write1ByteRegister@data 0004                                         ?_main 0001  
                               __CFG_WDTE$OFF 000000                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T2HLT 003FAD                                __CFG_DEBUG$OFF 000000  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i2l120 0792                                         _U1TXB 003DEA  
                                       i2l262 0494                                         i2l254 084C  
                                       i2l255 0848                               __end_of_capFont 7FF3  
                                       i2l267 08FC                                         _OSCEN 0039DD  
                                       _TMR0H 003FB7                                         _TMR0L 003FB6  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                             ??_I2C1_Initialize 0001  
                               __CFG_WRTB$OFF 000000                                 __CFG_WRTC$OFF 000000  
                               __CFG_WRTD$OFF 000000                           wait4Start@waitCount 0001  
                           ??_transmitCommand 0006                            __CFG_MCLRE$EXTMCLR 000000  
                                       pclath 003FFA                                         tablat 003FF5  
                            print2Screen@data 0015                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 0A74                   _UART1_SetRxInterruptHandler 0A66  
    __end_of_UART1_DefaultFramingErrorHandler 0AB2     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 0AB0                          __size_of_clearScreen 003A  
                             __initialization 053E                                  __end_of_main 09AC  
                              __CFG_SAFEN$OFF 000000                   ??_UART1_DefaultErrorHandler 0001  
                            _i2c1_writeNBytes 06D2                       __end_of_TMR2_Initialize 098C  
                 ?_INTERRUPT_InterruptManager 0001                                        ??_main 0029  
                              __CFG_PR1WAY$ON 000000                                 __activetblptr 000002  
        __size_of_UART1_SetTxInterruptHandler 000E                              _UART1_Initialize 049A  
                                      _ANSELA 003A40                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                          i2c1_writeNBytes@data 0004  
                                      _RC3PPS 003A13                                        _RC4PPS 003A14  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                __CFG_WDTCCS$SC 000000  
                          __CFG_RSTOSC$EXTOSC 000000                             _setCursorPosition 067C  
                                      _OSCFRQ 0039DF                         _UART1_SetErrorHandler 0A90  
                          ?_setCursorPosition 0007                              __end_of_clearRow 0624  
                              __CFG_XINST$OFF 000000                           ??_setCursorPosition 000B  
                                      ___wmul 0882                                __CFG_STVREN$ON 000000  
                            ?_TMR0_Initialize 0001                                        clear_0 058E  
                                      clear_1 05A0                                        clear_2 05AC  
                                      _scrbuf 0080                              __end_of_sendByte 0924  
                                      _strlen 0728                                  __pdataBIGRAM 0480  
                              _PMD_Initialize 0924                                  __pdataCOMRAM 0059  
                                __mediumconst 7EB2                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
 UART1_SetTxInterruptHandler@InterruptHandler 0001   UART1_SetRxInterruptHandler@InterruptHandler 0001  
        __end_of_UART1_SetOverrunErrorHandler 0A82         __size_of_UART1_SetOverrunErrorHandler 000E  
                _UART1_SetOverrunErrorHandler 0A74                     _UART1_DefaultErrorHandler 0AA4  
                   __end_of_setCursorPosition 06D2                 __size_of_INTERRUPT_Initialize 0006  
                __size_of_UART1_RxDataHandler 0026              __size_of_i2c1_write1ByteRegister 0030  
                           _SYSTEM_Initialize 0948                                    __accesstop 0060  
                     __end_of__initialization 05BE                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                                __pcstackCOMRAM 0001  
                         ??_SYSTEM_Initialize 0003                              ?_TMR2_Initialize 0001  
                      __end_of_PMD_Initialize 0948                     _UART1_FramingErrorHandler 0050  
                   __end_of_SYSTEM_Initialize 096A                               __CFG_IVT1WAY$ON 000000  
                               ?_wait4BusFree 0001                                    __pbssBANK0 0060  
               ?_UART1_SetOverrunErrorHandler 0001                        ?_UART1_SetErrorHandler 0001  
                          __size_of_init_OLED 00AA                               __CFG_MVECEN$OFF 000000  
                     print2Screen@current_row 001A                                    __pnvCOMRAM 004C  
                  print2Screen@current_column 001C                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                  _clearPixel 0060                                       _I2C1CLK 003D7B  
                                     _I2C1CNT 003D6C                                       _I2C1ERR 003D76  
                                     ?___wmul 0001                                       _I2C1PIR 003D79  
                                     _I2C1RXB 003D6A                                       _I2C1TXB 003D6B  
                             __CFG_PPS1WAY$ON 000000                            __size_of_wait4Stop 001A  
                             _I2C1_Initialize 08B0                           transmitDATA@datalen 000C  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 03F2  
                             _transmitCommand 0A44                                       ?_strlen 0001  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                         __CFG_PWRTS$PWRT_OFF 000000                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE7                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                     ?_clearRow 0001  
                                     i2u25_48 0422                                       i2u25_49 0436  
                                     i2u42_48 077E                                       i2u27_48 0452  
                                     i2u27_49 0466                                       i2u29_48 0480  
                                     i2u45_48 079E                                       _OSCTUNE 0039DE  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                ??_wait4BusFree 0001  
                  __size_of_setCursorPosition 0056                           ??_UART1_Receive_ISR 0001  
                    __end_of_i2c1_writeNBytes 0728                                     ?_sendByte 0001  
                                     __Hparam 0000                                       __Lparam 0000  
                    __end_of_UART1_Initialize 053E                               __size_of___wmul 002E  
                                     _capFont 7EB3                     __end_of_UART1_Receive_ISR 049A  
                                     __pcinit 053E                                       __ramtop 0800  
                 __size_of_UART1_Transmit_ISR 0032                              transmitDATA@data 000A  
                                     __ptext0 098C                                       __ptext1 0258  
                                     __ptext2 0A30                                       __ptext3 0728  
                                     __ptext4 067C                                       __ptext5 0882  
                                     __ptext6 0348                                       __ptext7 07B2  
                                     __ptext8 05C8                                       __ptext9 09AC  
                           __end_of_init_OLED 03F2                       i2c1_writeNBytes@address 0007  
                             __CFG_WRTAPP$OFF 000000                               __size_of_strlen 004A  
                       _OSCILLATOR_Initialize 0A18                                     _T2CONbits 003FAC  
                    ??_PIN_MANAGER_Initialize 0001                                     _T2HLTbits 003FAD  
                             __CFG_WRTSAF$OFF 000000                                    ??_clearRow 000D  
                                 _I2C1PIRbits 003D79                                 ?_print2Screen 0014  
                  __size_of_SYSTEM_Initialize 0022                       _i2c1_write1ByteRegister 0852  
                        end_of_initialization 05BE                          sendByte@delayCounter 0002  
                           __end_of_wait4Stop 09E4                                     _T2RSTbits 003FAF  
              i2c1_write1ByteRegister@address 0005                                    _wait4Start 09E4  
                               __Lmediumconst 7EB2           __end_of_UART1_SetTxInterruptHandler 0A66  
                 _UART1_SetTxInterruptHandler 0A58                                 ??_clearScreen 0012  
                                  ??_sendByte 0001                ??_UART1_SetOverrunErrorHandler 0003  
                     __end_of_I2C1_Initialize 08DA                       __end_of_transmitCommand 0A58  
                      transmitCommand@command 0006                                       postdec1 003FE5  
                                     postinc0 003FEE                            print2Screen@column 0014  
                        setCursorPosition@row 0007                           _UART1_RxDataHandler 08DA  
                       __CFG_WDTCPS$WDTCPS_31 000000                                       strlen@s 0001  
                              ??_print2Screen 0017             setCursorPosition@lowerAddressByte 0010  
                            __CFG_FEXTOSC$OFF 000000                          ?_UART1_RxDataHandler 0001  
                        _timer0ReloadVal16bit 0056                           __end_of_clearScreen 07EC  
                __end_of_INTERRUPT_Initialize 0AA4                          __end_of_wait4BusFree 0A18  
                  __size_of_UART1_Receive_ISR 00A8                                 __pidataBIGRAM 001E  
                               _characterFont 0480                                __end_of___wmul 08B0  
                               __pidataCOMRAM 0AAA                        ?_OSCILLATOR_Initialize 0001  
                             print2Screen@row 0025                                __end_of_strlen 0772  
                         start_initialization 053E                     ??_i2c1_write1ByteRegister 0005  
                    __size_of_TMR0_Initialize 0034               __size_of_PIN_MANAGER_Initialize 0058  
                     ??_UART1_SetErrorHandler 0003                                 ?_transmitDATA 000A  
                       ??_UART1_RxDataHandler 0001                                 ?_transmitByte 0001  
                                  ivt0x8_base 0008                              transmitByte@data 0006  
                                 ?_wait4Start 0001                                 _uart1RxBuffer 0031  
                               _uart1TxBuffer 0039                           i2c1_writeNBytes@len 0006  
                         i2c1_writeNBytes@reg 0003                              ?_I2C1_Initialize 0001  
                            __CFG_LPBOREN$OFF 000000                              ??_PMD_Initialize 0001  
                            ?_transmitCommand 0001                                      ??___wmul 0005  
                                    ??_strlen 0003                                   __pbssBIGRAM 0080  
                                 __pbssCOMRAM 0029                            _UART1_ErrorHandler 004C  
                              ??_transmitDATA 000D                      __size_of_TMR2_Initialize 0022  
                    _UART1_RxInterruptHandler 0054                                ??_transmitByte 0006  
                           __size_of_clearRow 005C                             ?_i2c1_writeNBytes 0003  
                          ??_i2c1_writeNBytes 0007                  ?_UART1_SetRxInterruptHandler 0001  
                                 _clearScreen 07B2                        _PIN_MANAGER_Initialize 0624  
                           ?_UART1_Initialize 0001                                  sendByte@data 0001  
                        __end_of_print2Screen 0348          __end_of_UART1_SetFramingErrorHandler 0A90  
       __size_of_UART1_SetFramingErrorHandler 000E                  _UART1_SetFramingErrorHandler 0A82  
                           __size_of_sendByte 0024                                 __pmediumconst 7EB2  
                                    _I2C1ADB1 003D6E                            ??_UART1_Initialize 0003  
                                    _I2C1CON0 003D73                                      _I2C1CON1 003D74  
                                    _I2C1CON2 003D75                              _uart1RxLastError 0042  
                ??_INTERRUPT_InterruptManager 0001                           __size_of_wait4Start 001A  
                      __CFG_BBSIZE$BBSIZE_512 000000      __end_of_UART1_DefaultOverrunErrorHandler 0AB0  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 0AAE  
                                   _lastError 0041                                     _init_OLED 0348  
           setCursorPosition@upperAddressByte 0012                                      _T2CLKCON 003FAE  
                                 _U1ERRIRbits 003DF9                          _INTERRUPT_Initialize 0A9E  
                                  _I2C1SDAPPS 003AE4                                    _I2C1SCLPPS 003AE3  
                           ??_TMR0_Initialize 0001                                ___wmul@product 0005  
       UART1_SetErrorHandler@interruptHandler 0001                                     clearRow@i 0010  
                                   _wait4Stop 09CA                                      _PIE3bits 003993  
                         __CFG_BORV$VBOR_2P45 000000                         __size_of_wait4BusFree 001A  
               ??_UART1_SetRxInterruptHandler 0003           __size_of_INTERRUPT_InterruptManager 0040  
                               _I2C1STAT0bits 003D77                                 _I2C1STAT1bits 003D78  
                                    _PIR3bits 0039A3                                      _PIR4bits 0039A4  
                 i2c1_writeNBytes@dataPointer 0008                    __end_of_UART1_Transmit_ISR 0852  
               ?_UART1_SetFramingErrorHandler 0001                            wait4Stop@waitCount 0001  
                  i2c1_write1ByteRegister@reg 0003                             ___wmul@multiplier 0001  
                                  ?_init_OLED 0001                                  clearScreen@i 0012  
                                clearRow@page 000D                                   _INTCON0bits 003FD2  
                                   copy_data0 0552                                     copy_data1 0578  
                       ?_INTERRUPT_Initialize 0001                                  _wait4BusFree 09FE  
                       print2Screen@character 0023                        _uart1TxBufferRemaining 0058  
                           ??_TMR2_Initialize 0001                                    ?_wait4Stop 0001  
                                _uart1RxCount 0043                                      __Hrparam 0000  
                                    __Lrparam 0000                            __CFG_BOREN$SBORDIS 000000  
                        __end_of_transmitDATA 09CA                       ??_OSCILLATOR_Initialize 0001  
                        __end_of_transmitByte 0A44                       setCursorPosition@column 0009  
        __size_of_UART1_SetRxInterruptHandler 000E                                    _T0CON0bits 003FB8  
                                _I2C1CON0bits 003D73                                      _clearRow 05C8  
                                    __pivt0x8 0008                                      __ptext10 06D2  
                                    __ptext11 0A44                                      __ptext20 0A66  
                                    __ptext12 0852                                      __ptext21 0A74  
                                    __ptext13 09CA                                      __ptext30 08B0  
                                    __ptext22 0A82                                      __ptext14 09E4  
                                    __ptext31 0772                                      __ptext23 0A90  
                                    __ptext15 09FE                                      __ptext32 0820  
                                    __ptext24 096A                                      __ptext16 0900  
                                    __ptext33 03F2                                      __ptext25 07EC  
                                    __ptext17 0948                                      __ptext34 0AAE  
                                    __ptext26 0924                                      __ptext18 049A  
                                    __ptext35 0AB0                                      __ptext27 0624  
                                    __ptext19 0A58                                      __ptext36 0AA4  
                                    __ptext28 0A18                                      __ptext37 08DA  
                                    __ptext29 0A9E                                      __ptext38 0000  
              __size_of_UART1_SetErrorHandler 000E                 __end_of_UART1_SetErrorHandler 0A9E  
                                    _leftOver 0048                                  ??_wait4Start 0001  
                               __size_of_main 0020                         __size_of_print2Screen 00F0  
                        __CFG_WDTCWS$WDTCWS_7 000000                                      _sendByte 0900  
                   _UART1_OverrunErrorHandler 004E  UART1_SetOverrunErrorHandler@interruptHandler 0001  
          __size_of_UART1_DefaultErrorHandler 0006                    ?_UART1_DefaultErrorHandler 0001  
          __end_of_INTERRUPT_InterruptManager 07B2                    _INTERRUPT_InterruptManager 0772  
                                 clearRow@row 000F                                 print2Screen@i 0026  
                               print2Screen@k 0028                            __end_of_wait4Start 09FE  
              ??_UART1_SetFramingErrorHandler 0003                   __end_of_UART1_RxDataHandler 0900  
                                 _uart1RxHead 0045                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                                 ??_init_OLED 0007                        ??_INTERRUPT_Initialize 0001  
                                _print2Screen 0258                                      intlevel2 0000  
                     ?_PIN_MANAGER_Initialize 0001                             __CFG_CLKOUTEN$OFF 000000  
                                ?_clearScreen 0001                                   ??_wait4Stop 0001  
                        print2Screen@pixelVal 001E                           _uart1RxStatusBuffer 0029  
UART1_SetFramingErrorHandler@interruptHandler 0001             __end_of_UART1_DefaultErrorHandler 0AAA  
                   __size_of_i2c1_writeNBytes 0056                      __size_of_I2C1_Initialize 002A  
                    ?_i2c1_write1ByteRegister 0003                         setCursorPosition@page 000E  
                    __size_of_transmitCommand 0014                               _TMR0_Initialize 07EC  
                                    strlen@cp 0005                     __size_of_UART1_Initialize 00A4  
                    _UART1_TxInterruptHandler 0052                __end_of_PIN_MANAGER_Initialize 067C  
                ?_UART1_SetTxInterruptHandler 0001                         __size_of_transmitDATA 001E  
                       __size_of_transmitByte 0014  
