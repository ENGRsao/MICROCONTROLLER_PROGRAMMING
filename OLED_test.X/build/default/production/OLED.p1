Version 3.2 HI-TECH Software Intermediate Code
"69 OLED.h
[v _transmitCommand `(v ~T0 @X0 0 ef1`uc ]
"67
[v _transmitDATA `(v ~T0 @X0 0 ef2`*uc`uc ]
"122 mcc_generated_files/i2c1.h
[v _i2c1_write1ByteRegister `(v ~T0 @X0 0 ef3`uc`uc`uc ]
"172
[v _i2c1_writeNBytes `(v ~T0 @X0 0 ef4`uc`uc`*v`uc ]
"56 C:\Program Files (x86)\Microchip\xc8\v1.45\include\string.h
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
"54 OLED.h
[v _scrbuf `uc ~T0 @X0 -> 1024 `i e ]
[; ;OLED.h: 54: uint8_t scrbuf[1024];
[; ;OLED.h: 56: typedef struct
[; ;OLED.h: 57: {
[; ;OLED.h: 58: uint8_t* font;
[; ;OLED.h: 59: uint8_t x_size;
[; ;OLED.h: 60: uint8_t y_size;
[; ;OLED.h: 61: uint8_t offset;
[; ;OLED.h: 62: uint8_t numchars;
[; ;OLED.h: 63: uint8_t inverted;
[; ;OLED.h: 64: } _current_font;
[; ;OLED.h: 66: void setFont(uint8_t* font);
[; ;OLED.h: 67: void transmitDATA(uint8_t *data,uint8_t datalen);
[; ;OLED.h: 68: void transmitByte(uint8_t data);
[; ;OLED.h: 69: void transmitCommand(uint8_t command);
[; ;OLED.h: 70: void print2Screen(uint8_t row , uint8_t column,char *data );
[; ;OLED.h: 71: void updateData();
[; ;OLED.h: 72: void clearScreen();
[; ;OLED.h: 73: void transmitCommand(uint8_t command);
[; ;OLED.h: 74: void init_OLED(void);
[; ;OLED.h: 75: void clearRow(uint8_t row);
[; ;OLED.h: 76: void powerDown();
[; ;OLED.h: 77: void powerUP();
"79
[v _characterFont `uc ~T0 @X0 -> 0 `x e ]
[i _characterFont
:U ..
"81
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"82
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 47 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"83
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 0 `i `uc
"84
-> -> 0 `i `uc
-> -> 20 `i `uc
-> -> 127 `i `uc
-> -> 20 `i `uc
-> -> 127 `i `uc
-> -> 20 `i `uc
"85
-> -> 0 `i `uc
-> -> 36 `i `uc
-> -> 42 `i `uc
-> -> 127 `i `uc
-> -> 42 `i `uc
-> -> 18 `i `uc
"86
-> -> 0 `i `uc
-> -> 35 `i `uc
-> -> 19 `i `uc
-> -> 8 `i `uc
-> -> 100 `i `uc
-> -> 98 `i `uc
"87
-> -> 0 `i `uc
-> -> 54 `i `uc
-> -> 73 `i `uc
-> -> 85 `i `uc
-> -> 34 `i `uc
-> -> 80 `i `uc
"88
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 5 `i `uc
-> -> 3 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"89
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 28 `i `uc
-> -> 34 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
"90
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 34 `i `uc
-> -> 28 `i `uc
-> -> 0 `i `uc
"91
-> -> 0 `i `uc
-> -> 20 `i `uc
-> -> 8 `i `uc
-> -> 62 `i `uc
-> -> 8 `i `uc
-> -> 20 `i `uc
"92
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 62 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
"93
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 160 `i `uc
-> -> 96 `i `uc
-> -> 0 `i `uc
"94
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
"95
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 96 `i `uc
-> -> 96 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"96
-> -> 0 `i `uc
-> -> 32 `i `uc
-> -> 16 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 2 `i `uc
"98
-> -> 0 `i `uc
-> -> 62 `i `uc
-> -> 81 `i `uc
-> -> 73 `i `uc
-> -> 69 `i `uc
-> -> 62 `i `uc
"99
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 66 `i `uc
-> -> 127 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
"100
-> -> 0 `i `uc
-> -> 66 `i `uc
-> -> 97 `i `uc
-> -> 81 `i `uc
-> -> 73 `i `uc
-> -> 70 `i `uc
"101
-> -> 0 `i `uc
-> -> 33 `i `uc
-> -> 65 `i `uc
-> -> 69 `i `uc
-> -> 75 `i `uc
-> -> 49 `i `uc
"102
-> -> 0 `i `uc
-> -> 24 `i `uc
-> -> 20 `i `uc
-> -> 18 `i `uc
-> -> 127 `i `uc
-> -> 16 `i `uc
"103
-> -> 0 `i `uc
-> -> 39 `i `uc
-> -> 69 `i `uc
-> -> 69 `i `uc
-> -> 69 `i `uc
-> -> 57 `i `uc
"104
-> -> 0 `i `uc
-> -> 60 `i `uc
-> -> 74 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 48 `i `uc
"105
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 113 `i `uc
-> -> 9 `i `uc
-> -> 5 `i `uc
-> -> 3 `i `uc
"106
-> -> 0 `i `uc
-> -> 54 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 54 `i `uc
"107
-> -> 0 `i `uc
-> -> 6 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 41 `i `uc
-> -> 30 `i `uc
"108
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 54 `i `uc
-> -> 54 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"109
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 86 `i `uc
-> -> 54 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"110
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 20 `i `uc
-> -> 34 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
"111
-> -> 0 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
"112
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 34 `i `uc
-> -> 20 `i `uc
-> -> 8 `i `uc
"113
-> -> 0 `i `uc
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 81 `i `uc
-> -> 9 `i `uc
-> -> 6 `i `uc
"115
-> -> 0 `i `uc
-> -> 50 `i `uc
-> -> 73 `i `uc
-> -> 89 `i `uc
-> -> 81 `i `uc
-> -> 62 `i `uc
"116
-> -> 0 `i `uc
-> -> 124 `i `uc
-> -> 18 `i `uc
-> -> 17 `i `uc
-> -> 18 `i `uc
-> -> 124 `i `uc
"117
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 54 `i `uc
"118
-> -> 0 `i `uc
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 34 `i `uc
"119
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 34 `i `uc
-> -> 28 `i `uc
"120
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 65 `i `uc
"121
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 1 `i `uc
"122
-> -> 0 `i `uc
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 122 `i `uc
"123
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 127 `i `uc
"124
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
"125
-> -> 0 `i `uc
-> -> 32 `i `uc
-> -> 64 `i `uc
-> -> 65 `i `uc
-> -> 63 `i `uc
-> -> 1 `i `uc
"126
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 8 `i `uc
-> -> 20 `i `uc
-> -> 34 `i `uc
-> -> 65 `i `uc
"127
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
"128
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 2 `i `uc
-> -> 12 `i `uc
-> -> 2 `i `uc
-> -> 127 `i `uc
"129
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 4 `i `uc
-> -> 8 `i `uc
-> -> 16 `i `uc
-> -> 127 `i `uc
"130
-> -> 0 `i `uc
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 62 `i `uc
"132
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 6 `i `uc
"133
-> -> 0 `i `uc
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 81 `i `uc
-> -> 33 `i `uc
-> -> 94 `i `uc
"134
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 25 `i `uc
-> -> 41 `i `uc
-> -> 70 `i `uc
"135
-> -> 0 `i `uc
-> -> 70 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 49 `i `uc
"136
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 127 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
"137
-> -> 0 `i `uc
-> -> 63 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 63 `i `uc
"138
-> -> 0 `i `uc
-> -> 31 `i `uc
-> -> 32 `i `uc
-> -> 64 `i `uc
-> -> 32 `i `uc
-> -> 31 `i `uc
"139
-> -> 0 `i `uc
-> -> 63 `i `uc
-> -> 64 `i `uc
-> -> 56 `i `uc
-> -> 64 `i `uc
-> -> 63 `i `uc
"140
-> -> 0 `i `uc
-> -> 99 `i `uc
-> -> 20 `i `uc
-> -> 8 `i `uc
-> -> 20 `i `uc
-> -> 99 `i `uc
"141
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 8 `i `uc
-> -> 112 `i `uc
-> -> 8 `i `uc
-> -> 7 `i `uc
"142
-> -> 0 `i `uc
-> -> 97 `i `uc
-> -> 81 `i `uc
-> -> 73 `i `uc
-> -> 69 `i `uc
-> -> 67 `i `uc
"143
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
"144
-> -> 170 `i `uc
-> -> 85 `i `uc
-> -> 170 `i `uc
-> -> 85 `i `uc
-> -> 170 `i `uc
-> -> 85 `i `uc
"145
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 127 `i `uc
-> -> 0 `i `uc
"146
-> -> 0 `i `uc
-> -> 4 `i `uc
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 4 `i `uc
"147
-> -> 0 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
"149
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 3 `i `uc
-> -> 5 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"150
-> -> 0 `i `uc
-> -> 32 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 120 `i `uc
"151
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 72 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 56 `i `uc
"152
-> -> 0 `i `uc
-> -> 56 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 32 `i `uc
"153
-> -> 0 `i `uc
-> -> 56 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 72 `i `uc
-> -> 127 `i `uc
"154
-> -> 0 `i `uc
-> -> 56 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 24 `i `uc
"155
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 126 `i `uc
-> -> 9 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
"156
-> -> 0 `i `uc
-> -> 24 `i `uc
-> -> 164 `i `uc
-> -> 164 `i `uc
-> -> 164 `i `uc
-> -> 124 `i `uc
"157
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 120 `i `uc
"158
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 68 `i `uc
-> -> 125 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
"159
-> -> 0 `i `uc
-> -> 64 `i `uc
-> -> 128 `i `uc
-> -> 132 `i `uc
-> -> 125 `i `uc
-> -> 0 `i `uc
"160
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 16 `i `uc
-> -> 40 `i `uc
-> -> 68 `i `uc
-> -> 0 `i `uc
"161
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 127 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
"162
-> -> 0 `i `uc
-> -> 124 `i `uc
-> -> 4 `i `uc
-> -> 24 `i `uc
-> -> 4 `i `uc
-> -> 120 `i `uc
"163
-> -> 0 `i `uc
-> -> 124 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 120 `i `uc
"164
-> -> 0 `i `uc
-> -> 56 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 68 `i `uc
-> -> 56 `i `uc
"166
-> -> 0 `i `uc
-> -> 252 `i `uc
-> -> 36 `i `uc
-> -> 36 `i `uc
-> -> 36 `i `uc
-> -> 24 `i `uc
"167
-> -> 0 `i `uc
-> -> 24 `i `uc
-> -> 36 `i `uc
-> -> 36 `i `uc
-> -> 24 `i `uc
-> -> 252 `i `uc
"168
-> -> 0 `i `uc
-> -> 124 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 8 `i `uc
"169
-> -> 0 `i `uc
-> -> 72 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 84 `i `uc
-> -> 32 `i `uc
"170
-> -> 0 `i `uc
-> -> 4 `i `uc
-> -> 63 `i `uc
-> -> 68 `i `uc
-> -> 64 `i `uc
-> -> 32 `i `uc
"171
-> -> 0 `i `uc
-> -> 60 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 32 `i `uc
-> -> 124 `i `uc
"172
-> -> 0 `i `uc
-> -> 28 `i `uc
-> -> 32 `i `uc
-> -> 64 `i `uc
-> -> 32 `i `uc
-> -> 28 `i `uc
"173
-> -> 0 `i `uc
-> -> 60 `i `uc
-> -> 64 `i `uc
-> -> 48 `i `uc
-> -> 64 `i `uc
-> -> 60 `i `uc
"174
-> -> 0 `i `uc
-> -> 68 `i `uc
-> -> 40 `i `uc
-> -> 16 `i `uc
-> -> 40 `i `uc
-> -> 68 `i `uc
"175
-> -> 0 `i `uc
-> -> 28 `i `uc
-> -> 160 `i `uc
-> -> 160 `i `uc
-> -> 160 `i `uc
-> -> 124 `i `uc
"176
-> -> 0 `i `uc
-> -> 68 `i `uc
-> -> 100 `i `uc
-> -> 84 `i `uc
-> -> 76 `i `uc
-> -> 68 `i `uc
"177
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 16 `i `uc
-> -> 124 `i `uc
-> -> 130 `i `uc
-> -> 0 `i `uc
"178
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"179
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 130 `i `uc
-> -> 124 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
"180
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 6 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
"181
-> -> 6 `i `uc
..
]
[; ;OLED.h: 79: uint8_t characterFont[] =
[; ;OLED.h: 80: {
[; ;OLED.h: 81: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
[; ;OLED.h: 82: 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00,
[; ;OLED.h: 83: 0x00, 0x00, 0x07, 0x00, 0x07, 0x00,
[; ;OLED.h: 84: 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14,
[; ;OLED.h: 85: 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12,
[; ;OLED.h: 86: 0x00, 0x23, 0x13, 0x08, 0x64, 0x62,
[; ;OLED.h: 87: 0x00, 0x36, 0x49, 0x55, 0x22, 0x50,
[; ;OLED.h: 88: 0x00, 0x00, 0x05, 0x03, 0x00, 0x00,
[; ;OLED.h: 89: 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00,
[; ;OLED.h: 90: 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00,
[; ;OLED.h: 91: 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14,
[; ;OLED.h: 92: 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08,
[; ;OLED.h: 93: 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00,
[; ;OLED.h: 94: 0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
[; ;OLED.h: 95: 0x00, 0x00, 0x60, 0x60, 0x00, 0x00,
[; ;OLED.h: 96: 0x00, 0x20, 0x10, 0x08, 0x04, 0x02,
[; ;OLED.h: 98: 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E,
[; ;OLED.h: 99: 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00,
[; ;OLED.h: 100: 0x00, 0x42, 0x61, 0x51, 0x49, 0x46,
[; ;OLED.h: 101: 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31,
[; ;OLED.h: 102: 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10,
[; ;OLED.h: 103: 0x00, 0x27, 0x45, 0x45, 0x45, 0x39,
[; ;OLED.h: 104: 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30,
[; ;OLED.h: 105: 0x00, 0x01, 0x71, 0x09, 0x05, 0x03,
[; ;OLED.h: 106: 0x00, 0x36, 0x49, 0x49, 0x49, 0x36,
[; ;OLED.h: 107: 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E,
[; ;OLED.h: 108: 0x00, 0x00, 0x36, 0x36, 0x00, 0x00,
[; ;OLED.h: 109: 0x00, 0x00, 0x56, 0x36, 0x00, 0x00,
[; ;OLED.h: 110: 0x00, 0x08, 0x14, 0x22, 0x41, 0x00,
[; ;OLED.h: 111: 0x00, 0x14, 0x14, 0x14, 0x14, 0x14,
[; ;OLED.h: 112: 0x00, 0x00, 0x41, 0x22, 0x14, 0x08,
[; ;OLED.h: 113: 0x00, 0x02, 0x01, 0x51, 0x09, 0x06,
[; ;OLED.h: 115: 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E,
[; ;OLED.h: 116: 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C,
[; ;OLED.h: 117: 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36,
[; ;OLED.h: 118: 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22,
[; ;OLED.h: 119: 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C,
[; ;OLED.h: 120: 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41,
[; ;OLED.h: 121: 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01,
[; ;OLED.h: 122: 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A,
[; ;OLED.h: 123: 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F,
[; ;OLED.h: 124: 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00,
[; ;OLED.h: 125: 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01,
[; ;OLED.h: 126: 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41,
[; ;OLED.h: 127: 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40,
[; ;OLED.h: 128: 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F,
[; ;OLED.h: 129: 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F,
[; ;OLED.h: 130: 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E,
[; ;OLED.h: 132: 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06,
[; ;OLED.h: 133: 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E,
[; ;OLED.h: 134: 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46,
[; ;OLED.h: 135: 0x00, 0x46, 0x49, 0x49, 0x49, 0x31,
[; ;OLED.h: 136: 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01,
[; ;OLED.h: 137: 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F,
[; ;OLED.h: 138: 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F,
[; ;OLED.h: 139: 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F,
[; ;OLED.h: 140: 0x00, 0x63, 0x14, 0x08, 0x14, 0x63,
[; ;OLED.h: 141: 0x00, 0x07, 0x08, 0x70, 0x08, 0x07,
[; ;OLED.h: 142: 0x00, 0x61, 0x51, 0x49, 0x45, 0x43,
[; ;OLED.h: 143: 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00,
[; ;OLED.h: 144: 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,
[; ;OLED.h: 145: 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00,
[; ;OLED.h: 146: 0x00, 0x04, 0x02, 0x01, 0x02, 0x04,
[; ;OLED.h: 147: 0x00, 0x40, 0x40, 0x40, 0x40, 0x40,
[; ;OLED.h: 149: 0x00, 0x00, 0x03, 0x05, 0x00, 0x00,
[; ;OLED.h: 150: 0x00, 0x20, 0x54, 0x54, 0x54, 0x78,
[; ;OLED.h: 151: 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38,
[; ;OLED.h: 152: 0x00, 0x38, 0x44, 0x44, 0x44, 0x20,
[; ;OLED.h: 153: 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F,
[; ;OLED.h: 154: 0x00, 0x38, 0x54, 0x54, 0x54, 0x18,
[; ;OLED.h: 155: 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02,
[; ;OLED.h: 156: 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C,
[; ;OLED.h: 157: 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78,
[; ;OLED.h: 158: 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00,
[; ;OLED.h: 159: 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00,
[; ;OLED.h: 160: 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00,
[; ;OLED.h: 161: 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00,
[; ;OLED.h: 162: 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78,
[; ;OLED.h: 163: 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78,
[; ;OLED.h: 164: 0x00, 0x38, 0x44, 0x44, 0x44, 0x38,
[; ;OLED.h: 166: 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18,
[; ;OLED.h: 167: 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC,
[; ;OLED.h: 168: 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08,
[; ;OLED.h: 169: 0x00, 0x48, 0x54, 0x54, 0x54, 0x20,
[; ;OLED.h: 170: 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20,
[; ;OLED.h: 171: 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C,
[; ;OLED.h: 172: 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C,
[; ;OLED.h: 173: 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C,
[; ;OLED.h: 174: 0x00, 0x44, 0x28, 0x10, 0x28, 0x44,
[; ;OLED.h: 175: 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C,
[; ;OLED.h: 176: 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44,
[; ;OLED.h: 177: 0x00, 0x00, 0x10, 0x7C, 0x82, 0x00,
[; ;OLED.h: 178: 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
[; ;OLED.h: 179: 0x00, 0x00, 0x82, 0x7C, 0x10, 0x00,
[; ;OLED.h: 180: 0x00, 0x00, 0x06, 0x09, 0x09, 0x06
[; ;OLED.h: 181: };
[; ;i2c1.h: 69: typedef enum { I2C1_GOOD, I2C1_FAIL_TIMEOUT } i2c1_error;
[; ;i2c1.h: 96: void I2C1_Initialize(void);
[; ;i2c1.h: 98: i2c1_error i2c1_getLastError(void);
[; ;i2c1.h: 122: void i2c1_write1ByteRegister(uint8_t address, uint8_t reg, uint8_t data);
[; ;i2c1.h: 146: void i2c1_write2ByteRegister(uint8_t address, uint8_t reg, uint16_t data);
[; ;i2c1.h: 172: void i2c1_writeNBytes(uint8_t address,uint8_t reg, void* data, uint8_t len);
[; ;i2c1.h: 193: uint8_t i2c1_read1ByteRegister(uint8_t address, uint8_t reg);
[; ;i2c1.h: 214: uint16_t i2c1_read2ByteRegister(uint8_t address, uint8_t reg);
[; ;i2c1.h: 238: void i2c1_readDataBlock(uint8_t address, uint8_t reg, char *data, uint8_t len);
[; ;i2c1.h: 263: void i2c1_readNBytes(uint8_t address, char* data, uint8_t len);
"2 fonts.h
[v _capFont `Cuc ~T0 @X0 -> 0 `x e ]
[i _capFont
:U ..
"3
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"4
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 95 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"5
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 0 `i `uc
"6
-> -> 18 `i `uc
-> -> 63 `i `uc
-> -> 18 `i `uc
-> -> 63 `i `uc
-> -> 18 `i `uc
"7
-> -> 4 `i `uc
-> -> 37 `i `uc
-> -> 107 `i `uc
-> -> 37 `i `uc
-> -> 16 `i `uc
"8
-> -> 70 `i `uc
-> -> 54 `i `uc
-> -> 28 `i `uc
-> -> 54 `i `uc
-> -> 49 `i `uc
"9
-> -> 54 `i `uc
-> -> 73 `i `uc
-> -> 89 `i `uc
-> -> 38 `i `uc
-> -> 80 `i `uc
"10
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 3 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"11
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
"12
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 62 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"13
-> -> 10 `i `uc
-> -> 4 `i `uc
-> -> 31 `i `uc
-> -> 4 `i `uc
-> -> 10 `i `uc
"14
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 62 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
"15
-> -> 0 `i `uc
-> -> 64 `i `uc
-> -> 48 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"16
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
"17
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"18
-> -> 64 `i `uc
-> -> 48 `i `uc
-> -> 28 `i `uc
-> -> 6 `i `uc
-> -> 1 `i `uc
"19
-> -> 127 `i `uc
-> -> 97 `i `uc
-> -> 93 `i `uc
-> -> 67 `i `uc
-> -> 127 `i `uc
"20
-> -> 4 `i `uc
-> -> 66 `i `uc
-> -> 127 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
"21
-> -> 98 `i `uc
-> -> 81 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 70 `i `uc
"22
-> -> 96 `i `uc
-> -> 65 `i `uc
-> -> 73 `i `uc
-> -> 77 `i `uc
-> -> 59 `i `uc
"23
-> -> 15 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 126 `i `uc
-> -> 8 `i `uc
"24
-> -> 32 `i `uc
-> -> 71 `i `uc
-> -> 69 `i `uc
-> -> 37 `i `uc
-> -> 25 `i `uc
"25
-> -> 60 `i `uc
-> -> 74 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 96 `i `uc
"26
-> -> 1 `i `uc
-> -> 113 `i `uc
-> -> 25 `i `uc
-> -> 13 `i `uc
-> -> 7 `i `uc
"27
-> -> 54 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 54 `i `uc
"28
-> -> 6 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 62 `i `uc
"29
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 20 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"30
-> -> 0 `i `uc
-> -> 64 `i `uc
-> -> 52 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"31
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 20 `i `uc
-> -> 34 `i `uc
-> -> 0 `i `uc
"32
-> -> 0 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 0 `i `uc
"33
-> -> 0 `i `uc
-> -> 34 `i `uc
-> -> 20 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
"34
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 81 `i `uc
-> -> 9 `i `uc
-> -> 6 `i `uc
"35
-> -> 46 `i `uc
-> -> 65 `i `uc
-> -> 93 `i `uc
-> -> 85 `i `uc
-> -> 30 `i `uc
"36
-> -> 126 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 126 `i `uc
"37
-> -> 65 `i `uc
-> -> 127 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 54 `i `uc
"38
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
"39
-> -> 65 `i `uc
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 62 `i `uc
"40
-> -> 127 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 65 `i `uc
"41
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 1 `i `uc
"42
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 73 `i `uc
-> -> 121 `i `uc
"43
-> -> 127 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 127 `i `uc
"44
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"45
-> -> 96 `i `uc
-> -> 64 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 63 `i `uc
"46
-> -> 127 `i `uc
-> -> 8 `i `uc
-> -> 28 `i `uc
-> -> 54 `i `uc
-> -> 99 `i `uc
"47
-> -> 127 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
"48
-> -> 127 `i `uc
-> -> 6 `i `uc
-> -> 12 `i `uc
-> -> 6 `i `uc
-> -> 127 `i `uc
"49
-> -> 127 `i `uc
-> -> 6 `i `uc
-> -> 28 `i `uc
-> -> 48 `i `uc
-> -> 127 `i `uc
"50
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
-> -> 127 `i `uc
"51
-> -> 1 `i `uc
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 6 `i `uc
"52
-> -> 62 `i `uc
-> -> 65 `i `uc
-> -> 81 `i `uc
-> -> 33 `i `uc
-> -> 94 `i `uc
"53
-> -> 127 `i `uc
-> -> 9 `i `uc
-> -> 25 `i `uc
-> -> 41 `i `uc
-> -> 70 `i `uc
"54
-> -> 70 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 49 `i `uc
"55
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 127 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
"56
-> -> 63 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 63 `i `uc
"57
-> -> 127 `i `uc
-> -> 96 `i `uc
-> -> 56 `i `uc
-> -> 14 `i `uc
-> -> 3 `i `uc
"58
-> -> 63 `i `uc
-> -> 64 `i `uc
-> -> 56 `i `uc
-> -> 64 `i `uc
-> -> 63 `i `uc
"59
-> -> 99 `i `uc
-> -> 54 `i `uc
-> -> 28 `i `uc
-> -> 54 `i `uc
-> -> 99 `i `uc
"60
-> -> 3 `i `uc
-> -> 14 `i `uc
-> -> 120 `i `uc
-> -> 14 `i `uc
-> -> 3 `i `uc
"61
-> -> 65 `i `uc
-> -> 113 `i `uc
-> -> 93 `i `uc
-> -> 71 `i `uc
-> -> 65 `i `uc
"62
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 65 `i `uc
-> -> 65 `i `uc
"63
-> -> 1 `i `uc
-> -> 6 `i `uc
-> -> 28 `i `uc
-> -> 48 `i `uc
-> -> 64 `i `uc
"65
-> -> 4 `i `uc
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 4 `i `uc
"66
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
-> -> 64 `i `uc
"67
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 0 `i `uc
..
]
[; ;fonts.h: 2: const uint8_t capFont[] = {
[; ;fonts.h: 3: 0x00, 0x00, 0x00, 0x00, 0x00 ,
[; ;fonts.h: 4: 0x00, 0x00, 0x5f, 0x00, 0x00 ,
[; ;fonts.h: 5: 0x00, 0x07, 0x00, 0x07, 0x00 ,
[; ;fonts.h: 6: 0x12, 0x3f, 0x12, 0x3f, 0x12 ,
[; ;fonts.h: 7: 0x04, 0x25, 0x6b, 0x25, 0x10 ,
[; ;fonts.h: 8: 0x46, 0x36, 0x1c, 0x36, 0x31 ,
[; ;fonts.h: 9: 0x36, 0x49, 0x59, 0x26, 0x50 ,
[; ;fonts.h: 10: 0x00, 0x00, 0x03, 0x00, 0x00 ,
[; ;fonts.h: 11: 0x00, 0x00, 0x3e, 0x41, 0x41 ,
[; ;fonts.h: 12: 0x41, 0x41, 0x3e, 0x00, 0x00 ,
[; ;fonts.h: 13: 0x0a, 0x04, 0x1f, 0x04, 0x0a ,
[; ;fonts.h: 14: 0x08, 0x08, 0x3e, 0x08, 0x08 ,
[; ;fonts.h: 15: 0x00, 0x40, 0x30, 0x00, 0x00 ,
[; ;fonts.h: 16: 0x00, 0x08, 0x08, 0x08, 0x00 ,
[; ;fonts.h: 17: 0x00, 0x00, 0x40, 0x00, 0x00 ,
[; ;fonts.h: 18: 0x40, 0x30, 0x1c, 0x06, 0x01 ,
[; ;fonts.h: 19: 0x7f, 0x61, 0x5d, 0x43, 0x7f ,
[; ;fonts.h: 20: 0x04, 0x42, 0x7f, 0x40, 0x00 ,
[; ;fonts.h: 21: 0x62, 0x51, 0x49, 0x49, 0x46 ,
[; ;fonts.h: 22: 0x60, 0x41, 0x49, 0x4d, 0x3b ,
[; ;fonts.h: 23: 0x0f, 0x08, 0x08, 0x7e, 0x08 ,
[; ;fonts.h: 24: 0x20, 0x47, 0x45, 0x25, 0x19 ,
[; ;fonts.h: 25: 0x3c, 0x4a, 0x49, 0x49, 0x60 ,
[; ;fonts.h: 26: 0x01, 0x71, 0x19, 0x0d, 0x07 ,
[; ;fonts.h: 27: 0x36, 0x49, 0x49, 0x49, 0x36 ,
[; ;fonts.h: 28: 0x06, 0x49, 0x49, 0x49, 0x3e ,
[; ;fonts.h: 29: 0x00, 0x00, 0x14, 0x00, 0x00 ,
[; ;fonts.h: 30: 0x00, 0x40, 0x34, 0x00, 0x00 ,
[; ;fonts.h: 31: 0x00, 0x08, 0x14, 0x22, 0x00 ,
[; ;fonts.h: 32: 0x00, 0x14, 0x14, 0x14, 0x00 ,
[; ;fonts.h: 33: 0x00, 0x22, 0x14, 0x08, 0x00 ,
[; ;fonts.h: 34: 0x02, 0x01, 0x51, 0x09, 0x06 ,
[; ;fonts.h: 35: 0x2e, 0x41, 0x5d, 0x55, 0x1e ,
[; ;fonts.h: 36: 0x7e, 0x09, 0x09, 0x09, 0x7e ,
[; ;fonts.h: 37: 0x41, 0x7f, 0x49, 0x49, 0x36 ,
[; ;fonts.h: 38: 0x3e, 0x41, 0x41, 0x41, 0x41 ,
[; ;fonts.h: 39: 0x41, 0x7f, 0x41, 0x41, 0x3e ,
[; ;fonts.h: 40: 0x7f, 0x49, 0x49, 0x49, 0x41 ,
[; ;fonts.h: 41: 0x7f, 0x09, 0x09, 0x09, 0x01 ,
[; ;fonts.h: 42: 0x3e, 0x41, 0x41, 0x49, 0x79 ,
[; ;fonts.h: 43: 0x7f, 0x08, 0x08, 0x08, 0x7f ,
[; ;fonts.h: 44: 0x00, 0x00, 0x7f, 0x00, 0x00 ,
[; ;fonts.h: 45: 0x60, 0x40, 0x41, 0x41, 0x3f ,
[; ;fonts.h: 46: 0x7f, 0x08, 0x1c, 0x36, 0x63 ,
[; ;fonts.h: 47: 0x7f, 0x40, 0x40, 0x40, 0x40 ,
[; ;fonts.h: 48: 0x7f, 0x06, 0x0c, 0x06, 0x7f ,
[; ;fonts.h: 49: 0x7f, 0x06, 0x1c, 0x30, 0x7f ,
[; ;fonts.h: 50: 0x7f, 0x41, 0x41, 0x41, 0x7f ,
[; ;fonts.h: 51: 0x01, 0x7f, 0x09, 0x09, 0x06 ,
[; ;fonts.h: 52: 0x3e, 0x41, 0x51, 0x21, 0x5e ,
[; ;fonts.h: 53: 0x7f, 0x09, 0x19, 0x29, 0x46 ,
[; ;fonts.h: 54: 0x46, 0x49, 0x49, 0x49, 0x31 ,
[; ;fonts.h: 55: 0x01, 0x01, 0x7f, 0x01, 0x01 ,
[; ;fonts.h: 56: 0x3f, 0x40, 0x40, 0x40, 0x3f ,
[; ;fonts.h: 57: 0x7f, 0x60, 0x38, 0x0e, 0x03 ,
[; ;fonts.h: 58: 0x3f, 0x40, 0x38, 0x40, 0x3f ,
[; ;fonts.h: 59: 0x63, 0x36, 0x1c, 0x36, 0x63 ,
[; ;fonts.h: 60: 0x03, 0x0e, 0x78, 0x0e, 0x03 ,
[; ;fonts.h: 61: 0x41, 0x71, 0x5d, 0x47, 0x41 ,
[; ;fonts.h: 62: 0x00, 0x00, 0x7f, 0x41, 0x41 ,
[; ;fonts.h: 63: 0x01, 0x06, 0x1c, 0x30, 0x40 ,
[; ;fonts.h: 65: 0x04, 0x02, 0x01, 0x02, 0x04 ,
[; ;fonts.h: 66: 0x40, 0x40, 0x40, 0x40, 0x40 ,
[; ;fonts.h: 67: 0x00, 0x00, 0x01, 0x02, 0x00 };
"13 OLED.c
[v _init_OLED `(v ~T0 @X0 1 ef ]
"14
{
[; ;OLED.c: 13: void init_OLED(void)
[; ;OLED.c: 14: {
[e :U _init_OLED ]
[f ]
[; ;OLED.c: 15: transmitCommand(0xAE);
"15
[e ( _transmitCommand (1 -> -> 174 `i `uc ]
[; ;OLED.c: 16: transmitCommand(0x20);
"16
[e ( _transmitCommand (1 -> -> 32 `i `uc ]
[; ;OLED.c: 17: transmitCommand(0x10);
"17
[e ( _transmitCommand (1 -> -> 16 `i `uc ]
[; ;OLED.c: 18: transmitCommand(0xB0);
"18
[e ( _transmitCommand (1 -> -> 176 `i `uc ]
[; ;OLED.c: 19: transmitCommand(0xC8);
"19
[e ( _transmitCommand (1 -> -> 200 `i `uc ]
[; ;OLED.c: 20: transmitCommand(0x00);
"20
[e ( _transmitCommand (1 -> -> 0 `i `uc ]
[; ;OLED.c: 21: transmitCommand(0x10);
"21
[e ( _transmitCommand (1 -> -> 16 `i `uc ]
[; ;OLED.c: 22: transmitCommand(0x40);
"22
[e ( _transmitCommand (1 -> -> 64 `i `uc ]
[; ;OLED.c: 23: transmitCommand(0x81);
"23
[e ( _transmitCommand (1 -> -> 129 `i `uc ]
[; ;OLED.c: 24: transmitCommand(0x7F);
"24
[e ( _transmitCommand (1 -> -> 127 `i `uc ]
[; ;OLED.c: 26: transmitCommand(0xA1);
"26
[e ( _transmitCommand (1 -> -> 161 `i `uc ]
[; ;OLED.c: 27: transmitCommand(0xA6);
"27
[e ( _transmitCommand (1 -> -> 166 `i `uc ]
[; ;OLED.c: 28: transmitCommand(0xA8);
"28
[e ( _transmitCommand (1 -> -> 168 `i `uc ]
[; ;OLED.c: 29: transmitCommand(0x3F);
"29
[e ( _transmitCommand (1 -> -> 63 `i `uc ]
[; ;OLED.c: 30: transmitCommand(0xA4);
"30
[e ( _transmitCommand (1 -> -> 164 `i `uc ]
[; ;OLED.c: 31: transmitCommand(0xD3 );
"31
[e ( _transmitCommand (1 -> -> 211 `i `uc ]
[; ;OLED.c: 32: transmitCommand(0x00);
"32
[e ( _transmitCommand (1 -> -> 0 `i `uc ]
[; ;OLED.c: 33: transmitCommand(0xD5);
"33
[e ( _transmitCommand (1 -> -> 213 `i `uc ]
[; ;OLED.c: 34: transmitCommand(0xF0);
"34
[e ( _transmitCommand (1 -> -> 240 `i `uc ]
[; ;OLED.c: 35: transmitCommand(0xD9);
"35
[e ( _transmitCommand (1 -> -> 217 `i `uc ]
[; ;OLED.c: 36: transmitCommand(0x22);
"36
[e ( _transmitCommand (1 -> -> 34 `i `uc ]
[; ;OLED.c: 37: transmitCommand(0xDA);
"37
[e ( _transmitCommand (1 -> -> 218 `i `uc ]
[; ;OLED.c: 38: transmitCommand(0x12);
"38
[e ( _transmitCommand (1 -> -> 18 `i `uc ]
[; ;OLED.c: 39: transmitCommand(0xDB);
"39
[e ( _transmitCommand (1 -> -> 219 `i `uc ]
[; ;OLED.c: 40: transmitCommand(0x20);
"40
[e ( _transmitCommand (1 -> -> 32 `i `uc ]
[; ;OLED.c: 41: transmitCommand(0x8D);
"41
[e ( _transmitCommand (1 -> -> 141 `i `uc ]
[; ;OLED.c: 42: transmitCommand(0x14);
"42
[e ( _transmitCommand (1 -> -> 20 `i `uc ]
[; ;OLED.c: 44: transmitCommand(0xAF);
"44
[e ( _transmitCommand (1 -> -> 175 `i `uc ]
[; ;OLED.c: 48: }
"48
[e :UE 7 ]
}
"50
[v _powerUP `(v ~T0 @X0 1 ef ]
"51
{
[; ;OLED.c: 50: void powerUP()
[; ;OLED.c: 51: {
[e :U _powerUP ]
[f ]
[; ;OLED.c: 52: transmitCommand(0xA5);
"52
[e ( _transmitCommand (1 -> -> 165 `i `uc ]
[; ;OLED.c: 53: }
"53
[e :UE 8 ]
}
"55
[v _powerDown `(v ~T0 @X0 1 ef ]
"56
{
[; ;OLED.c: 55: void powerDown()
[; ;OLED.c: 56: {
[e :U _powerDown ]
[f ]
[; ;OLED.c: 57: transmitCommand(0xAE);
"57
[e ( _transmitCommand (1 -> -> 174 `i `uc ]
[; ;OLED.c: 58: }
"58
[e :UE 9 ]
}
"60
[v _clearPixel `uc ~T0 @X0 -> 32 `i e ]
[i _clearPixel
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[; ;OLED.c: 60: uint8_t clearPixel[32] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
"61
[v _leftOver `uc ~T0 @X0 -> 4 `i e ]
[i _leftOver
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[; ;OLED.c: 61: uint8_t leftOver[4] = {0x00,0x00,0x00,0x00};
"63
[v _clearRow `(v ~T0 @X0 1 ef1`uc ]
"64
{
[; ;OLED.c: 63: void clearRow(uint8_t row)
[; ;OLED.c: 64: {
[e :U _clearRow ]
"63
[v _row `uc ~T0 @X0 1 r1 ]
"64
[f ]
"65
[v _page `i ~T0 @X0 1 a ]
[; ;OLED.c: 65: int page = 0xB0 + row;
[e = _page + -> 176 `i -> _row `i ]
[; ;OLED.c: 66: transmitCommand(page);
"66
[e ( _transmitCommand (1 -> _page `uc ]
"67
[v _i `i ~T0 @X0 1 a ]
[; ;OLED.c: 67: int i = 0;
[e = _i -> 0 `i ]
[; ;OLED.c: 68: for (i = 0; i < 4;i++)
"68
{
[e = _i -> 0 `i ]
[e $ < _i -> 4 `i 11  ]
[e $U 12  ]
"69
[e :U 11 ]
[; ;OLED.c: 69: {
{
[; ;OLED.c: 70: transmitDATA(clearPixel,32);
"70
[e ( _transmitDATA (2 , &U _clearPixel -> -> 32 `i `uc ]
"71
}
"68
[e ++ _i -> 1 `i ]
[e $ < _i -> 4 `i 11  ]
[e :U 12 ]
"71
}
[; ;OLED.c: 71: }
[; ;OLED.c: 72: transmitDATA(leftOver,4);
"72
[e ( _transmitDATA (2 , &U _leftOver -> -> 4 `i `uc ]
[; ;OLED.c: 73: }
"73
[e :UE 10 ]
}
"75
[v _clearScreen `(v ~T0 @X0 1 ef ]
"76
{
[; ;OLED.c: 75: void clearScreen()
[; ;OLED.c: 76: {
[e :U _clearScreen ]
[f ]
"77
[v _i `i ~T0 @X0 1 a ]
[; ;OLED.c: 77: int i = 0;
[e = _i -> 0 `i ]
[; ;OLED.c: 78: for (i = 0;i < 8; i++)
"78
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 15  ]
[e $U 16  ]
"79
[e :U 15 ]
[; ;OLED.c: 79: {
{
[; ;OLED.c: 80: clearRow(i);
"80
[e ( _clearRow (1 -> _i `uc ]
[; ;OLED.c: 81: transmitCommand(0x00);
"81
[e ( _transmitCommand (1 -> -> 0 `i `uc ]
[; ;OLED.c: 82: transmitCommand(0x10);
"82
[e ( _transmitCommand (1 -> -> 16 `i `uc ]
"83
}
"78
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 15  ]
[e :U 16 ]
"83
}
[; ;OLED.c: 83: }
[; ;OLED.c: 84: }
"84
[e :UE 14 ]
}
"88
[v _setCursorPosition `(v ~T0 @X0 1 ef2`i`i ]
"89
{
[; ;OLED.c: 88: void setCursorPosition(int row,int column)
[; ;OLED.c: 89: {
[e :U _setCursorPosition ]
"88
[v _row `i ~T0 @X0 1 r1 ]
[v _column `i ~T0 @X0 1 r2 ]
"89
[f ]
"91
[v _page `i ~T0 @X0 1 a ]
[; ;OLED.c: 91: int page = 0xB0 + row;
[e = _page + -> 176 `i _row ]
[; ;OLED.c: 92: transmitCommand(page);
"92
[e ( _transmitCommand (1 -> _page `uc ]
[; ;OLED.c: 95: column += 2;
"95
[e =+ _column -> 2 `i ]
"96
[v _lowerAddressByte `i ~T0 @X0 1 a ]
[; ;OLED.c: 96: int lowerAddressByte = (column & 0x0F);
[e = _lowerAddressByte & _column -> 15 `i ]
"97
[v _upperAddressByte `i ~T0 @X0 1 a ]
[; ;OLED.c: 97: int upperAddressByte = (column >> 4) + 0x10;
[e = _upperAddressByte + >> _column -> 4 `i -> 16 `i ]
[; ;OLED.c: 98: transmitCommand(upperAddressByte);
"98
[e ( _transmitCommand (1 -> _upperAddressByte `uc ]
[; ;OLED.c: 99: transmitCommand(lowerAddressByte);
"99
[e ( _transmitCommand (1 -> _lowerAddressByte `uc ]
[; ;OLED.c: 100: }
"100
[e :UE 18 ]
}
"103
[v _transmitCommand `(v ~T0 @X0 1 ef1`uc ]
"104
{
[; ;OLED.c: 103: void transmitCommand(uint8_t command)
[; ;OLED.c: 104: {
[e :U _transmitCommand ]
"103
[v _command `uc ~T0 @X0 1 r1 ]
"104
[f ]
[; ;OLED.c: 105: i2c1_write1ByteRegister(0x3C,0x80,command);
"105
[e ( _i2c1_write1ByteRegister (3 , , -> -> 60 `i `uc -> -> 128 `i `uc _command ]
[; ;OLED.c: 106: }
"106
[e :UE 19 ]
}
"108
[v _transmitByte `(v ~T0 @X0 1 ef1`uc ]
"109
{
[; ;OLED.c: 108: void transmitByte(uint8_t data)
[; ;OLED.c: 109: {
[e :U _transmitByte ]
"108
[v _data `uc ~T0 @X0 1 r1 ]
"109
[f ]
[; ;OLED.c: 110: i2c1_write1ByteRegister(0x3C,0x40,data);
"110
[e ( _i2c1_write1ByteRegister (3 , , -> -> 60 `i `uc -> -> 64 `i `uc _data ]
[; ;OLED.c: 111: }
"111
[e :UE 20 ]
}
"113
[v _transmitDATA `(v ~T0 @X0 1 ef2`*uc`uc ]
"114
{
[; ;OLED.c: 113: void transmitDATA(uint8_t *data,uint8_t datalen)
[; ;OLED.c: 114: {
[e :U _transmitDATA ]
"113
[v _data `*uc ~T0 @X0 1 r1 ]
[v _datalen `uc ~T0 @X0 1 r2 ]
"114
[f ]
[; ;OLED.c: 115: i2c1_writeNBytes(0x3C,0x40,data,datalen);
"115
[e ( _i2c1_writeNBytes (4 , , , -> -> 60 `i `uc -> -> 64 `i `uc -> _data `*v _datalen ]
[; ;OLED.c: 116: }
"116
[e :UE 21 ]
}
"118
[v _print2Screen `(v ~T0 @X0 1 ef3`uc`uc`*uc ]
"119
{
[; ;OLED.c: 118: void print2Screen(uint8_t row , uint8_t column,char *data )
[; ;OLED.c: 119: {
[e :U _print2Screen ]
"118
[v _row `uc ~T0 @X0 1 r1 ]
[v _column `uc ~T0 @X0 1 r2 ]
[v _data `*uc ~T0 @X0 1 r3 ]
"119
[f ]
"120
[v _current_row `i ~T0 @X0 1 a ]
[v _current_column `i ~T0 @X0 1 a ]
"121
[v _pixelVal `uc ~T0 @X0 -> 5 `i a ]
[; ;OLED.c: 120: int current_row, current_column;
[; ;OLED.c: 121: uint8_t pixelVal[5];
[; ;OLED.c: 122: setCursorPosition(row,column);
"122
[e ( _setCursorPosition (2 , -> _row `i -> _column `i ]
[; ;OLED.c: 123: current_row = row;
"123
[e = _current_row -> _row `i ]
[; ;OLED.c: 124: current_column = column;
"124
[e = _current_column -> _column `i ]
"125
[v _i `i ~T0 @X0 1 a ]
[; ;OLED.c: 125: int i = 0;
[e = _i -> 0 `i ]
[; ;OLED.c: 126: for (i = 0; i < strlen(data) ; i++)
"126
{
[e = _i -> 0 `i ]
[e $U 26  ]
"127
[e :U 23 ]
[; ;OLED.c: 127: {
{
"128
[v _character `i ~T0 @X0 1 a ]
[; ;OLED.c: 128: int character = ((char)(data[i]) - ' ') * 5;
[e = _character -> * - -> *U + _data * -> _i `x -> -> # *U _data `i `x `ui -> 32 `ui -> -> 5 `i `ui `i ]
"129
[v _k `uc ~T0 @X0 1 a ]
[; ;OLED.c: 129: uint8_t k = 0;
[e = _k -> -> 0 `i `uc ]
[; ;OLED.c: 130: for (k = 0; k < 5; k++)
"130
{
[e = _k -> -> 0 `i `uc ]
[e $ < -> _k `i -> 5 `i 27  ]
[e $U 28  ]
"131
[e :U 27 ]
[; ;OLED.c: 131: {
{
[; ;OLED.c: 132: pixelVal[k] = capFont[character++];
"132
[e = *U + &U _pixelVal * -> _k `ux -> -> # *U &U _pixelVal `ui `ux *U + &U _capFont * -> -> ++ _character -> 1 `i `ui `ux -> -> # *U &U _capFont `ui `ux ]
"133
}
"130
[e ++ _k -> -> 1 `i `uc ]
[e $ < -> _k `i -> 5 `i 27  ]
[e :U 28 ]
"133
}
[; ;OLED.c: 133: }
[; ;OLED.c: 134: transmitDATA(pixelVal,5);
"134
[e ( _transmitDATA (2 , &U _pixelVal -> -> 5 `i `uc ]
[; ;OLED.c: 135: transmitByte(0x00);
"135
[e ( _transmitByte (1 -> -> 0 `i `uc ]
"138
}
"126
[e ++ _i -> 1 `i ]
[e :U 26 ]
[e $ < -> _i `ui ( _strlen (1 -> _data `*Cuc 23  ]
[e :U 24 ]
"138
}
[; ;OLED.c: 138: }
[; ;OLED.c: 140: }
"140
[e :UE 22 ]
}
